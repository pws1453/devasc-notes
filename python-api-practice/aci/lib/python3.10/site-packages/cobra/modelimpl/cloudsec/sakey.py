# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class SaKey(Mo):
    meta = ClassMeta("cobra.model.cloudsec.SaKey")

    meta.isAbstract = True
    meta.moClassName = "cloudsecSaKey"


    meta.moClassName = "cloudsecSaKey"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "SA Key"
    meta.writeAccessMask = 0x400400000001
    meta.readAccessMask = 0x400400000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.concreteSubClasses.add("cobra.model.cloudsec.SaTxKey")
    meta.concreteSubClasses.add("cobra.model.cloudsec.SaRxKey")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "assocNum", "assocNum", 42185, PropCategory.REGULAR)
    prop.label = "SA Key Association Number Type"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("assocNum", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cipher", "cipher", 42187, PropCategory.REGULAR)
    prop.label = "SA Key Cipher Suite"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "gcm-aes-xpn-256"
    prop._addConstant("gcm-aes-xpn-256", "256-bit-gcm-aes-suite-with-extended-packet-numbering", 0)
    meta.props.add("cipher", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "hwIndex", "hwIndex", 42486, PropCategory.REGULAR)
    prop.label = "SA Key Hardware SA Index"
    prop.isOper = True
    meta.props.add("hwIndex", prop)

    prop = PropMeta("str", "key", "key", 42186, PropCategory.REGULAR)
    prop.label = "SA Key Value"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isPassword = True
    meta.props.add("key", prop)

    prop = PropMeta("str", "keyControl", "keyControl", 45270, PropCategory.REGULAR)
    prop.label = "Key Controls"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("markedForDelete", "key-marked-for-delete", 1)
    prop._addConstant("none", "key-control-is-not-set", 0)
    meta.props.add("keyControl", prop)

    prop = PropMeta("str", "keyUpdTime", "keyUpdTime", 45588, PropCategory.REGULAR)
    prop.label = "SA Key Update Time"
    prop.isOper = True
    meta.props.add("keyUpdTime", prop)

    prop = PropMeta("str", "operRekeyNum", "operRekeyNum", 44535, PropCategory.REGULAR)
    prop.label = "SA Operational Rekey Number"
    prop.isOper = True
    meta.props.add("operRekeyNum", prop)

    prop = PropMeta("str", "operSt", "operSt", 42189, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("delete-success", "hardware-programming-delete-success", 3)
    prop._addConstant("down", "down", 1)
    prop._addConstant("hw-programming-in-progress", "hardware-programming-in-progress", 2)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("up", "up", 4)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 42190, PropCategory.REGULAR)
    prop.label = "SA Key Operational State Qualifier"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "up"
    prop._addConstant("delete-success", "success-while-deleting-in-hardware", 11)
    prop._addConstant("hw-error", "error-while-programming-in-hardware", 4)
    prop._addConstant("hw-programming-in-progress", "hardware-programming-is-in-progress", 3)
    prop._addConstant("hw-table-full-error", "error-while-programming-due-to-table-full-in-hardware", 10)
    prop._addConstant("if-vlan-encap-hw-error", "error-while-programming-interface-vlan-encap-in-hardware", 5)
    prop._addConstant("peer-addr-hw-error", "error-while-programming-peer-address-in-hardware", 6)
    prop._addConstant("sak-an-hw-error", "error-while-programming-sak-an-in-hardware", 8)
    prop._addConstant("sak-hw-error", "error-while-programming-sak-in-hardware", 7)
    prop._addConstant("sak-sci-hw-error", "error-while-programming-sak-sci-in-hardware", 9)
    prop._addConstant("unsupported-interface", "feature-unsupported-on-interface", 2)
    prop._addConstant("unsupported-platform", "unsupported-platform", 1)
    prop._addConstant("up", "up", 0)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "rekeyNum", "rekeyNum", 43434, PropCategory.REGULAR)
    prop.label = "SA Rekey Number"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("rekeyNum", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "sci", "sci", 42188, PropCategory.REGULAR)
    prop.label = "Secure Channel Identifier"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("sci", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

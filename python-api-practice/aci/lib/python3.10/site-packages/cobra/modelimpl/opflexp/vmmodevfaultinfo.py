# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class VmmODevFaultInfo(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.opflexp.VmmODevFaultInfo")

    meta.moClassName = "opflexpVmmODevFaultInfo"
    meta.rnFormat = "vmmodevfault-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Concrete class to raise faults for ODev Issues in vPOD AVE"
    meta.writeAccessMask = 0x25
    meta.readAccessMask = 0x25
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.opflex.ODev")

    meta.superClasses.add("cobra.model.opflex.AFaultConfig")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.opflex.AVleafFaultConfig")
    meta.superClasses.add("cobra.model.naming.NamedIdentifiedObject")
    meta.superClasses.add("cobra.model.opflex.AVleafFaultInfo")

    meta.rnPrefixes = [
        ('vmmodevfault-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "criticalVleafIssues", "criticalVleafIssues", 28487, PropCategory.REGULAR)
    prop.label = "Property to raise critical vleaf faults"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("ave-contract-limits", "ave-contract-limit-reached", 8589934592)
    prop._addConstant("ave-core", "ave-core-present", 536870912)
    prop._addConstant("ave-datapath-down", "ave-datapath-is-down", 4194304)
    prop._addConstant("ave-filter-limits", "ave-contract-rules-limit-reached", 4294967296)
    prop._addConstant("ave-forwarding-issue", "ave-forwarding-issue", 1073741824)
    prop._addConstant("ave-nfs-disconnected", "ave-nfs-disconnected", 2147483648)
    prop._addConstant("ave-redis-core", "ave-redis-core-present", 134217728)
    prop._addConstant("ave-redis-server-down", "ave-redis-server-is-down", 8388608)
    prop._addConstant("ave-storage-full", "ave-storage-is-full", 17179869184)
    prop._addConstant("ave-supervisord-core-present", "ave-supervisord-core-present", 268435456)
    prop._addConstant("ave-supervisord-down", "ave-supervisord-is-down", 33554432)
    prop._addConstant("ave-vmotion-agent-down", "ave-vmotion-agent-is-down", 16777216)
    prop._addConstant("ave-vmotion-core", "ave-vmotion-core-present", 67108864)
    prop._addConstant("bd-unsupported-operation", "unsupported-operation-on-bd", 137438953472)
    prop._addConstant("clear-all-issues", "clear-all-vleaf-issues", 274877906944)
    prop._addConstant("epg-unsupported-operation", "unsupported-operation-on-epg", 34359738368)
    prop._addConstant("host-kernel-core", "host-kernel-has-crashed", 262144)
    prop._addConstant("host-user-core", "host-process-has-crashed", 131072)
    prop._addConstant("none", "none", 0)
    prop._addConstant("opflex-channel-down", "switch-opflex-channel-down", 8)
    prop._addConstant("opflex-no-dvs-config", "switch-dvs-config-is-not-downloaded", 32)
    prop._addConstant("opflex-no-vmm-config", "switch-vmm-domain-config-is-not-downloaded", 16)
    prop._addConstant("pnic-no-lacp-pdu", "pnic-has-not-received-lacp-pdu", 1024)
    prop._addConstant("pnic-no-vtep", "pnic-is-not-pinned-to-vtep", 4096)
    prop._addConstant("pnic-unexpected-lacp-pdu", "pnic-has-received-unexpected-lacp-pdu", 2048)
    prop._addConstant("port-incorrect-epg", "port-epg-is-incorrect", 2)
    prop._addConstant("port-link-down", "port-link-is-down", 524288)
    prop._addConstant("port-nacked", "port-attach-is-nacked", 256)
    prop._addConstant("port-no-epg", "port-epg-is-not-downloaded", 1)
    prop._addConstant("port-not-att-acked", "port-attach-is-not-acked", 64)
    prop._addConstant("port-not-det-acked", "port-detach-is-not-acked", 128)
    prop._addConstant("port-quarantined", "port-is-quarantined", 1048576)
    prop._addConstant("port-zero-mac", "port-mac-not-assigned", 65536)
    prop._addConstant("rule-no-epg", "rule-epg-is-not-downloaded", 16384)
    prop._addConstant("rule-no-verified", "rule-is-not-verified", 32768)
    prop._addConstant("tenant-no-epcp", "tenant-ruleset-is-not-downloaded", 8192)
    prop._addConstant("vrf-unsupported-operation", "unsupported-operation-on-vrf", 68719476736)
    prop._addConstant("vtep-no-ip", "vtep-ip-is-not-assigned", 512)
    prop._addConstant("vtep-no-pnic", "vtep-is-not-pinned-to-pnic", 4)
    prop._addConstant("wait-inventory", "port-is-in-wait-inventory", 2097152)
    meta.props.add("criticalVleafIssues", prop)

    prop = PropMeta("str", "devId", "devId", 25476, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("devId", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "encap", "encap", 25477, PropCategory.REGULAR)
    prop.label = "encap"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("encap", prop)

    prop = PropMeta("str", "faultDesc", "faultDesc", 25473, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("faultDesc", prop)

    prop = PropMeta("str", "hostName", "hostName", 25899, PropCategory.REGULAR)
    prop.label = "Fqdn of the Host"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("hostName", prop)

    prop = PropMeta("str", "id", "id", 5586, PropCategory.REGULAR)
    prop.label = "Id"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "mac", "mac", 25478, PropCategory.REGULAR)
    prop.label = "MacAddress"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("mac", prop)

    prop = PropMeta("str", "minorVleafIssues", "minorVleafIssues", 28486, PropCategory.REGULAR)
    prop.label = "Property to raise minor vleaf faults"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("ave-contract-limits", "ave-contract-limit-reached", 8589934592)
    prop._addConstant("ave-core", "ave-core-present", 536870912)
    prop._addConstant("ave-datapath-down", "ave-datapath-is-down", 4194304)
    prop._addConstant("ave-filter-limits", "ave-contract-rules-limit-reached", 4294967296)
    prop._addConstant("ave-forwarding-issue", "ave-forwarding-issue", 1073741824)
    prop._addConstant("ave-nfs-disconnected", "ave-nfs-disconnected", 2147483648)
    prop._addConstant("ave-redis-core", "ave-redis-core-present", 134217728)
    prop._addConstant("ave-redis-server-down", "ave-redis-server-is-down", 8388608)
    prop._addConstant("ave-storage-full", "ave-storage-is-full", 17179869184)
    prop._addConstant("ave-supervisord-core-present", "ave-supervisord-core-present", 268435456)
    prop._addConstant("ave-supervisord-down", "ave-supervisord-is-down", 33554432)
    prop._addConstant("ave-vmotion-agent-down", "ave-vmotion-agent-is-down", 16777216)
    prop._addConstant("ave-vmotion-core", "ave-vmotion-core-present", 67108864)
    prop._addConstant("bd-unsupported-operation", "unsupported-operation-on-bd", 137438953472)
    prop._addConstant("clear-all-issues", "clear-all-vleaf-issues", 274877906944)
    prop._addConstant("epg-unsupported-operation", "unsupported-operation-on-epg", 34359738368)
    prop._addConstant("host-kernel-core", "host-kernel-has-crashed", 262144)
    prop._addConstant("host-user-core", "host-process-has-crashed", 131072)
    prop._addConstant("none", "none", 0)
    prop._addConstant("opflex-channel-down", "switch-opflex-channel-down", 8)
    prop._addConstant("opflex-no-dvs-config", "switch-dvs-config-is-not-downloaded", 32)
    prop._addConstant("opflex-no-vmm-config", "switch-vmm-domain-config-is-not-downloaded", 16)
    prop._addConstant("pnic-no-lacp-pdu", "pnic-has-not-received-lacp-pdu", 1024)
    prop._addConstant("pnic-no-vtep", "pnic-is-not-pinned-to-vtep", 4096)
    prop._addConstant("pnic-unexpected-lacp-pdu", "pnic-has-received-unexpected-lacp-pdu", 2048)
    prop._addConstant("port-incorrect-epg", "port-epg-is-incorrect", 2)
    prop._addConstant("port-link-down", "port-link-is-down", 524288)
    prop._addConstant("port-nacked", "port-attach-is-nacked", 256)
    prop._addConstant("port-no-epg", "port-epg-is-not-downloaded", 1)
    prop._addConstant("port-not-att-acked", "port-attach-is-not-acked", 64)
    prop._addConstant("port-not-det-acked", "port-detach-is-not-acked", 128)
    prop._addConstant("port-quarantined", "port-is-quarantined", 1048576)
    prop._addConstant("port-zero-mac", "port-mac-not-assigned", 65536)
    prop._addConstant("rule-no-epg", "rule-epg-is-not-downloaded", 16384)
    prop._addConstant("rule-no-verified", "rule-is-not-verified", 32768)
    prop._addConstant("tenant-no-epcp", "tenant-ruleset-is-not-downloaded", 8192)
    prop._addConstant("vrf-unsupported-operation", "unsupported-operation-on-vrf", 68719476736)
    prop._addConstant("vtep-no-ip", "vtep-ip-is-not-assigned", 512)
    prop._addConstant("vtep-no-pnic", "vtep-is-not-pinned-to-pnic", 4)
    prop._addConstant("wait-inventory", "port-is-in-wait-inventory", 2097152)
    meta.props.add("minorVleafIssues", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 44519, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 44515, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "setCriticalVleafIssues", "setCriticalVleafIssues", 28482, PropCategory.REGULAR)
    prop.label = "Policy DN corresponding to this task"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("setCriticalVleafIssues", prop)

    prop = PropMeta("str", "setMinorVleafIssues", "setMinorVleafIssues", 28480, PropCategory.REGULAR)
    prop.label = "Policy DN corresponding to this task"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("setMinorVleafIssues", prop)

    prop = PropMeta("str", "setVleafIssues", "setVleafIssues", 25474, PropCategory.REGULAR)
    prop.label = "Policy DN corresponding to this task"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("setVleafIssues", prop)

    prop = PropMeta("str", "setWarningVleafIssues", "setWarningVleafIssues", 28484, PropCategory.REGULAR)
    prop.label = "Policy DN corresponding to this task"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("setWarningVleafIssues", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "unsetCriticalVleafIssues", "unsetCriticalVleafIssues", 28483, PropCategory.REGULAR)
    prop.label = "Policy DN corresponding to this task"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("unsetCriticalVleafIssues", prop)

    prop = PropMeta("str", "unsetMinorVleafIssues", "unsetMinorVleafIssues", 28481, PropCategory.REGULAR)
    prop.label = "Policy DN corresponding to this task"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("unsetMinorVleafIssues", prop)

    prop = PropMeta("str", "unsetVleafIssues", "unsetVleafIssues", 25475, PropCategory.REGULAR)
    prop.label = "Policy DN corresponding to this task"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("unsetVleafIssues", prop)

    prop = PropMeta("str", "unsetWarningVleafIssues", "unsetWarningVleafIssues", 28485, PropCategory.REGULAR)
    prop.label = "Policy DN corresponding to this task"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("unsetWarningVleafIssues", prop)

    prop = PropMeta("str", "vleafFaultType", "vleafFaultType", 25479, PropCategory.REGULAR)
    prop.label = "Indicate the fault object type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("idep", "idep", 2)
    prop._addConstant("odev", "odev", 1)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("vleafFaultType", prop)

    prop = PropMeta("str", "vleafIssues", "vleafIssues", 25480, PropCategory.REGULAR)
    prop.label = "Property to raise vleaf faults"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("ave-contract-limits", "ave-contract-limit-reached", 8589934592)
    prop._addConstant("ave-core", "ave-core-present", 536870912)
    prop._addConstant("ave-datapath-down", "ave-datapath-is-down", 4194304)
    prop._addConstant("ave-filter-limits", "ave-contract-rules-limit-reached", 4294967296)
    prop._addConstant("ave-forwarding-issue", "ave-forwarding-issue", 1073741824)
    prop._addConstant("ave-nfs-disconnected", "ave-nfs-disconnected", 2147483648)
    prop._addConstant("ave-redis-core", "ave-redis-core-present", 134217728)
    prop._addConstant("ave-redis-server-down", "ave-redis-server-is-down", 8388608)
    prop._addConstant("ave-storage-full", "ave-storage-is-full", 17179869184)
    prop._addConstant("ave-supervisord-core-present", "ave-supervisord-core-present", 268435456)
    prop._addConstant("ave-supervisord-down", "ave-supervisord-is-down", 33554432)
    prop._addConstant("ave-vmotion-agent-down", "ave-vmotion-agent-is-down", 16777216)
    prop._addConstant("ave-vmotion-core", "ave-vmotion-core-present", 67108864)
    prop._addConstant("bd-unsupported-operation", "unsupported-operation-on-bd", 137438953472)
    prop._addConstant("clear-all-issues", "clear-all-vleaf-issues", 274877906944)
    prop._addConstant("epg-unsupported-operation", "unsupported-operation-on-epg", 34359738368)
    prop._addConstant("host-kernel-core", "host-kernel-has-crashed", 262144)
    prop._addConstant("host-user-core", "host-process-has-crashed", 131072)
    prop._addConstant("none", "none", 0)
    prop._addConstant("opflex-channel-down", "switch-opflex-channel-down", 8)
    prop._addConstant("opflex-no-dvs-config", "switch-dvs-config-is-not-downloaded", 32)
    prop._addConstant("opflex-no-vmm-config", "switch-vmm-domain-config-is-not-downloaded", 16)
    prop._addConstant("pnic-no-lacp-pdu", "pnic-has-not-received-lacp-pdu", 1024)
    prop._addConstant("pnic-no-vtep", "pnic-is-not-pinned-to-vtep", 4096)
    prop._addConstant("pnic-unexpected-lacp-pdu", "pnic-has-received-unexpected-lacp-pdu", 2048)
    prop._addConstant("port-incorrect-epg", "port-epg-is-incorrect", 2)
    prop._addConstant("port-link-down", "port-link-is-down", 524288)
    prop._addConstant("port-nacked", "port-attach-is-nacked", 256)
    prop._addConstant("port-no-epg", "port-epg-is-not-downloaded", 1)
    prop._addConstant("port-not-att-acked", "port-attach-is-not-acked", 64)
    prop._addConstant("port-not-det-acked", "port-detach-is-not-acked", 128)
    prop._addConstant("port-quarantined", "port-is-quarantined", 1048576)
    prop._addConstant("port-zero-mac", "port-mac-not-assigned", 65536)
    prop._addConstant("rule-no-epg", "rule-epg-is-not-downloaded", 16384)
    prop._addConstant("rule-no-verified", "rule-is-not-verified", 32768)
    prop._addConstant("tenant-no-epcp", "tenant-ruleset-is-not-downloaded", 8192)
    prop._addConstant("vrf-unsupported-operation", "unsupported-operation-on-vrf", 68719476736)
    prop._addConstant("vtep-no-ip", "vtep-ip-is-not-assigned", 512)
    prop._addConstant("vtep-no-pnic", "vtep-is-not-pinned-to-pnic", 4)
    prop._addConstant("wait-inventory", "port-is-in-wait-inventory", 2097152)
    meta.props.add("vleafIssues", prop)

    prop = PropMeta("str", "warningVleafIssues", "warningVleafIssues", 28488, PropCategory.REGULAR)
    prop.label = "Property to raise vleaf faults"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("ave-contract-limits", "ave-contract-limit-reached", 8589934592)
    prop._addConstant("ave-core", "ave-core-present", 536870912)
    prop._addConstant("ave-datapath-down", "ave-datapath-is-down", 4194304)
    prop._addConstant("ave-filter-limits", "ave-contract-rules-limit-reached", 4294967296)
    prop._addConstant("ave-forwarding-issue", "ave-forwarding-issue", 1073741824)
    prop._addConstant("ave-nfs-disconnected", "ave-nfs-disconnected", 2147483648)
    prop._addConstant("ave-redis-core", "ave-redis-core-present", 134217728)
    prop._addConstant("ave-redis-server-down", "ave-redis-server-is-down", 8388608)
    prop._addConstant("ave-storage-full", "ave-storage-is-full", 17179869184)
    prop._addConstant("ave-supervisord-core-present", "ave-supervisord-core-present", 268435456)
    prop._addConstant("ave-supervisord-down", "ave-supervisord-is-down", 33554432)
    prop._addConstant("ave-vmotion-agent-down", "ave-vmotion-agent-is-down", 16777216)
    prop._addConstant("ave-vmotion-core", "ave-vmotion-core-present", 67108864)
    prop._addConstant("bd-unsupported-operation", "unsupported-operation-on-bd", 137438953472)
    prop._addConstant("clear-all-issues", "clear-all-vleaf-issues", 274877906944)
    prop._addConstant("epg-unsupported-operation", "unsupported-operation-on-epg", 34359738368)
    prop._addConstant("host-kernel-core", "host-kernel-has-crashed", 262144)
    prop._addConstant("host-user-core", "host-process-has-crashed", 131072)
    prop._addConstant("none", "none", 0)
    prop._addConstant("opflex-channel-down", "switch-opflex-channel-down", 8)
    prop._addConstant("opflex-no-dvs-config", "switch-dvs-config-is-not-downloaded", 32)
    prop._addConstant("opflex-no-vmm-config", "switch-vmm-domain-config-is-not-downloaded", 16)
    prop._addConstant("pnic-no-lacp-pdu", "pnic-has-not-received-lacp-pdu", 1024)
    prop._addConstant("pnic-no-vtep", "pnic-is-not-pinned-to-vtep", 4096)
    prop._addConstant("pnic-unexpected-lacp-pdu", "pnic-has-received-unexpected-lacp-pdu", 2048)
    prop._addConstant("port-incorrect-epg", "port-epg-is-incorrect", 2)
    prop._addConstant("port-link-down", "port-link-is-down", 524288)
    prop._addConstant("port-nacked", "port-attach-is-nacked", 256)
    prop._addConstant("port-no-epg", "port-epg-is-not-downloaded", 1)
    prop._addConstant("port-not-att-acked", "port-attach-is-not-acked", 64)
    prop._addConstant("port-not-det-acked", "port-detach-is-not-acked", 128)
    prop._addConstant("port-quarantined", "port-is-quarantined", 1048576)
    prop._addConstant("port-zero-mac", "port-mac-not-assigned", 65536)
    prop._addConstant("rule-no-epg", "rule-epg-is-not-downloaded", 16384)
    prop._addConstant("rule-no-verified", "rule-is-not-verified", 32768)
    prop._addConstant("tenant-no-epcp", "tenant-ruleset-is-not-downloaded", 8192)
    prop._addConstant("vrf-unsupported-operation", "unsupported-operation-on-vrf", 68719476736)
    prop._addConstant("vtep-no-ip", "vtep-ip-is-not-assigned", 512)
    prop._addConstant("vtep-no-pnic", "vtep-is-not-pinned-to-pnic", 4)
    prop._addConstant("wait-inventory", "port-is-in-wait-inventory", 2097152)
    meta.props.add("warningVleafIssues", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class MsgStatsv6(Mo):
    """
    

    """

    meta = ClassMeta("cobra.model.dhcp.MsgStatsv6")

    meta.moClassName = "dhcpMsgStatsv6"
    meta.rnFormat = "msgstatsv6-%(typev6)s"
    meta.category = MoCategory.REGULAR
    meta.label = "DHCPv6 Message Statistics"
    meta.writeAccessMask = 0x8000000000001
    meta.readAccessMask = 0x8000000000001
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))

    meta.parentClasses.add("cobra.model.dhcp.RelayIf")
    meta.parentClasses.add("cobra.model.dhcp.ClientIf")

    meta.rnPrefixes = [
        ('msgstatsv6-', True),
    ]

    prop = PropMeta("str", "annotation", "annotation", 38230, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 40369, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "pktDropv6", "pktDropv6", 19796, PropCategory.REGULAR)
    prop.label = "Ipv6 Packets Dropped"
    prop.isOper = True
    meta.props.add("pktDropv6", prop)

    prop = PropMeta("str", "pktRcvdv6", "pktRcvdv6", 19794, PropCategory.REGULAR)
    prop.label = "Ipv6 Packets Received"
    prop.isOper = True
    meta.props.add("pktRcvdv6", prop)

    prop = PropMeta("str", "pktSentv6", "pktSentv6", 19795, PropCategory.REGULAR)
    prop.label = "Ipv6 Packets Sent"
    prop.isOper = True
    meta.props.add("pktSentv6", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "typev6", "typev6", 19793, PropCategory.REGULAR)
    prop.label = "Ipv6 Message Type"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.defaultValue = 1
    prop.defaultValueStr = "solicit"
    prop._addConstant("advertise", "advertise", 2)
    prop._addConstant("confirm", "confirm", 4)
    prop._addConstant("decline", "decline", 9)
    prop._addConstant("information_request", "information_request", 11)
    prop._addConstant("invalid", "invalid", 255)
    prop._addConstant("rebind", "rebind", 6)
    prop._addConstant("reconfigure", "reconfigure", 10)
    prop._addConstant("relay_forw", "relay_forw", 12)
    prop._addConstant("relay_repl", "relay_repl", 13)
    prop._addConstant("release", "release", 8)
    prop._addConstant("renew", "renew", 5)
    prop._addConstant("reply", "reply", 7)
    prop._addConstant("request", "request", 3)
    prop._addConstant("solicit", "solicit", 1)
    meta.props.add("typev6", prop)

    meta.namingProps.append(getattr(meta.props, "typev6"))

    def __init__(self, parentMoOrDn, typev6, markDirty=True, **creationProps):
        namingVals = [typev6]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

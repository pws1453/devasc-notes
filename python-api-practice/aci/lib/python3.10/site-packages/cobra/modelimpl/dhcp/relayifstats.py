# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class RelayIfStats(Mo):
    """
    The relay interface statistics.

    """

    meta = ClassMeta("cobra.model.dhcp.RelayIfStats")

    meta.moClassName = "dhcpRelayIfStats"
    meta.rnFormat = "stat"
    meta.category = MoCategory.REGULAR
    meta.label = "Relay Interface Statistics"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))

    meta.parentClasses.add("cobra.model.dhcp.RelayIf")

    meta.rnPrefixes = [
        ('stat', False),
    ]

    prop = PropMeta("str", "annotation", "annotation", 37752, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 39891, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "ifErrDrop", "ifErrDrop", 2928, PropCategory.REGULAR)
    prop.label = "Interface Error Drop Count"
    prop.isOper = True
    meta.props.add("ifErrDrop", prop)

    prop = PropMeta("str", "invalidMsgTypeDrop", "invalidMsgTypeDrop", 2927, PropCategory.REGULAR)
    prop.label = "Invalid Message Type Drop Count"
    prop.isOper = True
    meta.props.add("invalidMsgTypeDrop", prop)

    prop = PropMeta("str", "malformPktDrop", "malformPktDrop", 2934, PropCategory.REGULAR)
    prop.label = "Malformed Packet Drop Count"
    prop.isOper = True
    meta.props.add("malformPktDrop", prop)

    prop = PropMeta("str", "maxHopExceedDrop", "maxHopExceedDrop", 2932, PropCategory.REGULAR)
    prop.label = "Max Hop Exceeded Drop Count"
    prop.isOper = True
    meta.props.add("maxHopExceedDrop", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "opt82FailDrop", "opt82FailDrop", 2933, PropCategory.REGULAR)
    prop.label = "Option 82 Validation Fail Drop Count"
    prop.isOper = True
    meta.props.add("opt82FailDrop", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "sendClientFail", "sendClientFail", 2930, PropCategory.REGULAR)
    prop.label = "Send Failure to Client Drop Count"
    prop.isOper = True
    meta.props.add("sendClientFail", prop)

    prop = PropMeta("str", "sendServerFail", "sendServerFail", 2929, PropCategory.REGULAR)
    prop.label = "Send Failure to Server Drop Count"
    prop.isOper = True
    meta.props.add("sendServerFail", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "unkServerVrfIntfDrop", "unkServerVrfIntfDrop", 2931, PropCategory.REGULAR)
    prop.label = "Unknown Server Vrf/Intf Drop Count"
    prop.isOper = True
    meta.props.add("unkServerVrfIntfDrop", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class WebServer(Mo):
    """
    

    """

    meta = ClassMeta("cobra.model.comm.WebServer")

    meta.moClassName = "commWebServer"
    meta.rnFormat = "web"
    meta.category = MoCategory.REGULAR
    meta.label = "Web Server"
    meta.writeAccessMask = 0x3
    meta.readAccessMask = 0x80000000003
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.childClasses.add("cobra.model.comm.RequestCont")
    meta.childClasses.add("cobra.model.comm.WebConnHist1qtr")
    meta.childClasses.add("cobra.model.comm.WebConnStates1year")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.comm.WebConn1year")
    meta.childClasses.add("cobra.model.comm.WebConn5min")
    meta.childClasses.add("cobra.model.comm.WebReq15min")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.comm.WebConnStates1qtr")
    meta.childClasses.add("cobra.model.comm.WebConn1mo")
    meta.childClasses.add("cobra.model.comm.WebReqHist1w")
    meta.childClasses.add("cobra.model.comm.WebConnHist1mo")
    meta.childClasses.add("cobra.model.comm.WebReq1w")
    meta.childClasses.add("cobra.model.comm.WebConnHist5min")
    meta.childClasses.add("cobra.model.comm.WebReq1qtr")
    meta.childClasses.add("cobra.model.comm.WebConnHist1year")
    meta.childClasses.add("cobra.model.comm.WebReq1d")
    meta.childClasses.add("cobra.model.comm.WebConnStates5min")
    meta.childClasses.add("cobra.model.comm.WebConnStatesHist15min")
    meta.childClasses.add("cobra.model.comm.WebReq1h")
    meta.childClasses.add("cobra.model.comm.WebReqHist1qtr")
    meta.childClasses.add("cobra.model.comm.WebReqHist1mo")
    meta.childClasses.add("cobra.model.comm.WebConn1w")
    meta.childClasses.add("cobra.model.comm.WebConnStates15min")
    meta.childClasses.add("cobra.model.comm.WebConnStatesHist1h")
    meta.childClasses.add("cobra.model.comm.WebConnStates1d")
    meta.childClasses.add("cobra.model.comm.WebConnStates1h")
    meta.childClasses.add("cobra.model.comm.WebConnHist15min")
    meta.childClasses.add("cobra.model.comm.WebReq1year")
    meta.childClasses.add("cobra.model.comm.WebConnStatesHist1d")
    meta.childClasses.add("cobra.model.comm.WebReqHist5min")
    meta.childClasses.add("cobra.model.comm.WebConn1d")
    meta.childClasses.add("cobra.model.comm.WebConnStates1w")
    meta.childClasses.add("cobra.model.comm.WebReqHist15min")
    meta.childClasses.add("cobra.model.comm.WebReq5min")
    meta.childClasses.add("cobra.model.comm.WebConnStatesHist1year")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.comm.ApiAvgRespTime")
    meta.childClasses.add("cobra.model.comm.WebReqHist1d")
    meta.childClasses.add("cobra.model.comm.WebConn1h")
    meta.childClasses.add("cobra.model.comm.WebConnHist1h")
    meta.childClasses.add("cobra.model.comm.WebConn1qtr")
    meta.childClasses.add("cobra.model.comm.WebConnStatesHist5min")
    meta.childClasses.add("cobra.model.comm.WebConnStatesHist1mo")
    meta.childClasses.add("cobra.model.comm.WebConnHist1d")
    meta.childClasses.add("cobra.model.comm.WebReq1mo")
    meta.childClasses.add("cobra.model.comm.WebConnStates1mo")
    meta.childClasses.add("cobra.model.comm.WebReqHist1year")
    meta.childClasses.add("cobra.model.comm.WebReqHist1h")
    meta.childClasses.add("cobra.model.comm.WebConn15min")
    meta.childClasses.add("cobra.model.comm.WebConnStatesHist1w")
    meta.childClasses.add("cobra.model.comm.WebConnHist1w")
    meta.childClasses.add("cobra.model.comm.WebConnStatesHist1qtr")

    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesHist15min", "HDcommWebConnStates15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesHist1year", "HDcommWebConnStates1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStates1year", "CDcommWebConnStates1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStates15min", "CDcommWebConnStates15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesHist5min", "HDcommWebConnStates5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesHist1qtr", "HDcommWebConnStates1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStates1qtr", "CDcommWebConnStates1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStates5min", "CDcommWebConnStates5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesHist1mo", "HDcommWebConnStates1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesHist1h", "HDcommWebConnStates1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesHist1d", "HDcommWebConnStates1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStates1mo", "CDcommWebConnStates1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesHist1w", "HDcommWebConnStates1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStates1d", "CDcommWebConnStates1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStates1h", "CDcommWebConnStates1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStates1w", "CDcommWebConnStates1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnHist1year", "HDcommWebConn1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnHist15min", "HDcommWebConn15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnHist1qtr", "HDcommWebConn1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConn1year", "CDcommWebConn1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnHist5min", "HDcommWebConn5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqHist15min", "HDcommWebReq15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqHist1year", "HDcommWebReq1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConn15min", "CDcommWebConn15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConn5min", "CDcommWebConn5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReq15min", "CDcommWebReq15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnHist1mo", "HDcommWebConn1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqHist1qtr", "HDcommWebReq1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReq1year", "CDcommWebReq1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqHist5min", "HDcommWebReq5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConn1qtr", "CDcommWebConn1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConn1mo", "CDcommWebConn1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReq1qtr", "CDcommWebReq1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqHist1mo", "HDcommWebReq1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReq5min", "CDcommWebReq5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnHist1h", "HDcommWebConn1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnHist1d", "HDcommWebConn1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnHist1w", "HDcommWebConn1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqHist1w", "HDcommWebReq1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConn1w", "CDcommWebConn1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConn1d", "CDcommWebConn1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqHist1d", "HDcommWebReq1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConn1h", "CDcommWebConn1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReq1mo", "CDcommWebReq1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqHist1h", "HDcommWebReq1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReq1w", "CDcommWebReq1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReq1d", "CDcommWebReq1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReq1h", "CDcommWebReq1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.ApiAvgRespTime", "apiAvgResp"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.RequestCont", "reqcont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.top.Root")
    meta.parentClasses.add("cobra.model.fabric.Node")

    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('web', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 19756, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 5577, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Fabric"

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

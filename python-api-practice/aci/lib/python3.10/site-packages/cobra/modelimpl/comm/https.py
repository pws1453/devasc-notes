# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Https(Mo):
    """
    HTTPS

    """

    meta = ClassMeta("cobra.model.comm.Https")

    meta.moClassName = "commHttps"
    meta.rnFormat = "https"
    meta.category = MoCategory.REGULAR
    meta.label = "HTTP SSL Configuration"
    meta.writeAccessMask = 0x3
    meta.readAccessMask = 0x80000000003
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.comm.WebConnAgHist1d")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.comm.WebConnAg1year")
    meta.childClasses.add("cobra.model.comm.WebReqAgHist1year")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.comm.WebConnStatesAgHist1w")
    meta.childClasses.add("cobra.model.comm.WebConnAgHist1h")
    meta.childClasses.add("cobra.model.comm.WebReqAgHist15min")
    meta.childClasses.add("cobra.model.comm.WebConnAgHist1w")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.comm.WebConnAgHist1mo")
    meta.childClasses.add("cobra.model.comm.WebProxy")
    meta.childClasses.add("cobra.model.comm.WebReqAg1year")
    meta.childClasses.add("cobra.model.comm.WebConnStatesAgHist1d")
    meta.childClasses.add("cobra.model.comm.WebConnStatesAgHist15min")
    meta.childClasses.add("cobra.model.comm.WebReqAgHist1mo")
    meta.childClasses.add("cobra.model.comm.WebConnStatesAg1d")
    meta.childClasses.add("cobra.model.comm.WebReqAg1d")
    meta.childClasses.add("cobra.model.comm.WebConnAg1d")
    meta.childClasses.add("cobra.model.comm.WebConnAgHist15min")
    meta.childClasses.add("cobra.model.comm.WebConnAg1h")
    meta.childClasses.add("cobra.model.comm.WebReqAgHist1w")
    meta.childClasses.add("cobra.model.comm.WebConnStatesAg1h")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.comm.WebConnStatesAg1qtr")
    meta.childClasses.add("cobra.model.comm.WebConnStatesAg1w")
    meta.childClasses.add("cobra.model.comm.WebReqAgHist1h")
    meta.childClasses.add("cobra.model.comm.WebConnAg1w")
    meta.childClasses.add("cobra.model.comm.WebConnAgHist1qtr")
    meta.childClasses.add("cobra.model.comm.WebConnStatesAg1year")
    meta.childClasses.add("cobra.model.comm.WebReqAg1h")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.tag.Annotation")
    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.comm.WebConnStatesAg1mo")
    meta.childClasses.add("cobra.model.comm.WebConnAg15min")
    meta.childClasses.add("cobra.model.comm.RsKeyRing")
    meta.childClasses.add("cobra.model.comm.WebConnAg1mo")
    meta.childClasses.add("cobra.model.comm.WebConnStatesAgHist1qtr")
    meta.childClasses.add("cobra.model.comm.WebReqAgHist1qtr")
    meta.childClasses.add("cobra.model.comm.WebReqAgHist1d")
    meta.childClasses.add("cobra.model.comm.WebReqAg1w")
    meta.childClasses.add("cobra.model.comm.RsClientCertCA")
    meta.childClasses.add("cobra.model.comm.WebConnAg1qtr")
    meta.childClasses.add("cobra.model.comm.WebReqAg1mo")
    meta.childClasses.add("cobra.model.comm.WebConnStatesAgHist1year")
    meta.childClasses.add("cobra.model.comm.WebConnAgHist1year")
    meta.childClasses.add("cobra.model.comm.Cipher")
    meta.childClasses.add("cobra.model.comm.WebConnStatesAgHist1mo")
    meta.childClasses.add("cobra.model.comm.WebConnStatesAg15min")
    meta.childClasses.add("cobra.model.comm.WebReqAg15min")
    meta.childClasses.add("cobra.model.comm.WebReqAg1qtr")
    meta.childClasses.add("cobra.model.comm.WebConnStatesAgHist1h")

    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesAgHist15min", "HDcommWebConnStatesAg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesAgHist1year", "HDcommWebConnStatesAg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesAg1year", "CDcommWebConnStatesAg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesAgHist1qtr", "HDcommWebConnStatesAg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesAg15min", "CDcommWebConnStatesAg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesAg1qtr", "CDcommWebConnStatesAg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesAgHist1mo", "HDcommWebConnStatesAg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesAgHist1w", "HDcommWebConnStatesAg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesAgHist1d", "HDcommWebConnStatesAg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesAg1mo", "CDcommWebConnStatesAg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesAgHist1h", "HDcommWebConnStatesAg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesAg1d", "CDcommWebConnStatesAg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesAg1h", "CDcommWebConnStatesAg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnStatesAg1w", "CDcommWebConnStatesAg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnAgHist15min", "HDcommWebConnAg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnAgHist1year", "HDcommWebConnAg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnAg1year", "CDcommWebConnAg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqAgHist1year", "HDcommWebReqAg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqAgHist15min", "HDcommWebReqAg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnAgHist1qtr", "HDcommWebConnAg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnAg15min", "CDcommWebConnAg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnAgHist1mo", "HDcommWebConnAg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqAg1year", "CDcommWebReqAg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqAgHist1qtr", "HDcommWebReqAg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnAg1qtr", "CDcommWebConnAg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqAg15min", "CDcommWebReqAg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnAgHist1d", "HDcommWebConnAg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnAgHist1h", "HDcommWebConnAg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnAgHist1w", "HDcommWebConnAg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqAgHist1mo", "HDcommWebReqAg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnAg1mo", "CDcommWebConnAg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqAg1qtr", "CDcommWebReqAg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnAg1d", "CDcommWebConnAg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnAg1h", "CDcommWebConnAg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqAgHist1w", "HDcommWebReqAg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqAgHist1h", "HDcommWebReqAg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebConnAg1w", "CDcommWebConnAg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqAgHist1d", "HDcommWebReqAg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqAg1mo", "CDcommWebReqAg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqAg1d", "CDcommWebReqAg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqAg1h", "CDcommWebReqAg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebReqAg1w", "CDcommWebReqAg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.RsClientCertCA", "rsclientCertCA"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.RsKeyRing", "rsKeyRing"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.Cipher", "cph-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comm.WebProxy", "wp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.comm.Pol")

    meta.superClasses.add("cobra.model.pol.Comp")
    meta.superClasses.add("cobra.model.comm.Comp")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.comm.Web")
    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('https', False),
    ]

    prop = PropMeta("str", "accessControlAllowCredential", "accessControlAllowCredential", 33388, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "disabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("accessControlAllowCredential", prop)

    prop = PropMeta("str", "accessControlAllowOrigins", "accessControlAllowOrigins", 17866, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 256)]
    prop.regex = ['[a-zA-Z0-9-_:/.,\\*\\s]+']
    prop.defaultValue = "http://127.0.0.1:8000"
    prop.defaultValueStr = "http://127.0.0.1:8000"
    meta.props.add("accessControlAllowOrigins", prop)

    prop = PropMeta("str", "adminSt", "adminSt", 1298, PropCategory.REGULAR)
    prop.label = "Admin State"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "annotation", "annotation", 37532, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cliOnlyMode", "cliOnlyMode", 47672, PropCategory.REGULAR)
    prop.label = "CLI only mode"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "disabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("cliOnlyMode", prop)

    prop = PropMeta("str", "clientCertAuthState", "clientCertAuthState", 42733, PropCategory.REGULAR)
    prop.label = "Client Cert Auth State"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "disabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("clientCertAuthState", prop)

    prop = PropMeta("str", "descr", "descr", 5582, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dhParam", "dhParam", 24294, PropCategory.REGULAR)
    prop.label = "DH Parameter"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("1024", "1024", 1)
    prop._addConstant("2048", "2048", 2)
    prop._addConstant("4096", "4096", 3)
    prop._addConstant("none", "none", 0)
    meta.props.add("dhParam", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 39671, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "globalThrottleRate", "globalThrottleRate", 52997, PropCategory.REGULAR)
    prop.label = "The maximum MO api calls allowed per unit time"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 10000)]
    prop.defaultValue = 10000
    prop.defaultValueStr = "10000"
    meta.props.add("globalThrottleRate", prop)

    prop = PropMeta("str", "globalThrottleSt", "globalThrottleSt", 52996, PropCategory.REGULAR)
    prop.label = "Throttle state for all clients without tag0 in header"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "disabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("globalThrottleSt", prop)

    prop = PropMeta("str", "globalThrottleUnit", "globalThrottleUnit", 52998, PropCategory.REGULAR)
    prop.label = "Unit of rate limit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.regex = ['[r]/[ms]']
    prop.defaultValue = "r/s"
    prop.defaultValueStr = "r/s"
    meta.props.add("globalThrottleUnit", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "maxRequestStatusCount", "maxRequestStatusCount", 19814, PropCategory.REGULAR)
    prop.label = "The maximum number of request status objects to keep"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 1024)]
    meta.props.add("maxRequestStatusCount", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14145, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 1296, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    prop.defaultValue = "https"
    prop.defaultValueStr = "https"
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "port", "port", 1297, PropCategory.REGULAR)
    prop.label = "Port"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 65535)]
    prop.defaultValue = 443
    prop.defaultValueStr = "443"
    meta.props.add("port", prop)

    prop = PropMeta("str", "proto", "proto", 1289, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "tcp"
    prop._addConstant("all", "all", 3)
    prop._addConstant("none", "none", 0)
    prop._addConstant("tcp", "tcp", 1)
    prop._addConstant("udp", "udp", 2)
    meta.props.add("proto", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "sslProtocols", "sslProtocols", 18247, PropCategory.REGULAR)
    prop.label = "SSL Protocols"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = "TLSv1.1,TLSv1.2"
    prop.defaultValueStr = "TLSv1.1,TLSv1.2"
    prop._addConstant("TLSv1", "tlsv1", 1)
    prop._addConstant("TLSv1.1", "tlsv1.1", 2)
    prop._addConstant("TLSv1.2", "tlsv1.2", 4)
    meta.props.add("sslProtocols", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "throttleRate", "throttleRate", 36782, PropCategory.REGULAR)
    prop.label = "The maximum login/refresh allowed per second"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 100)]
    prop.defaultValue = 2
    prop.defaultValueStr = "2"
    meta.props.add("throttleRate", prop)

    prop = PropMeta("str", "throttleSt", "throttleSt", 36781, PropCategory.REGULAR)
    prop.label = "Login/refresh throttle state"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("throttleSt", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    prop = PropMeta("str", "visoreAccess", "visoreAccess", 35417, PropCategory.REGULAR)
    prop.label = "Visore Access"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("visoreAccess", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Fabric"

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

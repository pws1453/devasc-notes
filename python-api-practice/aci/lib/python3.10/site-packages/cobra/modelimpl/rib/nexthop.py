# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Nexthop(Mo):
    meta = ClassMeta("cobra.model.rib.Nexthop")

    meta.isAbstract = True
    meta.moClassName = "ribNexthop"


    meta.moClassName = "ribNexthop"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "Nexthop record"
    meta.writeAccessMask = 0x8008421042001
    meta.readAccessMask = 0x8008421042001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.rib.RtRouteOwnerToNexthopAtt")

    meta.childNamesAndRnPrefix.append(("cobra.model.rib.RtRouteOwnerToNexthopAtt", "rtRouteOwnerToNexthopAtt"))

    meta.superClasses.add("cobra.model.nw.DbRec")
    meta.superClasses.add("cobra.model.l3.DbRec")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.rib.DbRec")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.GEp")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "Nhmetric", "Nhmetric", 19046, PropCategory.REGULAR)
    prop.label = "NhMetric"
    prop.isOper = True
    prop.range = [(1, 4294967295)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("Nhmetric", prop)

    prop = PropMeta("str", "Nhtag", "Nhtag", 19047, PropCategory.REGULAR)
    prop.label = "NhTag"
    prop.isOper = True
    prop.range = [(0, 4294967295)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("Nhtag", prop)

    prop = PropMeta("str", "active", "active", 17439, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("active", prop)

    prop = PropMeta("str", "addr", "addr", 17431, PropCategory.REGULAR)
    prop.label = "Nexthop Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("addr", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "createTs", "createTs", 17438, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("createTs", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "if", "if", 17432, PropCategory.REGULAR)
    prop.label = "Nexthop Interface"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("if", prop)

    prop = PropMeta("str", "metric", "metric", 17435, PropCategory.REGULAR)
    prop.label = "Metric"
    prop.isOper = True
    prop.range = [(1, 4294967295)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("metric", prop)

    prop = PropMeta("str", "name", "name", 16437, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "owner", "owner", 17430, PropCategory.REGULAR)
    prop.label = "Nexthop Owner"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("owner", prop)

    prop = PropMeta("str", "pref", "pref", 17434, PropCategory.REGULAR)
    prop.label = "Preference"
    prop.isOper = True
    prop.range = [(1, 65535)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("pref", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "routeType", "routeType", 17436, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "direct"
    prop._addConstant("coop", "coop", 30)
    prop._addConstant("direct", "direct", 1)
    prop._addConstant("discard", "discard", 23)
    prop._addConstant("ebgp", "ebgp", 20)
    prop._addConstant("eigrp-external", "eigrp-external", 25)
    prop._addConstant("eigrp-internal", "eigrp-internal", 24)
    prop._addConstant("embgp", "embgp", 22)
    prop._addConstant("ibgp", "ibgp", 19)
    prop._addConstant("imbgp", "imbgp", 21)
    prop._addConstant("isis-l1", "isis-l1", 5)
    prop._addConstant("isis-l1-ext", "isis-l1-ext", 32)
    prop._addConstant("isis-l1-int", "isis-l1-int", 31)
    prop._addConstant("isis-l2", "isis-l2", 6)
    prop._addConstant("local", "local", 33)
    prop._addConstant("mcast-static", "multicast-static", 3)
    prop._addConstant("ospf-inter", "ospf-inter", 8)
    prop._addConstant("ospf-intra", "ospf-intra", 7)
    prop._addConstant("ospf-nssa-type1", "ospf-nssa-type1", 11)
    prop._addConstant("ospf-nssa-type2", "ospf-nssa-type2", 12)
    prop._addConstant("ospf-type1", "ospf-type1", 9)
    prop._addConstant("ospf-type2", "ospf-type2", 10)
    prop._addConstant("ospfv3-inter", "ospfv3-inter", 14)
    prop._addConstant("ospfv3-intra", "ospfv3-intra", 13)
    prop._addConstant("ospfv3-nssa-type1", "ospfv3-nssa-type1", 17)
    prop._addConstant("ospfv3-nssa-type2", "ospfv3-nssa-type2", 18)
    prop._addConstant("ospfv3-type1", "ospfv3-type1", 15)
    prop._addConstant("ospfv3-type2", "ospfv3-type2", 16)
    prop._addConstant("rip", "rip", 4)
    prop._addConstant("static", "static", 2)
    meta.props.add("routeType", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tag", "tag", 17440, PropCategory.REGULAR)
    prop.label = "Tag"
    prop.isOper = True
    prop.range = [(0, 4294967295)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("tag", prop)

    prop = PropMeta("str", "type", "type", 17437, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "attached"
    prop._addConstant("attached", "attached", 1)
    prop._addConstant("direct", "direct", 4)
    prop._addConstant("limited-directed-bcast", "limited-or-directed-broadcast", 8)
    prop._addConstant("local", "local", 2)
    prop._addConstant("pervasive", "pervasive", 128)
    prop._addConstant("recursive", "recursive", 16)
    prop._addConstant("redist-only", "redist-only", 262144)
    prop._addConstant("table", "table", 32)
    prop._addConstant("wildcard", "wildcard", 64)
    meta.props.add("type", prop)

    prop = PropMeta("str", "vrf", "vrf", 17433, PropCategory.REGULAR)
    prop.label = "Nexthop VRF"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("vrf", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

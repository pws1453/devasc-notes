# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class VfcIf(Mo):
    """
     This objects hold information per vfc.  

    """

    meta = ClassMeta("cobra.model.fcoe.VfcIf")

    meta.moClassName = "fcoeVfcIf"
    meta.rnFormat = "vfc-[%(id)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "Vfc ID"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fcoe.VfcLogin")

    meta.childNamesAndRnPrefix.append(("cobra.model.fcoe.VfcLogin", "fcid-"))

    meta.parentClasses.add("cobra.model.fcoe.Inst")

    meta.superClasses.add("cobra.model.fcoe.If")

    meta.rnPrefixes = [
        ('vfc-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "fcId", "fcId", 45454, PropCategory.REGULAR)
    prop.label = "Interna flogi FcId."
    prop.isOper = True
    meta.props.add("fcId", prop)

    prop = PropMeta("str", "fcMap", "fcMap", 45456, PropCategory.REGULAR)
    prop.label = "FCOE Mac Address Prefix"
    prop.isOper = True
    meta.props.add("fcMap", prop)

    prop = PropMeta("str", "fcfPrio", "fcfPrio", 45457, PropCategory.REGULAR)
    prop.label = "FCF priority"
    prop.isOper = True
    prop.range = [(0, 255)]
    prop.defaultValue = 128
    prop.defaultValueStr = "128"
    meta.props.add("fcfPrio", prop)

    prop = PropMeta("str", "fipKaIntvl", "fipKaIntvl", 45455, PropCategory.REGULAR)
    prop.label = "Fip KeepAlive Interval"
    prop.isOper = True
    prop.range = [(4, 60)]
    prop.defaultValue = 8
    prop.defaultValueStr = "8"
    meta.props.add("fipKaIntvl", prop)

    prop = PropMeta("str", "id", "id", 24686, PropCategory.REGULAR)
    prop.label = "VFC If Id"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "mode", "mode", 45458, PropCategory.REGULAR)
    prop.label = "VFC mode"
    prop.isOper = True
    prop.defaultValue = 32
    prop.defaultValueStr = "f"
    prop._addConstant("all", "all", 65535)
    prop._addConstant("auto", "auto", 1)
    prop._addConstant("f", "f", 32)
    prop._addConstant("np", "np", 16384)
    prop._addConstant("tf", "tf", 67108864)
    prop._addConstant("tnp", "tnp", 134217728)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("mode", prop)

    prop = PropMeta("str", "peerMac", "peerMac", 45452, PropCategory.REGULAR)
    prop.label = "Peer Mac, used in VE."
    prop.isOper = True
    meta.props.add("peerMac", prop)

    prop = PropMeta("str", "peerWwn", "peerWwn", 45453, PropCategory.REGULAR)
    prop.label = "Peer WWN."
    prop.isOper = True
    meta.props.add("peerWwn", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "id"))
    getattr(meta.props, "id").needDelimiter = True

    def __init__(self, parentMoOrDn, id, markDirty=True, **creationProps):
        namingVals = [id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

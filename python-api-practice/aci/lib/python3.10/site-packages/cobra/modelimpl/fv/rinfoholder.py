# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class RInfoHolder(Mo):
    """
    An internal object for filtering security rules.

    """

    meta = ClassMeta("cobra.model.fv.RInfoHolder")

    meta.moClassName = "fvRInfoHolder"
    meta.rnFormat = "to-[%(toEpgDn)s]-subj-[%(subjDn)s]-flt-%(id)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Rule Info Holder"
    meta.writeAccessMask = 0x601
    meta.readAccessMask = 0x601
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.actrl.RuleHitPart1d")
    meta.childClasses.add("cobra.model.opflex.OvsContractPartHist1mo")
    meta.childClasses.add("cobra.model.actrl.RuleHitPartHist15min")
    meta.childClasses.add("cobra.model.actrl.RuleHitAg1w")
    meta.childClasses.add("cobra.model.actrl.RuleHitPartHist1mo")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.actrl.RuleHitPart1h")
    meta.childClasses.add("cobra.model.actrl.RuleHitPart1qtr")
    meta.childClasses.add("cobra.model.actrl.RuleHitPart1w")
    meta.childClasses.add("cobra.model.opflex.OvsContractPartHist15min")
    meta.childClasses.add("cobra.model.actrl.RuleHitPart5min")
    meta.childClasses.add("cobra.model.opflex.OvsContractAgHist1year")
    meta.childClasses.add("cobra.model.actrl.RuleHitAg1h")
    meta.childClasses.add("cobra.model.opflex.OvsContractAgHist1mo")
    meta.childClasses.add("cobra.model.actrl.RuleHitAg1qtr")
    meta.childClasses.add("cobra.model.actrl.RuleHitAg1d")
    meta.childClasses.add("cobra.model.opflex.OvsContractAg1qtr")
    meta.childClasses.add("cobra.model.opflex.OvsContractPart1qtr")
    meta.childClasses.add("cobra.model.opflex.OvsContractAgHist1w")
    meta.childClasses.add("cobra.model.opflex.OvsContractPart1d")
    meta.childClasses.add("cobra.model.opflex.OvsContractAg1year")
    meta.childClasses.add("cobra.model.actrl.RuleHitPartHist1qtr")
    meta.childClasses.add("cobra.model.actrl.RuleHitAg15min")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.actrl.RuleHitPartHist1h")
    meta.childClasses.add("cobra.model.actrl.RuleHitPart1mo")
    meta.childClasses.add("cobra.model.actrl.RuleHitAg1mo")
    meta.childClasses.add("cobra.model.actrl.RuleHitPartHist1year")
    meta.childClasses.add("cobra.model.opflex.OvsContractAgHist1d")
    meta.childClasses.add("cobra.model.opflex.OvsContractAg1mo")
    meta.childClasses.add("cobra.model.opflex.OvsContractPart1year")
    meta.childClasses.add("cobra.model.opflex.OvsContractAgHist1h")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.actrl.RuleHitPartHist1d")
    meta.childClasses.add("cobra.model.opflex.OvsContractPart5min")
    meta.childClasses.add("cobra.model.actrl.RuleHitPart1year")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.opflex.OvsContractPartHist5min")
    meta.childClasses.add("cobra.model.opflex.OvsContractAg1w")
    meta.childClasses.add("cobra.model.opflex.OvsContractPartHist1year")
    meta.childClasses.add("cobra.model.actrl.RuleHitPartHist1w")
    meta.childClasses.add("cobra.model.opflex.OvsContractPart1h")
    meta.childClasses.add("cobra.model.opflex.OvsContractPart1mo")
    meta.childClasses.add("cobra.model.opflex.OvsContractPart1w")
    meta.childClasses.add("cobra.model.opflex.OvsContractPart15min")
    meta.childClasses.add("cobra.model.opflex.OvsContractAgHist15min")
    meta.childClasses.add("cobra.model.opflex.OvsContractAg1h")
    meta.childClasses.add("cobra.model.opflex.OvsContractAg1d")
    meta.childClasses.add("cobra.model.actrl.RuleHitAgHist15min")
    meta.childClasses.add("cobra.model.actrl.RuleHitAgHist1w")
    meta.childClasses.add("cobra.model.actrl.RuleHitAgHist1qtr")
    meta.childClasses.add("cobra.model.actrl.RuleHitAg1year")
    meta.childClasses.add("cobra.model.opflex.OvsContractPartHist1h")
    meta.childClasses.add("cobra.model.opflex.OvsContractPartHist1d")
    meta.childClasses.add("cobra.model.actrl.RuleHitPartHist5min")
    meta.childClasses.add("cobra.model.opflex.OvsContractAg15min")
    meta.childClasses.add("cobra.model.actrl.RuleHitPart15min")
    meta.childClasses.add("cobra.model.actrl.RuleHitAgHist1d")
    meta.childClasses.add("cobra.model.actrl.RuleHitAgHist1mo")
    meta.childClasses.add("cobra.model.opflex.OvsContractPartHist1w")
    meta.childClasses.add("cobra.model.opflex.OvsContractAgHist1qtr")
    meta.childClasses.add("cobra.model.opflex.OvsContractPartHist1qtr")
    meta.childClasses.add("cobra.model.actrl.RuleHitAgHist1year")
    meta.childClasses.add("cobra.model.actrl.RuleHitAgHist1h")

    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPartHist15min", "HDopflexOvsContractPart15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPart1year", "CDopflexOvsContractPart1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPartHist1year", "HDopflexOvsContractPart1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPart15min", "CDopflexOvsContractPart15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPart1qtr", "CDopflexOvsContractPart1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPart5min", "CDopflexOvsContractPart5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPartHist5min", "HDopflexOvsContractPart5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPartHist1qtr", "HDopflexOvsContractPart1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPartHist1mo", "HDopflexOvsContractPart1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractAgHist1year", "HDopflexOvsContractAg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPart1mo", "CDopflexOvsContractPart1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractAgHist15min", "HDopflexOvsContractAg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPart1d", "CDopflexOvsContractPart1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractAg1year", "CDopflexOvsContractAg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPart1h", "CDopflexOvsContractPart1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPart1w", "CDopflexOvsContractPart1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPartHist1h", "HDopflexOvsContractPart1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPartHist1d", "HDopflexOvsContractPart1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractAg15min", "CDopflexOvsContractAg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractPartHist1w", "HDopflexOvsContractPart1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractAgHist1qtr", "HDopflexOvsContractAg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractAgHist1mo", "HDopflexOvsContractAg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractAg1qtr", "CDopflexOvsContractAg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPartHist15min", "HDactrlRuleHitPart15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractAgHist1w", "HDopflexOvsContractAg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPartHist1year", "HDactrlRuleHitPart1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractAgHist1d", "HDopflexOvsContractAg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractAg1mo", "CDopflexOvsContractAg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractAgHist1h", "HDopflexOvsContractAg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPart1year", "CDactrlRuleHitPart1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPart15min", "CDactrlRuleHitPart15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPart1qtr", "CDactrlRuleHitPart1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPart5min", "CDactrlRuleHitPart5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPartHist1qtr", "HDactrlRuleHitPart1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractAg1w", "CDopflexOvsContractAg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractAg1h", "CDopflexOvsContractAg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflex.OvsContractAg1d", "CDopflexOvsContractAg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPartHist5min", "HDactrlRuleHitPart5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPartHist1mo", "HDactrlRuleHitPart1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPart1mo", "CDactrlRuleHitPart1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitAgHist15min", "HDactrlRuleHitAg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitAgHist1year", "HDactrlRuleHitAg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPart1d", "CDactrlRuleHitPart1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPart1h", "CDactrlRuleHitPart1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPart1w", "CDactrlRuleHitPart1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitAg15min", "CDactrlRuleHitAg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPartHist1h", "HDactrlRuleHitPart1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPartHist1d", "HDactrlRuleHitPart1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitPartHist1w", "HDactrlRuleHitPart1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitAgHist1qtr", "HDactrlRuleHitAg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitAg1year", "CDactrlRuleHitAg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitAg1qtr", "CDactrlRuleHitAg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitAgHist1mo", "HDactrlRuleHitAg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitAg1mo", "CDactrlRuleHitAg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitAgHist1w", "HDactrlRuleHitAg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitAgHist1d", "HDactrlRuleHitAg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitAgHist1h", "HDactrlRuleHitAg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitAg1w", "CDactrlRuleHitAg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitAg1h", "CDactrlRuleHitAg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.actrl.RuleHitAg1d", "CDactrlRuleHitAg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.cloud.EPg")
    meta.parentClasses.add("cobra.model.vns.EPpInfo")
    meta.parentClasses.add("cobra.model.vns.SDEPpInfo")
    meta.parentClasses.add("cobra.model.fv.TnlEPg")
    meta.parentClasses.add("cobra.model.cloud.ISvcEPg")
    meta.parentClasses.add("cobra.model.mgmt.InstPDef")
    meta.parentClasses.add("cobra.model.dhcp.PRelPg")
    meta.parentClasses.add("cobra.model.mgmt.OoB")
    meta.parentClasses.add("cobra.model.fv.AEPg")
    meta.parentClasses.add("cobra.model.l2ext.InstP")
    meta.parentClasses.add("cobra.model.vns.SHEPpInfo")
    meta.parentClasses.add("cobra.model.l3ext.InstP")
    meta.parentClasses.add("cobra.model.infra.PEPg")
    meta.parentClasses.add("cobra.model.infra.CEPg")
    meta.parentClasses.add("cobra.model.mgmt.InstP")
    meta.parentClasses.add("cobra.model.vns.REPpInfo")
    meta.parentClasses.add("cobra.model.cloud.ExtEPg")
    meta.parentClasses.add("cobra.model.mgmt.InB")
    meta.parentClasses.add("cobra.model.vz.Any")
    meta.parentClasses.add("cobra.model.fv.CCg")
    meta.parentClasses.add("cobra.model.dhcp.CRelPg")
    meta.parentClasses.add("cobra.model.l3ext.InstPDef")

    meta.superClasses.add("cobra.model.pol.Instr")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")

    meta.rnPrefixes = [
        ('to-', True),
        ('-subj-', True),
        ('-flt-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5581, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "id", "id", 1721, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 4294967295)]
    prop._addConstant("default", "default-filter-id", 65535)
    prop._addConstant("implarp", "implicit-filter-id-for-arp", 65533)
    prop._addConstant("implicit", "implicit-filter-id-for-internal-consumption", 65534)
    meta.props.add("id", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14254, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "subjDn", "subjDn", 1720, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("subjDn", prop)

    prop = PropMeta("str", "toEpgDn", "toEpgDn", 1719, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("toEpgDn", prop)

    meta.namingProps.append(getattr(meta.props, "toEpgDn"))
    getattr(meta.props, "toEpgDn").needDelimiter = True
    meta.namingProps.append(getattr(meta.props, "subjDn"))
    getattr(meta.props, "subjDn").needDelimiter = True
    meta.namingProps.append(getattr(meta.props, "id"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvCtxToHcloudIgw", "From fv:Ctx to hcloud:Igw", "cobra.model.hcloud.Igw"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvCtxToHcloudVgw", "From fv:Ctx to hcloud:Vgw", "cobra.model.hcloud.Vgw"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudExtEPgToConsVzBrCP", "From cloud ExtEPg to Consumer Contract", "cobra.model.vz.BrCP"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudExtEPgToProvVzBrCP", "From cloud ExtEPg to Provider Contract", "cobra.model.vz.BrCP"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudEPgToConsVzBrCP", "From EPg to Contract", "cobra.model.vz.BrCP"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudEPgToProvVzBrCP", "From EPg to Contract", "cobra.model.vz.BrCP"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvCtxToCloudExtEPg", "From fvCtx (VRF) to cloudExtEPg", "cobra.model.cloud.ExtEPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudExtEPgToFvCtx", "cloud:ExtEPg to fv:Ctx", "cobra.model.fv.Ctx"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudExtEPgToHCloudEndPoint", "cloud:ExtEPg to hcloud:EndPoint", "cobra.model.hcloud.EndPoint"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudExtEPgToHcloudSecurityGroup", "cloud:ExtEPg to hcloud:SecurityGroup", "cobra.model.hcloud.SecurityGroup"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudExtEPgToHCloudCtx", "From cloud ExtEPg to VPCs hCloudCtx", "cobra.model.hcloud.Ctx"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvCtxToCloudRegion", "From fvCtx (VRF) to CloudRegion", "cobra.model.cloud.Region"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvCtxToHcloudCsr", "From fvCtx (VRF) to hcloudCsr (CSR)", "cobra.model.hcloud.Csr"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudEpgToHcloudSecurityGroup", "cloud:EPg to hcloud:SecurityGroup", "cobra.model.hcloud.SecurityGroup"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudEpgToFvCtx", "cloud:EPg to fv:Ctx", "cobra.model.fv.Ctx"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvCtxToHCloudEndPoint", "From fvCtx (VRF) to hcloud:EndPoint", "cobra.model.hcloud.EndPoint"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudEpgToHCloudEndPoint", "cloud:EPg to hcloud:EndPoint", "cobra.model.hcloud.EndPoint"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvCtxToHCloudCtx", "From fvCtx (VRF) to hcloudCtx (VPC)", "cobra.model.hcloud.Ctx"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvCtxToCloudCtxProfile", "From fvCtx (VRF) to cloudCtxProfile", "cobra.model.cloud.CtxProfile"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvCtxToCloudEPg", "From fvCtx (VRF) to cloud EPg", "cobra.model.cloud.EPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudEPgToHCloudCtx", "From cloud EPg to VPCs hCloudCtx", "cobra.model.hcloud.Ctx"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("cloudEpgToApp", "cloudEpgToApp", "cobra.model.cloud.App"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CtxToRegion", "Vrf to cloud Region", "cobra.model.cloud.Region"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("ATgToGraphInst", "Graph Instances", "cobra.model.vns.GraphInst"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("AEPgToVirtualMachines", "Virtual Machines", "cobra.model.comp.Vm"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("MgmtInstPToNode", "External Management Network EPG to Node", "cobra.model.fv.Locale"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("OoBToNode", "Out-of-band Management EPG to Node", "cobra.model.fv.Locale"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("InBToNode", "Node", "cobra.model.fv.Locale"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("EPgToNwIf", "Interface", "cobra.model.nw.If"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CtxToNwIf", "Private Network to Interface", "cobra.model.nw.If"))

    def __init__(self, parentMoOrDn, toEpgDn, subjDn, id, markDirty=True, **creationProps):
        namingVals = [toEpgDn, subjDn, id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class RemotePolHolder(Mo):
    """
    A container existing on each node to efficiently download policies to the node. For example: filters, bridge domain, and taboo policies.  This is an internal object.

    """

    meta = ClassMeta("cobra.model.fv.RemotePolHolder")

    meta.moClassName = "fvRemotePolHolder"
    meta.rnFormat = "remotepolholder"
    meta.category = MoCategory.REGULAR
    meta.label = "None"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.fv.RsToRemotePimRouteMapDefWrapper")
    meta.childClasses.add("cobra.model.fv.RsToRemoteMonGrp")
    meta.childClasses.add("cobra.model.fv.PullRecover")
    meta.childClasses.add("cobra.model.fv.RsToRemoteConnInstrPol")
    meta.childClasses.add("cobra.model.fv.RsToSpanFilterGrp")
    meta.childClasses.add("cobra.model.fv.RsToRemoteSyslogGroup")
    meta.childClasses.add("cobra.model.fv.RsToRemoteNetflowMonitorPolDef")
    meta.childClasses.add("cobra.model.fv.PndgAnyDefCont")
    meta.childClasses.add("cobra.model.fv.RsToRemoteRFltAtt")
    meta.childClasses.add("cobra.model.fv.PndgCont")
    meta.childClasses.add("cobra.model.fv.RsToRemotePinningPDef")
    meta.childClasses.add("cobra.model.fv.RsToRemoteCloudsecKeyDefCont")
    meta.childClasses.add("cobra.model.fv.RsToRemoteRtdCtxDef")
    meta.childClasses.add("cobra.model.fv.RsToRemoteMonPol")
    meta.childClasses.add("cobra.model.fv.RsToRemoteKeyChainPolDef")
    meta.childClasses.add("cobra.model.fv.PndgRtdOutDefCont")
    meta.childClasses.add("cobra.model.fv.RsToRemoteLocalSiteCtxDef")
    meta.childClasses.add("cobra.model.fv.RsToRemoteByPassChain")
    meta.childClasses.add("cobra.model.fv.PndgEpCPCont")
    meta.childClasses.add("cobra.model.fv.PndgEpPCtrctInfoCont")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.fv.RsToRemoteFabricExtConnPDef")
    meta.childClasses.add("cobra.model.fv.RsToRemotePbrIpsla")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.fv.RsToRemoteSiteCont")
    meta.childClasses.add("cobra.model.fv.RsToRemoteTabooDef")
    meta.childClasses.add("cobra.model.fv.RsToRemoteRtdEpPInfoHolder")
    meta.childClasses.add("cobra.model.fv.RsToRemoteBackupPol")
    meta.childClasses.add("cobra.model.fv.RsToRemoteNetflowExporterPolDef")
    meta.childClasses.add("cobra.model.fv.RsToRemoteRedirectPol")
    meta.childClasses.add("cobra.model.fv.RsToRemoteHealthGrp")
    meta.childClasses.add("cobra.model.fv.RsToRemoteRemoteSiteCtxDef")
    meta.childClasses.add("cobra.model.fv.RsToRemoteCtxDef")
    meta.childClasses.add("cobra.model.fv.RsToRemoteBDDef")
    meta.childClasses.add("cobra.model.fv.PndgRFltPCont")
    meta.childClasses.add("cobra.model.fv.RsToRemoteBDHolder")
    meta.childClasses.add("cobra.model.fv.RsToRemoteQosDppPolDef")
    meta.childClasses.add("cobra.model.fv.PndgCtrctCont")
    meta.childClasses.add("cobra.model.fv.PndgAnyGroupDefCont")
    meta.childClasses.add("cobra.model.fv.RsToRemoteQueryGroup")
    meta.childClasses.add("cobra.model.fv.RsToRemoteIpslaPol")
    meta.childClasses.add("cobra.model.fv.RsToRemoteMember")

    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemotePimRouteMapDefWrapper", "rstoRemotePimRouteMapDefWrapper-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteNetflowExporterPolDef", "rstoRemoteNetflowExporterPolDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteNetflowMonitorPolDef", "rstoRemoteNetflowMonitorPolDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteCloudsecKeyDefCont", "rstoRemoteCloudsecKeyDefCont-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteFabricExtConnPDef", "rstoRemoteFabricExtConnPDef"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteRtdEpPInfoHolder", "rstoRemoteRtdEpPInfoHolder-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteRemoteSiteCtxDef", "rstoRemoteRemoteSiteCtxDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteLocalSiteCtxDef", "rstoRemoteLocalSiteCtxDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteKeyChainPolDef", "rstoRemoteKeyChainPolDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteQosDppPolDef", "rstoRemoteQosDppPolDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteConnInstrPol", "rstoRemoteConnInstrPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteSyslogGroup", "rstoRemoteSyslogGroup-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemotePinningPDef", "rstoRemotePinningPDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteByPassChain", "rstoRemoteByPassChain-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteRedirectPol", "rstoRemoteRedirectPol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteQueryGroup", "rstoRemoteQueryGroup-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteRtdCtxDef", "rstoRemoteRtdCtxDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.PndgEpPCtrctInfoCont", "pndgEpPCtrctInfoCont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteBackupPol", "rstoRemoteBackupPol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteHealthGrp", "rstoRemoteHealthGrp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemotePbrIpsla", "rstoRemotePbrIpsla-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteTabooDef", "rstoRemoteTabooDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteBDHolder", "rstoRemoteBDHolder-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.PndgAnyGroupDefCont", "pndgAnyGroupDefCont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteIpslaPol", "rstoRemoteIpslaPol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToSpanFilterGrp", "rstoSpanFilterGrp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteRFltAtt", "rstoRemoteRFltAtt-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteSiteCont", "rstoRemoteSiteCont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteMonGrp", "rstoRemoteMonGrp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteMonPol", "rstoRemoteMonPol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.PndgRtdOutDefCont", "pndgRtdOutDefCont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteCtxDef", "rstoRemoteCtxDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteMember", "rstoRemoteMember-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsToRemoteBDDef", "rstoRemoteBDDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.PndgAnyDefCont", "pndgAnyDefCont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.PndgRFltPCont", "pndgRFltPCont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.PndgCtrctCont", "pndgCtrctCont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.PullRecover", "pullRecover-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.PndgEpCPCont", "pndgEpCPCont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.PndgCont", "pndgCont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.top.Root")

    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Def")

    meta.rnPrefixes = [
        ('remotepolholder', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5579, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "reResolveRelation", "reResolveRelation", 55720, PropCategory.REGULAR)
    prop.label = "Re Resolve Relation"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("reResolveRelation", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Ap(Mo):
    """
    The application profile is a set of requirements that an application instance has on the virtualizable fabric. The policy regulates  connectivity and visibility among endpoints within the scope of the policy.

    """

    meta = ClassMeta("cobra.model.fv.Ap")

    meta.moClassName = "fvAp"
    meta.rnFormat = "ap-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Application Profile"
    meta.writeAccessMask = 0x201
    meta.readAccessMask = 0x6200400401003701
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.l2.EgrPktsAg15min")
    meta.childClasses.add("cobra.model.l2.EgrBytesAgHist15min")
    meta.childClasses.add("cobra.model.l2.EgrPktsAgHist1qtr")
    meta.childClasses.add("cobra.model.tag.Inst")
    meta.childClasses.add("cobra.model.l2.EgrPktsAgHist1year")
    meta.childClasses.add("cobra.model.vns.AbsParam")
    meta.childClasses.add("cobra.model.l2.IngrBytesAg1w")
    meta.childClasses.add("cobra.model.vns.CRel")
    meta.childClasses.add("cobra.model.tag.AliasDelInst")
    meta.childClasses.add("cobra.model.l2.IngrPktsAg1qtr")
    meta.childClasses.add("cobra.model.l2.IngrBytesAg1h")
    meta.childClasses.add("cobra.model.l2.IngrBytesAg1d")
    meta.childClasses.add("cobra.model.l2.EgrBytesAg15min")
    meta.childClasses.add("cobra.model.health.NodeInst")
    meta.childClasses.add("cobra.model.tag.ExtMngdInst")
    meta.childClasses.add("cobra.model.l2.EgrBytesAgHist1mo")
    meta.childClasses.add("cobra.model.l2.EgrBytesAg1h")
    meta.childClasses.add("cobra.model.vns.SvcPol")
    meta.childClasses.add("cobra.model.l2.IngrPktsAg1mo")
    meta.childClasses.add("cobra.model.l2.EgrPktsAg1year")
    meta.childClasses.add("cobra.model.vns.CFolder")
    meta.childClasses.add("cobra.model.fv.FltCounter1mo")
    meta.childClasses.add("cobra.model.l2.EgrBytesAg1w")
    meta.childClasses.add("cobra.model.fv.FltCounter1d")
    meta.childClasses.add("cobra.model.l2.EgrPktsAgHist1h")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.fv.FltCounterHist1mo")
    meta.childClasses.add("cobra.model.l2.EgrPktsAgHist1d")
    meta.childClasses.add("cobra.model.l2.IngrBytesAg15min")
    meta.childClasses.add("cobra.model.vns.CfgRelInst")
    meta.childClasses.add("cobra.model.fv.FltCounter1w")
    meta.childClasses.add("cobra.model.l2.EgrPktsAgHist1w")
    meta.childClasses.add("cobra.model.l2.EgrBytesAg1d")
    meta.childClasses.add("cobra.model.fv.FltCounter1year")
    meta.childClasses.add("cobra.model.l2.IngrPktsAg1w")
    meta.childClasses.add("cobra.model.l2.EgrBytesAgHist1w")
    meta.childClasses.add("cobra.model.l2.IngrPktsAg1d")
    meta.childClasses.add("cobra.model.l2.EgrBytesAgHist1h")
    meta.childClasses.add("cobra.model.l2.IngrPktsAg1h")
    meta.childClasses.add("cobra.model.l2.EgrBytesAgHist1d")
    meta.childClasses.add("cobra.model.l2.EgrBytesAgHist1year")
    meta.childClasses.add("cobra.model.l2.EgrPktsAgHist15min")
    meta.childClasses.add("cobra.model.l2.IngrBytesAg1mo")
    meta.childClasses.add("cobra.model.vns.GFolder")
    meta.childClasses.add("cobra.model.l2.IngrPktsAgHist1qtr")
    meta.childClasses.add("cobra.model.vns.CParam")
    meta.childClasses.add("cobra.model.l2.EgrPktsAg1mo")
    meta.childClasses.add("cobra.model.fv.RsApMonPol")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.l2.EgrBytesAg1mo")
    meta.childClasses.add("cobra.model.vns.GRel")
    meta.childClasses.add("cobra.model.fv.FltCounterHist1year")
    meta.childClasses.add("cobra.model.l2.IngrBytesAgHist1mo")
    meta.childClasses.add("cobra.model.vns.FolderInst")
    meta.childClasses.add("cobra.model.fv.AEPg")
    meta.childClasses.add("cobra.model.l2.IngrBytesAgHist1year")
    meta.childClasses.add("cobra.model.l2.IngrPktsAgHist1year")
    meta.childClasses.add("cobra.model.l2.IngrBytesAg1qtr")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.fv.FltCounterHist1w")
    meta.childClasses.add("cobra.model.fv.FltCounterHist1h")
    meta.childClasses.add("cobra.model.fv.FltCounter1h")
    meta.childClasses.add("cobra.model.vns.AbsCfgRel")
    meta.childClasses.add("cobra.model.l2.EgrPktsAg1qtr")
    meta.childClasses.add("cobra.model.fv.FltCounterHist1d")
    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.l2.IngrBytesAg1year")
    meta.childClasses.add("cobra.model.l2.EgrBytesAg1qtr")
    meta.childClasses.add("cobra.model.l2.IngrPktsAgHist15min")
    meta.childClasses.add("cobra.model.tag.AliasInst")
    meta.childClasses.add("cobra.model.vns.ParamInst")
    meta.childClasses.add("cobra.model.fv.FltCounter1qtr")
    meta.childClasses.add("cobra.model.vns.GParam")
    meta.childClasses.add("cobra.model.l2.IngrPktsAg15min")
    meta.childClasses.add("cobra.model.l2.EgrPktsAg1h")
    meta.childClasses.add("cobra.model.l2.EgrPktsAg1d")
    meta.childClasses.add("cobra.model.l2.IngrPktsAgHist1mo")
    meta.childClasses.add("cobra.model.l2.IngrPktsAgHist1h")
    meta.childClasses.add("cobra.model.l2.EgrPktsAg1w")
    meta.childClasses.add("cobra.model.l2.IngrBytesAgHist1d")
    meta.childClasses.add("cobra.model.l2.IngrBytesAgHist1h")
    meta.childClasses.add("cobra.model.l2.EgrBytesAgHist1qtr")
    meta.childClasses.add("cobra.model.l2.IngrBytesAgHist1qtr")
    meta.childClasses.add("cobra.model.l2.IngrBytesAgHist1w")
    meta.childClasses.add("cobra.model.fv.FltCounterHist15min")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.tag.Annotation")
    meta.childClasses.add("cobra.model.vns.AbsFolder")
    meta.childClasses.add("cobra.model.l2.EgrPktsAgHist1mo")
    meta.childClasses.add("cobra.model.l2.IngrPktsAg1year")
    meta.childClasses.add("cobra.model.l2.IngrPktsAgHist1d")
    meta.childClasses.add("cobra.model.l2.EgrBytesAg1year")
    meta.childClasses.add("cobra.model.fv.FltCounterHist1qtr")
    meta.childClasses.add("cobra.model.fv.FltCounterHist5min")
    meta.childClasses.add("cobra.model.l2.IngrBytesAgHist15min")
    meta.childClasses.add("cobra.model.l2.IngrPktsAgHist1w")
    meta.childClasses.add("cobra.model.fv.FltCounter5min")
    meta.childClasses.add("cobra.model.fv.FltCounter15min")

    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesAgHist1year", "HDl2IngrBytesAg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesAgHist15min", "HDl2IngrBytesAg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesAgHist15min", "HDl2EgrBytesAg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesAg15min", "CDl2IngrBytesAg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesAgHist1year", "HDl2EgrBytesAg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounterHist1year", "HDfvFltCounter1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsAgHist1year", "HDl2IngrPktsAg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesAg1year", "CDl2IngrBytesAg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsAgHist15min", "HDl2IngrPktsAg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesAgHist1qtr", "HDl2IngrBytesAg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounterHist15min", "HDfvFltCounter15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsAgHist1year", "HDl2EgrPktsAg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesAg15min", "CDl2EgrBytesAg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounter1year", "CDfvFltCounter1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsAgHist15min", "HDl2EgrPktsAg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsAgHist1qtr", "HDl2IngrPktsAg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesAgHist1mo", "HDl2IngrBytesAg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesAg1qtr", "CDl2IngrBytesAg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsAg15min", "CDl2IngrPktsAg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesAgHist1qtr", "HDl2EgrBytesAg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsAg1year", "CDl2IngrPktsAg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesAg1year", "CDl2EgrBytesAg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounterHist1qtr", "HDfvFltCounter1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounterHist5min", "HDfvFltCounter5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounter15min", "CDfvFltCounter15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsAg15min", "CDl2EgrPktsAg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsAgHist1qtr", "HDl2EgrPktsAg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsAg1qtr", "CDl2IngrPktsAg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesAgHist1mo", "HDl2EgrBytesAg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsAg1year", "CDl2EgrPktsAg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounterHist1mo", "HDfvFltCounter1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesAg1mo", "CDl2IngrBytesAg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesAg1qtr", "CDl2EgrBytesAg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounter1qtr", "CDfvFltCounter1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsAgHist1mo", "HDl2IngrPktsAg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesAgHist1d", "HDl2IngrBytesAg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesAgHist1h", "HDl2IngrBytesAg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesAgHist1w", "HDl2IngrBytesAg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounter5min", "CDfvFltCounter5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesAg1w", "CDl2IngrBytesAg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesAg1h", "CDl2IngrBytesAg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesAg1d", "CDl2IngrBytesAg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsAg1mo", "CDl2IngrPktsAg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounter1mo", "CDfvFltCounter1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesAgHist1w", "HDl2EgrBytesAg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesAgHist1h", "HDl2EgrBytesAg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesAgHist1d", "HDl2EgrBytesAg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesAg1mo", "CDl2EgrBytesAg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounterHist1w", "HDfvFltCounter1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounterHist1h", "HDfvFltCounter1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsAg1qtr", "CDl2EgrPktsAg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounterHist1d", "HDfvFltCounter1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsAgHist1h", "HDl2IngrPktsAg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsAgHist1mo", "HDl2EgrPktsAg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsAgHist1d", "HDl2IngrPktsAg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsAgHist1w", "HDl2IngrPktsAg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesAg1h", "CDl2EgrBytesAg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesAg1w", "CDl2EgrBytesAg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounter1d", "CDfvFltCounter1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsAgHist1h", "HDl2EgrPktsAg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsAgHist1d", "HDl2EgrPktsAg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounter1w", "CDfvFltCounter1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsAgHist1w", "HDl2EgrPktsAg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesAg1d", "CDl2EgrBytesAg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsAg1w", "CDl2IngrPktsAg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsAg1d", "CDl2IngrPktsAg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsAg1h", "CDl2IngrPktsAg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsAg1mo", "CDl2EgrPktsAg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.FltCounter1h", "CDfvFltCounter1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsAg1h", "CDl2EgrPktsAg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsAg1d", "CDl2EgrPktsAg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsAg1w", "CDl2EgrPktsAg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.NodeInst", "nodehealth-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.CfgRelInst", "CfgRelInst-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsApMonPol", "rsApMonPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.ParamInst", "ParamInst-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.AbsFolder", "absFolder-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.AbsParam", "absParam-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.AliasDelInst", "aliasdel-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.SvcPol", "svcpol_C-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.CFolder", "cFolder-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.GFolder", "gFolder-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.ExtMngdInst", "extmngd"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.CParam", "cParam-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.AbsCfgRel", "absRel-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.GParam", "gParam-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.CRel", "cRel-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.GRel", "gRel-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.FolderInst", "FI_C-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.AliasInst", "alias"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Inst", "tag-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.AEPg", "epg-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.fv.Tenant")

    meta.superClasses.add("cobra.model.fv.Def")
    meta.superClasses.add("cobra.model.fv.Np")
    meta.superClasses.add("cobra.model.pol.DefRoot")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Def")

    meta.rnPrefixes = [
        ('ap-', True),
    ]

    prop = PropMeta("str", "annotation", "annotation", 37657, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5614, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 39796, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14285, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 6527, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "prio", "prio", 1765, PropCategory.REGULAR)
    prop.label = "Priority"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 9)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("level1", "level1", 3)
    prop._addConstant("level2", "level2", 2)
    prop._addConstant("level3", "level3-(default)", 1)
    prop._addConstant("level4", "level4", 9)
    prop._addConstant("level5", "level5", 8)
    prop._addConstant("level6", "level6", 7)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("prio", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Path"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("ApToNwIf", "Application Profile to Interface", "cobra.model.nw.If"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

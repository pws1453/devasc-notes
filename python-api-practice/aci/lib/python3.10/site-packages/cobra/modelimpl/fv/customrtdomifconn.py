# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class CustomRtDomIfConn(Mo):
    meta = ClassMeta("cobra.model.fv.CustomRtDomIfConn")

    meta.isAbstract = True
    meta.moClassName = "fvCustomRtDomIfConn"


    meta.moClassName = "fvCustomRtDomIfConn"
    meta.rnFormat = ""
    meta.category = MoCategory.RELATIONSHIP_FROM_LOCAL
    meta.label = "Custom Relation Target"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.superClasses.add("cobra.model.reln.From")
    meta.superClasses.add("cobra.model.fv.From")
    meta.superClasses.add("cobra.model.reln.Inst")

    meta.concreteSubClasses.add("cobra.model.l2.RtDomIfConn")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cleanupIndex", "cleanupIndex", 18580, PropCategory.REGULAR)
    prop.label = "Throttle Cleanup Index on the Interface List"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("cleanupIndex", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "ifList", "ifList", 18578, PropCategory.REGULAR)
    prop.label = "Interface List"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("ifList", prop)

    prop = PropMeta("str", "operSt", "operSt", 19058, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "allocated"
    prop._addConstant("allocated", "allocated", 0)
    prop._addConstant("deallocated", "deallocated", 1)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "setupIndex", "setupIndex", 18579, PropCategory.REGULAR)
    prop.label = "Throttle Setup Index on the Interface List"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("setupIndex", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tCl", "tCl", 101, PropCategory.REGULAR)
    prop.label = "Target-class"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("tCl", prop)

    prop = PropMeta("str", "tDn", "tDn", 100, PropCategory.REGULAR)
    prop.label = "Target-dn"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("tDn", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class AIf(Mo):
    meta = ClassMeta("cobra.model.rtdmc.AIf")

    meta.isAbstract = True
    meta.moClassName = "rtdmcAIf"


    meta.moClassName = "rtdmcAIf"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "Interface"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.nw.RtPathToIf")

    meta.childNamesAndRnPrefix.append(("cobra.model.nw.RtPathToIf", "rtpathToIf-"))

    meta.superClasses.add("cobra.model.nw.ConnEp")
    meta.superClasses.add("cobra.model.l3.ProtIf")
    meta.superClasses.add("cobra.model.nw.If")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.LogicalIf")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.ProtIf")
    meta.superClasses.add("cobra.model.nw.Ep")

    meta.concreteSubClasses.add("cobra.model.pim6.If")
    meta.concreteSubClasses.add("cobra.model.pim.If")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "adminSt", "adminSt", 3674, PropCategory.REGULAR)
    prop.label = "Admin State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "ctrl", "ctrl", 24526, PropCategory.REGULAR)
    prop.label = "Controls"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("bfd-enable", "enable-bfd", 8)
    prop._addConstant("border", "multicast-domain-boundary", 1)
    prop._addConstant("passive", "passive", 2)
    prop._addConstant("quiet", "quiet", 4)
    prop._addConstant("strict-rfc-compliant", "strict-rfc-compliant", 16)
    meta.props.add("ctrl", prop)

    prop = PropMeta("str", "descr", "descr", 5585, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dr", "dr", 26119, PropCategory.REGULAR)
    prop.label = "PIM DR"
    prop.isOper = True
    meta.props.add("dr", prop)

    prop = PropMeta("str", "drDelay", "drDelay", 24528, PropCategory.REGULAR)
    prop.label = "Designated Router Delay"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 65535)]
    prop.defaultValue = 3
    prop.defaultValueStr = "3"
    meta.props.add("drDelay", prop)

    prop = PropMeta("str", "drPrio", "drPrio", 24527, PropCategory.REGULAR)
    prop.label = "Designated Router Priority"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 4294967295)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("drPrio", prop)

    prop = PropMeta("str", "drPriority", "drPriority", 45502, PropCategory.REGULAR)
    prop.label = "Elected DR priority on the interface"
    prop.isOper = True
    prop.range = [(1, 4294967295)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("drPriority", prop)

    prop = PropMeta("str", "genID", "genID", 27047, PropCategory.REGULAR)
    prop.label = "Generation ID"
    prop.isOper = True
    meta.props.add("genID", prop)

    prop = PropMeta("str", "id", "id", 3673, PropCategory.REGULAR)
    prop.label = "Interface ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "ipAddr", "ipAddr", 27402, PropCategory.REGULAR)
    prop.label = "IP Address of the interface"
    prop.isOper = True
    meta.props.add("ipAddr", prop)

    prop = PropMeta("str", "name", "name", 16432, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "nbrHoldTime", "nbrHoldTime", 26406, PropCategory.REGULAR)
    prop.label = "PIM Nbr HoldTime"
    prop.isOper = True
    meta.props.add("nbrHoldTime", prop)

    prop = PropMeta("str", "neighRtMap", "neighRtMap", 24529, PropCategory.REGULAR)
    prop.label = "Neighbor Policy"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("neighRtMap", prop)

    prop = PropMeta("str", "nextHello", "nextHello", 27048, PropCategory.REGULAR)
    prop.label = "Next hello time"
    prop.isOper = True
    meta.props.add("nextHello", prop)

    prop = PropMeta("str", "protocolSt", "protocolSt", 61076, PropCategory.REGULAR)
    prop.label = "Interface protocol state"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("protocolSt", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rtEpPDn", "rtEpPDn", 26298, PropCategory.REGULAR)
    prop.label = "RtEpP DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("rtEpPDn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.deploymentCategory = DeploymentCategory("interface", "Interface")
    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

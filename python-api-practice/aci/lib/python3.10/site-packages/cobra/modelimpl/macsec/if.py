# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class If(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.macsec.If")

    meta.moClassName = "macsecIf"
    meta.rnFormat = "if-[%(id)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "macsec Interface"
    meta.writeAccessMask = 0x6006010020001
    meta.readAccessMask = 0x6006010020001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.macsec.CAStats")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.l2.RsEthIf")
    meta.childClasses.add("cobra.model.nw.RtPathToIf")
    meta.childClasses.add("cobra.model.macsec.IfStats")
    meta.childClasses.add("cobra.model.l2.RsMgmtIf")
    meta.childClasses.add("cobra.model.macsec.Mgmt")

    meta.childNamesAndRnPrefix.append(("cobra.model.nw.RtPathToIf", "rtpathToIf-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.RsMgmtIf", "rsmgmtIf"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.macsec.CAStats", "castats"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.RsEthIf", "rsethIf"))
    meta.childNamesAndRnPrefix.append(("cobra.model.macsec.IfStats", "ifstats"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.macsec.Mgmt", "mgmt"))

    meta.parentClasses.add("cobra.model.macsec.Inst")

    meta.superClasses.add("cobra.model.nw.ConnEp")
    meta.superClasses.add("cobra.model.nw.If")
    meta.superClasses.add("cobra.model.l2.ProtIf")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.LogicalIf")
    meta.superClasses.add("cobra.model.macsec.AIf")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.ProtIf")
    meta.superClasses.add("cobra.model.nw.Ep")

    meta.rnPrefixes = [
        ('if-', True),
    ]

    prop = PropMeta("str", "adminSt", "adminSt", 3674, PropCategory.REGULAR)
    prop.label = "Admin State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "cakName", "cakName", 33395, PropCategory.REGULAR)
    prop.label = "Connectivity Association Key Name (CKN)"
    prop.isOper = True
    prop.regex = ['[a-fA-F0-9]{0,63}']
    meta.props.add("cakName", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cipherSuite", "cipherSuite", 30097, PropCategory.REGULAR)
    prop.label = "Cipher Suite"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 4
    prop.defaultValueStr = "gcm-aes-xpn-256"
    prop._addConstant("gcm-aes-128", "128-bit-gcm-aes-suite", 1)
    prop._addConstant("gcm-aes-256", "256-bit-gcm-aes-suite", 2)
    prop._addConstant("gcm-aes-xpn-128", "128-bit-gcm-aes-suite-with-extended-packet-numbering", 3)
    prop._addConstant("gcm-aes-xpn-256", "256-bit-gcm-aes-suite-with-extended-packet-numbering", 4)
    meta.props.add("cipherSuite", prop)

    prop = PropMeta("str", "cipherSuiteOper", "cipherSuiteOper", 33391, PropCategory.REGULAR)
    prop.label = "Cipher Suite (Operational)"
    prop.isOper = True
    prop.defaultValue = 4
    prop.defaultValueStr = "gcm-aes-xpn-256"
    prop._addConstant("gcm-aes-128", "128-bit-gcm-aes-suite", 1)
    prop._addConstant("gcm-aes-256", "256-bit-gcm-aes-suite", 2)
    prop._addConstant("gcm-aes-xpn-128", "128-bit-gcm-aes-suite-with-extended-packet-numbering", 3)
    prop._addConstant("gcm-aes-xpn-256", "256-bit-gcm-aes-suite-with-extended-packet-numbering", 4)
    meta.props.add("cipherSuiteOper", prop)

    prop = PropMeta("str", "confOffset", "confOffset", 30093, PropCategory.REGULAR)
    prop.label = "Confidentiality Offset"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "offset-0"
    prop._addConstant("offset-0", "skip-0-bytes", 1)
    prop._addConstant("offset-30", "skip-30-bytes", 2)
    prop._addConstant("offset-50", "skip-50-bytes", 3)
    meta.props.add("confOffset", prop)

    prop = PropMeta("str", "confOffsetOper", "confOffsetOper", 33390, PropCategory.REGULAR)
    prop.label = "Confidentiality Offset (Operational)"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "offset-0"
    prop._addConstant("offset-0", "skip-0-bytes", 1)
    prop._addConstant("offset-30", "skip-30-bytes", 2)
    prop._addConstant("offset-50", "skip-50-bytes", 3)
    meta.props.add("confOffsetOper", prop)

    prop = PropMeta("str", "descr", "descr", 5585, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "id", "id", 30107, PropCategory.REGULAR)
    prop.label = "Interface ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "keyChain", "keyChain", 30287, PropCategory.REGULAR)
    prop.label = "Key Chain"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("keyChain", prop)

    prop = PropMeta("str", "keySvrPrio", "keySvrPrio", 30282, PropCategory.REGULAR)
    prop.label = "Key Server Priority"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 16
    prop.defaultValueStr = "16"
    meta.props.add("keySvrPrio", prop)

    prop = PropMeta("str", "lastSakKeyTime", "lastSakKeyTime", 33404, PropCategory.REGULAR)
    prop.label = "Last Secure Association Key (SAK) Key Time"
    prop.isOper = True
    meta.props.add("lastSakKeyTime", prop)

    prop = PropMeta("str", "latestSakAN", "latestSakAN", 33401, PropCategory.REGULAR)
    prop.label = "Latest Secure Association Key (SAK) Association Number"
    prop.isOper = True
    meta.props.add("latestSakAN", prop)

    prop = PropMeta("str", "latestSakKI", "latestSakKI", 33402, PropCategory.REGULAR)
    prop.label = "Latest Secure Association Key (SAK) KI"
    prop.isOper = True
    prop.regex = ['[a-zA-Z0-9]{0,31}']
    meta.props.add("latestSakKI", prop)

    prop = PropMeta("str", "latestSakKN", "latestSakKN", 33403, PropCategory.REGULAR)
    prop.label = "Latest Secure Association Key (SAK) KN"
    prop.isOper = True
    prop.regex = ['[a-zA-Z0-9]{0,31}']
    meta.props.add("latestSakKN", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "mac", "mac", 33392, PropCategory.REGULAR)
    prop.label = "MAC for this interface"
    prop.isOper = True
    meta.props.add("mac", prop)

    prop = PropMeta("str", "mbrId", "mbrId", 33398, PropCategory.REGULAR)
    prop.label = "MKA Key Server's Member Identifier"
    prop.isOper = True
    prop.regex = ['[a-zA-Z0-9]{0,31}']
    meta.props.add("mbrId", prop)

    prop = PropMeta("str", "mkaNegSt", "mkaNegSt", 30288, PropCategory.REGULAR)
    prop.label = "MKA Negotiation Status"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "if-neg-succ"
    prop._addConstant("if-neg-succ", "mka-negotiation-success-on-the-interface", 0)
    prop._addConstant("ks-rx-tx-notset", "mkpdus-rx-drop-sakuse,-key-server-rx/tx-not-set", 8)
    prop._addConstant("rx-an-not-inuse", "mkpdus-rx-drop-sakuse,-association-number-not-in-use", 7)
    prop._addConstant("rx-bad-peer-mn", "mkpdus-rx-bad-peer-message-number", 2)
    prop._addConstant("rx-drop-sakuse-kn-mismatch", "mkpdus-rx-drop-sakuse,-kn-mismatch", 4)
    prop._addConstant("rx-ethertype-mismatch", "mkpdus-rx-drop,-ethertype-mismatch", 9)
    prop._addConstant("rx-key-mi-mismatch", "mkpdus-rx-drop-sakuse,-key-member-identifier-mismatch", 6)
    prop._addConstant("rx-non-recent-peerlist-mn", "mkpdus-rx-non-recent-peerlist-message-number", 3)
    prop._addConstant("rx-not-set", "mkpdus-rx-drop-sakuse,-rx-not-set", 5)
    prop._addConstant("rx-val-fail", "mkpdus-rx-validation-failed", 1)
    meta.props.add("mkaNegSt", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 34269, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "msgNumber", "msgNumber", 33399, PropCategory.REGULAR)
    prop.label = "MKA Message Number"
    prop.isOper = True
    meta.props.add("msgNumber", prop)

    prop = PropMeta("str", "name", "name", 16432, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "operSt", "operSt", 30090, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "down"
    prop._addConstant("down", "down", 2)
    prop._addConstant("up", "up", 1)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 30091, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier"
    prop.isOper = True
    prop.defaultValue = 3
    prop.defaultValueStr = "if-down"
    prop._addConstant("admin-down", "administratively-down", 2)
    prop._addConstant("if-down", "interface-down", 3)
    prop._addConstant("session-not-secured", "session-is-not-secured", 5)
    prop._addConstant("unsupported", "feature-unsupported-on-hardware", 4)
    prop._addConstant("up", "up", 1)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "peerCount", "peerCount", 33396, PropCategory.REGULAR)
    prop.label = "Number of Connected Peers"
    prop.isOper = True
    meta.props.add("peerCount", prop)

    prop = PropMeta("str", "polConfigStatus", "polConfigStatus", 42537, PropCategory.REGULAR)
    prop.label = "Policy Config Status"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "status-ok"
    prop._addConstant("status-conflict", "status-conflict", 2)
    prop._addConstant("status-ok", "status-ok", 1)
    meta.props.add("polConfigStatus", prop)

    prop = PropMeta("str", "policyDn", "policyDn", 35677, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("policyDn", prop)

    prop = PropMeta("str", "portId", "portId", 33393, PropCategory.REGULAR)
    prop.label = "Port Identifier"
    prop.isOper = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dns", "dns", 53)
    prop._addConstant("ftpData", "ftp-data", 20)
    prop._addConstant("http", "http", 80)
    prop._addConstant("https", "https", 443)
    prop._addConstant("pop3", "pop3", 110)
    prop._addConstant("rtsp", "rtsp", 554)
    prop._addConstant("smtp", "smtp", 25)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("portId", prop)

    prop = PropMeta("str", "replayWindow", "replayWindow", 30284, PropCategory.REGULAR)
    prop.label = "Replay Window"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 4294967295)]
    prop.defaultValue = 64
    prop.defaultValueStr = "64"
    meta.props.add("replayWindow", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "sakExpiryTime", "sakExpiryTime", 30286, PropCategory.REGULAR)
    prop.label = "Security Association Key Expiry Time"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 0), (60, 2592000)]
    prop.defaultValue = 0
    prop.defaultValueStr = "disabled"
    prop._addConstant("disabled", "disabled", 0)
    meta.props.add("sakExpiryTime", prop)

    prop = PropMeta("str", "sakStatus", "sakStatus", 33400, PropCategory.REGULAR)
    prop.label = "Secure Association Key (SAK) Status"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no-rx-tx"
    prop._addConstant("no-rx-tx", "no-rx-tx", 0)
    prop._addConstant("rx-and-tx", "rx-and-tx", 3)
    prop._addConstant("rx-only", "rx-only", 2)
    prop._addConstant("tx-only", "tx-only", 1)
    meta.props.add("sakStatus", prop)

    prop = PropMeta("str", "secPolicy", "secPolicy", 30283, PropCategory.REGULAR)
    prop.label = "Security Policy"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "should-secure"
    prop._addConstant("must-secure", "must-secure-mode", 1)
    prop._addConstant("should-secure", "should-secure-mode", 2)
    meta.props.add("secPolicy", prop)

    prop = PropMeta("str", "sessOperSt", "sessOperSt", 33405, PropCategory.REGULAR)
    prop.label = "Session Status"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "not-initialized"
    prop._addConstant("not-initialized", "not-initialized", 0)
    prop._addConstant("pending", "pending", 1)
    prop._addConstant("secured", "secured", 2)
    meta.props.add("sessOperSt", prop)

    prop = PropMeta("str", "srvStatusFlags", "srvStatusFlags", 33397, PropCategory.REGULAR)
    prop.label = "Server Status Flags"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "not-key-server"
    prop._addConstant("key-server", "key-server", 1)
    prop._addConstant("not-key-server", "not-key-server", 0)
    meta.props.add("srvStatusFlags", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "txSCI", "txSCI", 35411, PropCategory.REGULAR)
    prop.label = "Tx-SCI (Secure Channel Identifier)"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("txSCI", prop)

    prop = PropMeta("str", "txSSCI", "txSSCI", 33394, PropCategory.REGULAR)
    prop.label = "Tx-SSCI (Short Secure Channel Identifier)"
    prop.isOper = True
    meta.props.add("txSSCI", prop)

    prop = PropMeta("str", "vlanTagCtrl", "vlanTagCtrl", 30285, PropCategory.REGULAR)
    prop.label = "VlanTag Ctrl"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "skip-0"
    prop._addConstant("skip-0", "skip-0-vlan-tag", 0)
    prop._addConstant("skip-1", "skip-1-vlan-tag", 1)
    prop._addConstant("skip-2", "skip-2-vlan-tags", 2)
    prop._addConstant("skip-3", "skip-3-vlan-tags", 3)
    meta.props.add("vlanTagCtrl", prop)

    meta.namingProps.append(getattr(meta.props, "id"))
    getattr(meta.props, "id").needDelimiter = True

    meta.deploymentCategory = DeploymentCategory("interface", "Interface")
    def __init__(self, parentMoOrDn, id, markDirty=True, **creationProps):
        namingVals = [id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

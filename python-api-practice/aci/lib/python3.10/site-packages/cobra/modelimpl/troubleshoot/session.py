# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Session(Mo):
    """
     \**\**\**\**\**\**\**\**\** MOs \**\**\**\**\**\**\**\**\**\*** 

    """

    meta = ClassMeta("cobra.model.troubleshoot.Session")

    meta.moClassName = "troubleshootSession"
    meta.rnFormat = "session-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Troubleshoot session MO"
    meta.writeAccessMask = 0x800000000000001
    meta.readAccessMask = 0x800000000000001
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = True

    meta.childClasses.add("cobra.model.troubleshoot.RtTroubleshootSessionRel")
    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.troubleshoot.SpanPktUrl")
    meta.childClasses.add("cobra.model.trig.RsTriggerable")
    meta.childClasses.add("cobra.model.troubleshoot.RsSessionScheduler")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.troubleshoot.RtTroubleshootSessionRel", "rtpolTroubleshootSessionRel-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.troubleshoot.RsSessionScheduler", "rsSessionScheduler"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.trig.RsTriggerable", "rsTriggerable"))
    meta.childNamesAndRnPrefix.append(("cobra.model.troubleshoot.SpanPktUrl", "spanPktUrl-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.fabric.Inst")

    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.trig.Executable")
    meta.superClasses.add("cobra.model.pol.Comp")
    meta.superClasses.add("cobra.model.pol.Obj")

    meta.rnPrefixes = [
        ('session-', True),
    ]

    prop = PropMeta("str", "adminSt", "adminSt", 1665, PropCategory.REGULAR)
    prop.label = "Administrative State"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "untriggered"
    prop._addConstant("triggered", "yes", 1)
    prop._addConstant("untriggered", "no", 0)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "analyzerIP", "analyzerIP", 20401, PropCategory.REGULAR)
    prop.label = "Span Analyzer Ip"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("analyzerIP", prop)

    prop = PropMeta("str", "annotation", "annotation", 38217, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "createTime", "createTime", 18536, PropCategory.REGULAR)
    prop.label = "Session create time"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("createTime", prop)

    prop = PropMeta("str", "descr", "descr", 5582, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dstEP", "dstEP", 18533, PropCategory.REGULAR)
    prop.label = "Destination End Point"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("dstEP", prop)

    prop = PropMeta("str", "dstExtIP", "dstExtIP", 19349, PropCategory.REGULAR)
    prop.label = "Destination End Point External IP"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("dstExtIP", prop)

    prop = PropMeta("str", "dstExtMac", "dstExtMac", 21553, PropCategory.REGULAR)
    prop.label = "Destination End Point External Mac"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("dstExtMac", prop)

    prop = PropMeta("str", "dstExtOut", "dstExtOut", 22064, PropCategory.REGULAR)
    prop.label = "Destination External Out"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("dstExtOut", prop)

    prop = PropMeta("str", "dstIP", "dstIP", 19346, PropCategory.REGULAR)
    prop.label = "Destination End Point IP"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("dstIP", prop)

    prop = PropMeta("str", "dstMAC", "dstMAC", 19348, PropCategory.REGULAR)
    prop.label = "Destination End Point MAC"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("dstMAC", prop)

    prop = PropMeta("str", "endTime", "endTime", 18535, PropCategory.REGULAR)
    prop.label = "end time for the session period"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("endTime", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 40356, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "format", "format", 18540, PropCategory.REGULAR)
    prop.label = "Format of the report data (json/xml/cli/html/pdf)"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 3
    prop.defaultValueStr = "pdf"
    prop._addConstant("html", "html", 4)
    prop._addConstant("json", "json", 0)
    prop._addConstant("pdf", "pdf", 3)
    prop._addConstant("txt", "txt", 2)
    prop._addConstant("xml", "xml", 1)
    meta.props.add("format", prop)

    prop = PropMeta("str", "internalSource", "internalSource", 45516, PropCategory.REGULAR)
    prop.label = "Internal Trigger Source"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("internalSource", prop)

    prop = PropMeta("str", "internalType", "internalType", 35604, PropCategory.REGULAR)
    prop.label = "Session type (eptoep/epext) etc for internal use"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("internalType", prop)

    prop = PropMeta("str", "isDstRemote", "isDstRemote", 35603, PropCategory.REGULAR)
    prop.label = "Flag to tell if destination end point is on remote site"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("isDstRemote", prop)

    prop = PropMeta("str", "isSrcRemote", "isSrcRemote", 35602, PropCategory.REGULAR)
    prop.label = "Flag to tell if source end point is on remote site"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("isSrcRemote", prop)

    prop = PropMeta("str", "latestMin", "latestMin", 19768, PropCategory.REGULAR)
    prop.label = "Time window in minutes from now"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(5, 525600)]
    prop.defaultValue = 240
    prop.defaultValueStr = "240"
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("latestMin", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 18650, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "mtu", "mtu", 26399, PropCategory.REGULAR)
    prop.label = "mtu"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(64, 9216)]
    prop.defaultValue = 1518
    prop.defaultValueStr = "1518"
    meta.props.add("mtu", prop)

    prop = PropMeta("str", "name", "name", 20402, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "node", "node", 47370, PropCategory.REGULAR)
    prop.label = "List of nodes"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("node", prop)

    prop = PropMeta("str", "path", "path", 47369, PropCategory.REGULAR)
    prop.label = "List of interfaces"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("path", prop)

    prop = PropMeta("str", "postProcessing", "postProcessing", 47371, PropCategory.REGULAR)
    prop.label = "Postprocessing options configured for session"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("postProcessing", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "scheduler", "scheduler", 18633, PropCategory.REGULAR)
    prop.label = "Name of the scheduler to attach to the session"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("scheduler", prop)

    prop = PropMeta("str", "seqNum", "seqNum", 15995, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("seqNum", prop)

    prop = PropMeta("str", "spanSrcPrefix", "spanSrcPrefix", 25851, PropCategory.REGULAR)
    prop.label = "Span Source Prefix"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("spanSrcPrefix", prop)

    prop = PropMeta("str", "spanStartApicId", "spanStartApicId", 26131, PropCategory.REGULAR)
    prop.label = "Serial Id of APIC"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("spanStartApicId", prop)

    prop = PropMeta("str", "srcEP", "srcEP", 18532, PropCategory.REGULAR)
    prop.label = "Source End Point"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("srcEP", prop)

    prop = PropMeta("str", "srcExtIP", "srcExtIP", 19769, PropCategory.REGULAR)
    prop.label = "Source End Point External IP"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("srcExtIP", prop)

    prop = PropMeta("str", "srcExtMac", "srcExtMac", 21552, PropCategory.REGULAR)
    prop.label = "Source End Point External Mac"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("srcExtMac", prop)

    prop = PropMeta("str", "srcExtOut", "srcExtOut", 22063, PropCategory.REGULAR)
    prop.label = "Source External Out"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("srcExtOut", prop)

    prop = PropMeta("str", "srcIP", "srcIP", 19345, PropCategory.REGULAR)
    prop.label = "Source End Point IP"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("srcIP", prop)

    prop = PropMeta("str", "srcMAC", "srcMAC", 19347, PropCategory.REGULAR)
    prop.label = "Source End Point MAC"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("srcMAC", prop)

    prop = PropMeta("str", "startTime", "startTime", 18534, PropCategory.REGULAR)
    prop.label = "start time for the session period"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("startTime", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "triggerTime", "triggerTime", 1666, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("triggerTime", prop)

    prop = PropMeta("str", "type", "type", 18538, PropCategory.REGULAR)
    prop.label = "Session type (eptoep/epext) etc"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("type", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

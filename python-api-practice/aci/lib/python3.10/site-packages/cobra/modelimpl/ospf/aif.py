# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class AIf(Mo):
    meta = ClassMeta("cobra.model.ospf.AIf")

    meta.isAbstract = True
    meta.moClassName = "ospfAIf"


    meta.moClassName = "ospfAIf"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "Interface"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.nw.RtPathToIf")

    meta.childNamesAndRnPrefix.append(("cobra.model.nw.RtPathToIf", "rtpathToIf-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.superClasses.add("cobra.model.nw.ConnEp")
    meta.superClasses.add("cobra.model.l3.ProtIf")
    meta.superClasses.add("cobra.model.nw.If")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.LogicalIf")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.ProtIf")
    meta.superClasses.add("cobra.model.nw.Ep")

    meta.concreteSubClasses.add("cobra.model.ospf.If")
    meta.concreteSubClasses.add("cobra.model.ospfv3.If")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "addr", "addr", 17214, PropCategory.REGULAR)
    prop.label = "Address"
    prop.isOper = True
    meta.props.add("addr", prop)

    prop = PropMeta("str", "adminSt", "adminSt", 3674, PropCategory.REGULAR)
    prop.label = "Admin State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "area", "area", 17209, PropCategory.REGULAR)
    prop.label = "Area ID"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("area", prop)

    prop = PropMeta("str", "bdr", "bdr", 17216, PropCategory.REGULAR)
    prop.label = "BDR Ip Address"
    prop.isOper = True
    meta.props.add("bdr", prop)

    prop = PropMeta("str", "bdrId", "bdrId", 17218, PropCategory.REGULAR)
    prop.label = "BDR Id"
    prop.isOper = True
    meta.props.add("bdrId", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cost", "cost", 17207, PropCategory.REGULAR)
    prop.label = "Cost"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("cost", prop)

    prop = PropMeta("str", "ctrl", "ctrl", 17201, PropCategory.REGULAR)
    prop.label = "Controls"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("advert-subnet", "advertise-subnet", 4)
    prop._addConstant("bfd", "bfd", 8)
    prop._addConstant("mtu-ignore", "mtu-ignore", 2)
    prop._addConstant("passive", "passive-participation", 1)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("ctrl", prop)

    prop = PropMeta("str", "deadIntvl", "deadIntvl", 17204, PropCategory.REGULAR)
    prop.label = "Dead Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 65535)]
    prop.defaultValue = 40
    prop.defaultValueStr = "40"
    meta.props.add("deadIntvl", prop)

    prop = PropMeta("str", "descr", "descr", 5585, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dr", "dr", 17215, PropCategory.REGULAR)
    prop.label = "DR Ip Address"
    prop.isOper = True
    meta.props.add("dr", prop)

    prop = PropMeta("str", "drId", "drId", 17217, PropCategory.REGULAR)
    prop.label = "DR Id"
    prop.isOper = True
    meta.props.add("drId", prop)

    prop = PropMeta("str", "failStQual", "failStQual", 17211, PropCategory.REGULAR)
    prop.label = "Failed State Qualifier"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("ha-error", "ha-error", 2)
    prop._addConstant("init-error", "initialization-error", 1)
    prop._addConstant("ipc-error", "ipc-error", 16)
    prop._addConstant("mem-error", "memory-error", 8)
    prop._addConstant("mtu-mismatch", "mtu-mismatch-config-error", 64)
    prop._addConstant("proto-error", "protocol-error", 4)
    prop._addConstant("rib-error", "rib-programming-error", 32)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("failStQual", prop)

    prop = PropMeta("str", "flags", "flags", 17213, PropCategory.REGULAR)
    prop.label = "Flags"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("admin-up", "admin-up", 1)
    prop._addConstant("proto-up", "proto-up", 2)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "helloIntvl", "helloIntvl", 17203, PropCategory.REGULAR)
    prop.label = "Hello Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 65535)]
    prop.defaultValue = 10
    prop.defaultValueStr = "10"
    meta.props.add("helloIntvl", prop)

    prop = PropMeta("str", "id", "id", 3673, PropCategory.REGULAR)
    prop.label = "Interface ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "lsaCksumSum", "lsaCksumSum", 17219, PropCategory.REGULAR)
    prop.label = "LSA Checksum Sum"
    prop.isOper = True
    meta.props.add("lsaCksumSum", prop)

    prop = PropMeta("str", "name", "name", 16432, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "nwT", "nwT", 17202, PropCategory.REGULAR)
    prop.label = "Network Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("bcast", "broadcast", 2)
    prop._addConstant("p2p", "point-to-point", 1)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("nwT", prop)

    prop = PropMeta("str", "operCost", "operCost", 17220, PropCategory.REGULAR)
    prop.label = "Operational Cost"
    prop.isOper = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("operCost", prop)

    prop = PropMeta("str", "operSt", "operSt", 17210, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "down"
    prop._addConstant("bdr", "bdr", 6)
    prop._addConstant("down", "down", 1)
    prop._addConstant("dr", "dr", 5)
    prop._addConstant("dr-other", "dr-other", 7)
    prop._addConstant("loopback", "loopback", 2)
    prop._addConstant("p2p", "p2p", 4)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("waiting", "waiting", 3)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "p2pOperSt", "p2pOperSt", 34102, PropCategory.REGULAR)
    prop.label = "P2P IF Operational State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "ok"
    prop._addConstant("nbr-exceeded", "neighbors-limit-on-p2p-interface-exceeded", 1)
    prop._addConstant("ok", "ok", 0)
    meta.props.add("p2pOperSt", prop)

    prop = PropMeta("str", "pfxSuppress", "pfxSuppress", 22621, PropCategory.REGULAR)
    prop.label = "Prefix Suppression"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "inherit"
    prop._addConstant("disable", "disable", 2)
    prop._addConstant("enable", "enable", 1)
    prop._addConstant("inherit", "inherit", 0)
    meta.props.add("pfxSuppress", prop)

    prop = PropMeta("str", "prio", "prio", 17206, PropCategory.REGULAR)
    prop.label = "Priority"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("prio", prop)

    prop = PropMeta("str", "rexmitIntvl", "rexmitIntvl", 17205, PropCategory.REGULAR)
    prop.label = "Retransmit Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 65535)]
    prop.defaultValue = 5
    prop.defaultValueStr = "5"
    meta.props.add("rexmitIntvl", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "type", "type", 17212, PropCategory.REGULAR)
    prop.label = "Type"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("bcast", "broadcast", 5)
    prop._addConstant("loopback", "loopback", 1)
    prop._addConstant("nbma", "nbma", 4)
    prop._addConstant("p2mp", "p2mp", 3)
    prop._addConstant("p2p", "p2p", 2)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("type", prop)

    prop = PropMeta("str", "xmitDelay", "xmitDelay", 17208, PropCategory.REGULAR)
    prop.label = "Transmit Delay"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 450)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("xmitDelay", prop)

    meta.deploymentCategory = DeploymentCategory("interface", "Interface")
    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class SelfStatsHist5min(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.ospf.SelfStatsHist5min", "Ospf Self Counter")

    counter = CounterMeta("peerCnt", CounterCategory.COUNTER, "packets", "Peer Count")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "peerCntCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "peerCntPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "peerCntMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "peerCntMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "peerCntAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "peerCntSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "peerCntThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "peerCntTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "peerCntRate"
    meta._counters.append(counter)

    counter = CounterMeta("lsaCnt", CounterCategory.COUNTER, "packets", "LSA Count")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "lsaCntCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "lsaCntPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "lsaCntMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "lsaCntMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "lsaCntAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "lsaCntSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "lsaCntThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "lsaCntTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "lsaCntRate"
    meta._counters.append(counter)

    counter = CounterMeta("evCnt", CounterCategory.COUNTER, "packets", "If Events Count")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "evCntCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "evCntPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "evCntMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "evCntMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "evCntAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "evCntSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "evCntThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "evCntTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "evCntRate"
    meta._counters.append(counter)

    meta.moClassName = "ospfSelfStatsHist5min"
    meta.rnFormat = "HDospfSelfStats5min-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical Ospf Self Counter stats in 5 minute"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.ospf.IfStats")

    meta.superClasses.add("cobra.model.stats.Hist")
    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.ospf.SelfStatsHist")

    meta.rnPrefixes = [
        ('HDospfSelfStats5min-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "evCntAvg", "evCntAvg", 49173, PropCategory.IMPLICIT_AVG)
    prop.label = "If Events Count average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("evCntAvg", prop)

    prop = PropMeta("str", "evCntCum", "evCntCum", 49169, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "If Events Count cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("evCntCum", prop)

    prop = PropMeta("str", "evCntMax", "evCntMax", 49172, PropCategory.IMPLICIT_MAX)
    prop.label = "If Events Count maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("evCntMax", prop)

    prop = PropMeta("str", "evCntMin", "evCntMin", 49171, PropCategory.IMPLICIT_MIN)
    prop.label = "If Events Count minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("evCntMin", prop)

    prop = PropMeta("str", "evCntPer", "evCntPer", 49170, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "If Events Count periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("evCntPer", prop)

    prop = PropMeta("str", "evCntRate", "evCntRate", 49177, PropCategory.IMPLICIT_RATE)
    prop.label = "If Events Count rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("evCntRate", prop)

    prop = PropMeta("str", "evCntSpct", "evCntSpct", 49174, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "If Events Count suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("evCntSpct", prop)

    prop = PropMeta("str", "evCntThr", "evCntThr", 49175, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "If Events Count thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("evCntThr", prop)

    prop = PropMeta("str", "evCntTr", "evCntTr", 49176, PropCategory.IMPLICIT_TREND)
    prop.label = "If Events Count trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("evCntTr", prop)

    prop = PropMeta("str", "index", "index", 47872, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "lsaCntAvg", "lsaCntAvg", 49194, PropCategory.IMPLICIT_AVG)
    prop.label = "LSA Count average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsaCntAvg", prop)

    prop = PropMeta("str", "lsaCntCum", "lsaCntCum", 49190, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "LSA Count cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsaCntCum", prop)

    prop = PropMeta("str", "lsaCntMax", "lsaCntMax", 49193, PropCategory.IMPLICIT_MAX)
    prop.label = "LSA Count maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsaCntMax", prop)

    prop = PropMeta("str", "lsaCntMin", "lsaCntMin", 49192, PropCategory.IMPLICIT_MIN)
    prop.label = "LSA Count minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsaCntMin", prop)

    prop = PropMeta("str", "lsaCntPer", "lsaCntPer", 49191, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "LSA Count periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsaCntPer", prop)

    prop = PropMeta("str", "lsaCntRate", "lsaCntRate", 49198, PropCategory.IMPLICIT_RATE)
    prop.label = "LSA Count rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsaCntRate", prop)

    prop = PropMeta("str", "lsaCntSpct", "lsaCntSpct", 49195, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "LSA Count suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsaCntSpct", prop)

    prop = PropMeta("str", "lsaCntThr", "lsaCntThr", 49196, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "LSA Count thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("lsaCntThr", prop)

    prop = PropMeta("str", "lsaCntTr", "lsaCntTr", 49197, PropCategory.IMPLICIT_TREND)
    prop.label = "LSA Count trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsaCntTr", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "peerCntAvg", "peerCntAvg", 49215, PropCategory.IMPLICIT_AVG)
    prop.label = "Peer Count average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("peerCntAvg", prop)

    prop = PropMeta("str", "peerCntCum", "peerCntCum", 49211, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Peer Count cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("peerCntCum", prop)

    prop = PropMeta("str", "peerCntMax", "peerCntMax", 49214, PropCategory.IMPLICIT_MAX)
    prop.label = "Peer Count maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("peerCntMax", prop)

    prop = PropMeta("str", "peerCntMin", "peerCntMin", 49213, PropCategory.IMPLICIT_MIN)
    prop.label = "Peer Count minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("peerCntMin", prop)

    prop = PropMeta("str", "peerCntPer", "peerCntPer", 49212, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Peer Count periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("peerCntPer", prop)

    prop = PropMeta("str", "peerCntRate", "peerCntRate", 49219, PropCategory.IMPLICIT_RATE)
    prop.label = "Peer Count rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("peerCntRate", prop)

    prop = PropMeta("str", "peerCntSpct", "peerCntSpct", 49216, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Peer Count suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("peerCntSpct", prop)

    prop = PropMeta("str", "peerCntThr", "peerCntThr", 49217, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Peer Count thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("peerCntThr", prop)

    prop = PropMeta("str", "peerCntTr", "peerCntTr", 49218, PropCategory.IMPLICIT_TREND)
    prop.label = "Peer Count trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("peerCntTr", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

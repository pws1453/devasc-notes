# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class CtxDef(Mo):
    """
    The context-level OSPF definition.

    """

    meta = ClassMeta("cobra.model.ospf.CtxDef")

    meta.moClassName = "ospfCtxDef"
    meta.rnFormat = "ospfCtxP"
    meta.category = MoCategory.REGULAR
    meta.label = "Context Policy Definition"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.fv.RtdEpP")
    meta.parentClasses.add("cobra.model.l3ext.RtdOutDef")
    meta.parentClasses.add("cobra.model.fv.BrEpP")

    meta.superClasses.add("cobra.model.fabric.L3CtxPol")
    meta.superClasses.add("cobra.model.fabric.ProtoPol")
    meta.superClasses.add("cobra.model.ospf.ACtxPol")
    meta.superClasses.add("cobra.model.fabric.ProtoDomPol")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Def")
    meta.superClasses.add("cobra.model.fabric.L3DomPol")

    meta.rnPrefixes = [
        ('ospfCtxP', False),
    ]

    prop = PropMeta("str", "bwRef", "bwRef", 1089, PropCategory.REGULAR)
    prop.label = "Bandwidth Preference"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 4000000)]
    prop.defaultValue = 40000
    prop.defaultValueStr = "40000"
    meta.props.add("bwRef", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "ctrl", "ctrl", 22755, PropCategory.REGULAR)
    prop.label = "Control knobs"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop._addConstant("name-lookup", "enable-name-lookup-for-router-ids", 2)
    prop._addConstant("pfx-suppress", "prefix-suppression", 1)
    meta.props.add("ctrl", prop)

    prop = PropMeta("str", "descr", "descr", 5579, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dist", "dist", 1087, PropCategory.REGULAR)
    prop.label = "Distance Preference"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 255)]
    prop.defaultValue = 110
    prop.defaultValueStr = "110"
    meta.props.add("dist", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "grCtrl", "grCtrl", 1098, PropCategory.REGULAR)
    prop.label = "Graceful Restart Controls"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "helper"
    prop._addConstant("helper", "graceful-restart-helper", 1)
    meta.props.add("grCtrl", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "lsaArrivalIntvl", "lsaArrivalIntvl", 1094, PropCategory.REGULAR)
    prop.label = "Min Arrival Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(10, 600000)]
    prop.defaultValue = 1000
    prop.defaultValueStr = "1000"
    meta.props.add("lsaArrivalIntvl", prop)

    prop = PropMeta("str", "lsaGpPacingIntvl", "lsaGpPacingIntvl", 1093, PropCategory.REGULAR)
    prop.label = "Pacing Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 1800)]
    prop.defaultValue = 10
    prop.defaultValueStr = "10"
    meta.props.add("lsaGpPacingIntvl", prop)

    prop = PropMeta("str", "lsaHoldIntvl", "lsaHoldIntvl", 1096, PropCategory.REGULAR)
    prop.label = "Throttle Hold  Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(50, 30000)]
    prop.defaultValue = 5000
    prop.defaultValueStr = "5000"
    meta.props.add("lsaHoldIntvl", prop)

    prop = PropMeta("str", "lsaMaxIntvl", "lsaMaxIntvl", 1097, PropCategory.REGULAR)
    prop.label = "Throttle Max Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(50, 30000)]
    prop.defaultValue = 5000
    prop.defaultValueStr = "5000"
    meta.props.add("lsaMaxIntvl", prop)

    prop = PropMeta("str", "lsaStartIntvl", "lsaStartIntvl", 1095, PropCategory.REGULAR)
    prop.label = "Throttle Start Wait Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 5000)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("lsaStartIntvl", prop)

    prop = PropMeta("str", "maxEcmp", "maxEcmp", 1088, PropCategory.REGULAR)
    prop.label = "Max ECMP"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 64)]
    prop.defaultValue = 8
    prop.defaultValueStr = "8"
    meta.props.add("maxEcmp", prop)

    prop = PropMeta("str", "maxLsaAction", "maxLsaAction", 17808, PropCategory.REGULAR)
    prop.label = "Action"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "reject"
    prop._addConstant("log", "log", 2)
    prop._addConstant("reject", "reject", 0)
    prop._addConstant("restart", "restart", 1)
    meta.props.add("maxLsaAction", prop)

    prop = PropMeta("str", "maxLsaNum", "maxLsaNum", 17803, PropCategory.REGULAR)
    prop.label = "Maximum # of non self-generated LSAs"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 4294967295)]
    prop.defaultValue = 20000
    prop.defaultValueStr = "20000"
    meta.props.add("maxLsaNum", prop)

    prop = PropMeta("str", "maxLsaResetIntvl", "maxLsaResetIntvl", 17807, PropCategory.REGULAR)
    prop.label = "Reset Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 1440)]
    prop.defaultValue = 10
    prop.defaultValueStr = "10"
    meta.props.add("maxLsaResetIntvl", prop)

    prop = PropMeta("str", "maxLsaSleepCnt", "maxLsaSleepCnt", 17805, PropCategory.REGULAR)
    prop.label = "Sleep Count"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 4294967295)]
    prop.defaultValue = 5
    prop.defaultValueStr = "5"
    meta.props.add("maxLsaSleepCnt", prop)

    prop = PropMeta("str", "maxLsaSleepIntvl", "maxLsaSleepIntvl", 17806, PropCategory.REGULAR)
    prop.label = "Sleep Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 1440)]
    prop.defaultValue = 5
    prop.defaultValueStr = "5"
    meta.props.add("maxLsaSleepIntvl", prop)

    prop = PropMeta("str", "maxLsaThresh", "maxLsaThresh", 17804, PropCategory.REGULAR)
    prop.label = "Threshold"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 100)]
    prop.defaultValue = 75
    prop.defaultValueStr = "75"
    meta.props.add("maxLsaThresh", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "spfHoldIntvl", "spfHoldIntvl", 1091, PropCategory.REGULAR)
    prop.label = "Max Hold Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 600000)]
    prop.defaultValue = 1000
    prop.defaultValueStr = "1000"
    meta.props.add("spfHoldIntvl", prop)

    prop = PropMeta("str", "spfInitIntvl", "spfInitIntvl", 1090, PropCategory.REGULAR)
    prop.label = "Initial Delay Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 600000)]
    prop.defaultValue = 200
    prop.defaultValueStr = "200"
    meta.props.add("spfInitIntvl", prop)

    prop = PropMeta("str", "spfMaxIntvl", "spfMaxIntvl", 1092, PropCategory.REGULAR)
    prop.label = "Min Wait Time"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 600000)]
    prop.defaultValue = 5000
    prop.defaultValueStr = "5000"
    meta.props.add("spfMaxIntvl", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

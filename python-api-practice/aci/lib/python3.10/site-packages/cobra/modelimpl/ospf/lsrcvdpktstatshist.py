# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class LsRcvdPktStatsHist(Mo):
    meta = StatsClassMeta("cobra.model.ospf.LsRcvdPktStatsHist", "Ospf LS Rcvd Packets")

    counter = CounterMeta("lsAckPktsRcvd", CounterCategory.COUNTER, "packets", "LSACK Packets Received")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "lsAckPktsRcvdCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "lsAckPktsRcvdPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "lsAckPktsRcvdMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "lsAckPktsRcvdMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "lsAckPktsRcvdAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "lsAckPktsRcvdSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "lsAckPktsRcvdThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "lsAckPktsRcvdTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "lsAckPktsRcvdRate"
    meta._counters.append(counter)

    counter = CounterMeta("lsUpdPktsRcvd", CounterCategory.COUNTER, "packets", "LSU Packets Received")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "lsUpdPktsRcvdCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "lsUpdPktsRcvdPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "lsUpdPktsRcvdMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "lsUpdPktsRcvdMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "lsUpdPktsRcvdAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "lsUpdPktsRcvdSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "lsUpdPktsRcvdThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "lsUpdPktsRcvdTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "lsUpdPktsRcvdRate"
    meta._counters.append(counter)

    counter = CounterMeta("lsReqPktsRcvd", CounterCategory.COUNTER, "packets", "LSREQ Packets Received")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "lsReqPktsRcvdCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "lsReqPktsRcvdPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "lsReqPktsRcvdMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "lsReqPktsRcvdMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "lsReqPktsRcvdAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "lsReqPktsRcvdSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "lsReqPktsRcvdThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "lsReqPktsRcvdTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "lsReqPktsRcvdRate"
    meta._counters.append(counter)

    meta.isAbstract = True
    meta.moClassName = "ospfLsRcvdPktStatsHist"


    meta.moClassName = "ospfLsRcvdPktStatsHist"
    meta.rnFormat = ""
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical Ospf LS Rcvd Packets stats"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Hist")

    meta.concreteSubClasses.add("cobra.model.ospf.LsRcvdPktStatsHist1mo")
    meta.concreteSubClasses.add("cobra.model.ospf.LsRcvdPktStatsHist5min")
    meta.concreteSubClasses.add("cobra.model.ospf.LsRcvdPktStatsHist1h")
    meta.concreteSubClasses.add("cobra.model.ospf.LsRcvdPktStatsHist15min")
    meta.concreteSubClasses.add("cobra.model.ospf.LsRcvdPktStatsHist1w")
    meta.concreteSubClasses.add("cobra.model.ospf.LsRcvdPktStatsHist1year")
    meta.concreteSubClasses.add("cobra.model.ospf.LsRcvdPktStatsHist1qtr")
    meta.concreteSubClasses.add("cobra.model.ospf.LsRcvdPktStatsHist1d")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "index", "index", 115, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "lsAckPktsRcvdAvg", "lsAckPktsRcvdAvg", 48711, PropCategory.IMPLICIT_AVG)
    prop.label = "LSACK Packets Received average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsAckPktsRcvdAvg", prop)

    prop = PropMeta("str", "lsAckPktsRcvdCum", "lsAckPktsRcvdCum", 48707, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "LSACK Packets Received cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsAckPktsRcvdCum", prop)

    prop = PropMeta("str", "lsAckPktsRcvdMax", "lsAckPktsRcvdMax", 48710, PropCategory.IMPLICIT_MAX)
    prop.label = "LSACK Packets Received maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsAckPktsRcvdMax", prop)

    prop = PropMeta("str", "lsAckPktsRcvdMin", "lsAckPktsRcvdMin", 48709, PropCategory.IMPLICIT_MIN)
    prop.label = "LSACK Packets Received minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsAckPktsRcvdMin", prop)

    prop = PropMeta("str", "lsAckPktsRcvdPer", "lsAckPktsRcvdPer", 48708, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "LSACK Packets Received periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsAckPktsRcvdPer", prop)

    prop = PropMeta("str", "lsAckPktsRcvdRate", "lsAckPktsRcvdRate", 48715, PropCategory.IMPLICIT_RATE)
    prop.label = "LSACK Packets Received rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsAckPktsRcvdRate", prop)

    prop = PropMeta("str", "lsAckPktsRcvdSpct", "lsAckPktsRcvdSpct", 48712, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "LSACK Packets Received suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsAckPktsRcvdSpct", prop)

    prop = PropMeta("str", "lsAckPktsRcvdThr", "lsAckPktsRcvdThr", 48713, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "LSACK Packets Received thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("lsAckPktsRcvdThr", prop)

    prop = PropMeta("str", "lsAckPktsRcvdTr", "lsAckPktsRcvdTr", 48714, PropCategory.IMPLICIT_TREND)
    prop.label = "LSACK Packets Received trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsAckPktsRcvdTr", prop)

    prop = PropMeta("str", "lsReqPktsRcvdAvg", "lsReqPktsRcvdAvg", 48732, PropCategory.IMPLICIT_AVG)
    prop.label = "LSREQ Packets Received average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsReqPktsRcvdAvg", prop)

    prop = PropMeta("str", "lsReqPktsRcvdCum", "lsReqPktsRcvdCum", 48728, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "LSREQ Packets Received cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsReqPktsRcvdCum", prop)

    prop = PropMeta("str", "lsReqPktsRcvdMax", "lsReqPktsRcvdMax", 48731, PropCategory.IMPLICIT_MAX)
    prop.label = "LSREQ Packets Received maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsReqPktsRcvdMax", prop)

    prop = PropMeta("str", "lsReqPktsRcvdMin", "lsReqPktsRcvdMin", 48730, PropCategory.IMPLICIT_MIN)
    prop.label = "LSREQ Packets Received minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsReqPktsRcvdMin", prop)

    prop = PropMeta("str", "lsReqPktsRcvdPer", "lsReqPktsRcvdPer", 48729, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "LSREQ Packets Received periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsReqPktsRcvdPer", prop)

    prop = PropMeta("str", "lsReqPktsRcvdRate", "lsReqPktsRcvdRate", 48736, PropCategory.IMPLICIT_RATE)
    prop.label = "LSREQ Packets Received rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsReqPktsRcvdRate", prop)

    prop = PropMeta("str", "lsReqPktsRcvdSpct", "lsReqPktsRcvdSpct", 48733, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "LSREQ Packets Received suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsReqPktsRcvdSpct", prop)

    prop = PropMeta("str", "lsReqPktsRcvdThr", "lsReqPktsRcvdThr", 48734, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "LSREQ Packets Received thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("lsReqPktsRcvdThr", prop)

    prop = PropMeta("str", "lsReqPktsRcvdTr", "lsReqPktsRcvdTr", 48735, PropCategory.IMPLICIT_TREND)
    prop.label = "LSREQ Packets Received trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsReqPktsRcvdTr", prop)

    prop = PropMeta("str", "lsUpdPktsRcvdAvg", "lsUpdPktsRcvdAvg", 48753, PropCategory.IMPLICIT_AVG)
    prop.label = "LSU Packets Received average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsUpdPktsRcvdAvg", prop)

    prop = PropMeta("str", "lsUpdPktsRcvdCum", "lsUpdPktsRcvdCum", 48749, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "LSU Packets Received cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsUpdPktsRcvdCum", prop)

    prop = PropMeta("str", "lsUpdPktsRcvdMax", "lsUpdPktsRcvdMax", 48752, PropCategory.IMPLICIT_MAX)
    prop.label = "LSU Packets Received maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsUpdPktsRcvdMax", prop)

    prop = PropMeta("str", "lsUpdPktsRcvdMin", "lsUpdPktsRcvdMin", 48751, PropCategory.IMPLICIT_MIN)
    prop.label = "LSU Packets Received minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsUpdPktsRcvdMin", prop)

    prop = PropMeta("str", "lsUpdPktsRcvdPer", "lsUpdPktsRcvdPer", 48750, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "LSU Packets Received periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsUpdPktsRcvdPer", prop)

    prop = PropMeta("str", "lsUpdPktsRcvdRate", "lsUpdPktsRcvdRate", 48757, PropCategory.IMPLICIT_RATE)
    prop.label = "LSU Packets Received rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsUpdPktsRcvdRate", prop)

    prop = PropMeta("str", "lsUpdPktsRcvdSpct", "lsUpdPktsRcvdSpct", 48754, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "LSU Packets Received suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsUpdPktsRcvdSpct", prop)

    prop = PropMeta("str", "lsUpdPktsRcvdThr", "lsUpdPktsRcvdThr", 48755, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "LSU Packets Received thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("lsUpdPktsRcvdThr", prop)

    prop = PropMeta("str", "lsUpdPktsRcvdTr", "lsUpdPktsRcvdTr", 48756, PropCategory.IMPLICIT_TREND)
    prop.label = "LSU Packets Received trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lsUpdPktsRcvdTr", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

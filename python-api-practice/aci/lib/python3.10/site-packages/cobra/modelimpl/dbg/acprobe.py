# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class ACProbe(Mo):
    """
    The atomic counter probe.

    """

    meta = ClassMeta("cobra.model.dbg.ACProbe")

    meta.moClassName = "dbgACProbe"
    meta.rnFormat = "pb-%(ruleName)s"
    meta.category = MoCategory.REGULAR
    meta.label = "On-Demand Atomic Counter-based Probe"
    meta.writeAccessMask = 0x80008180000c001
    meta.readAccessMask = 0x80008180000c001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.childClasses.add("cobra.model.dbg.ACPbStats")
    meta.childClasses.add("cobra.model.dbg.ACPbPathStats")

    meta.childNamesAndRnPrefix.append(("cobra.model.dbg.ACPbStats", "nstats-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dbg.ACPbPathStats", "pstats-"))

    meta.parentClasses.add("cobra.model.dbg.ACProbes")

    meta.rnPrefixes = [
        ('pb-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dropP", "dropP", 4633, PropCategory.REGULAR)
    prop.label = "Total Dropped Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dropP", prop)

    prop = PropMeta("str", "exssP", "exssP", 4634, PropCategory.REGULAR)
    prop.label = "Total Excess Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("exssP", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "percentDropP", "percentDropP", 4635, PropCategory.REGULAR)
    prop.label = "Percentage of Total Dropped Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("percentDropP", prop)

    prop = PropMeta("str", "percentExssP", "percentExssP", 4636, PropCategory.REGULAR)
    prop.label = "Percentage of Total Excess Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("percentExssP", prop)

    prop = PropMeta("str", "percentTotDropP", "percentTotDropP", 4629, PropCategory.REGULAR)
    prop.label = "Percentage of Total Dropped Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("percentTotDropP", prop)

    prop = PropMeta("str", "percentTotExssP", "percentTotExssP", 4630, PropCategory.REGULAR)
    prop.label = "Percentage of Total Excess Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("percentTotExssP", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "ruleName", "ruleName", 4622, PropCategory.REGULAR)
    prop.label = "Name of the Corresponding Rule"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 512)]
    meta.props.add("ruleName", prop)

    prop = PropMeta("str", "rxP", "rxP", 4632, PropCategory.REGULAR)
    prop.label = "Total Received Packets at all the Leafs"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("rxP", prop)

    prop = PropMeta("str", "st", "st", 4621, PropCategory.REGULAR)
    prop.label = "Probe ID Number"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "Disabled"
    prop._addConstant("Disabled", "disabled", 2)
    prop._addConstant("Enabled", "enabled", 1)
    meta.props.add("st", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tgtType", "tgtType", 4623, PropCategory.REGULAR)
    prop.label = "Target Types for the Probe"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 6
    prop.defaultValueStr = "all"
    prop._addConstant("DstL", "dstl", 2)
    prop._addConstant("SrcDstL", "srcdstl", 3)
    prop._addConstant("SrcDstLS", "srcdstls", 4)
    prop._addConstant("SrcDstLSAll", "srcdstlsall", 5)
    prop._addConstant("SrcL", "srcl", 1)
    prop._addConstant("Unknown", "unknown", 0)
    prop._addConstant("all", "all", 6)
    meta.props.add("tgtType", prop)

    prop = PropMeta("str", "totDropP", "totDropP", 4627, PropCategory.REGULAR)
    prop.label = "Total Dropped Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("totDropP", prop)

    prop = PropMeta("str", "totExssP", "totExssP", 4628, PropCategory.REGULAR)
    prop.label = "Total Excess Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("totExssP", prop)

    prop = PropMeta("str", "totRxP", "totRxP", 4626, PropCategory.REGULAR)
    prop.label = "Total Received Packets at all the Leafs"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("totRxP", prop)

    prop = PropMeta("str", "totTxP", "totTxP", 4625, PropCategory.REGULAR)
    prop.label = "Total Transmitted Packets from all the Leafs"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("totTxP", prop)

    prop = PropMeta("str", "ts", "ts", 4624, PropCategory.REGULAR)
    prop.label = "Last Update Timestamp"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("ts", prop)

    prop = PropMeta("str", "txP", "txP", 4631, PropCategory.REGULAR)
    prop.label = "Total Transmitted Packets from all the Leafs"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("txP", prop)

    meta.namingProps.append(getattr(meta.props, "ruleName"))

    def __init__(self, parentMoOrDn, ruleName, markDirty=True, **creationProps):
        namingVals = [ruleName]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class AcOdE(Mo):
    meta = ClassMeta("cobra.model.dbg.AcOdE")

    meta.isAbstract = True
    meta.moClassName = "dbgAcOdE"


    meta.moClassName = "dbgAcOdE"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "Abstract Atomic Counter Entry Stats"
    meta.writeAccessMask = 0xc001
    meta.readAccessMask = 0xc001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.dbg.ODACB0")
    meta.parentClasses.add("cobra.model.dbg.ODACB1")

    meta.concreteSubClasses.add("cobra.model.dbg.IpToIp")
    meta.concreteSubClasses.add("cobra.model.dbg.AnyToEp")
    meta.concreteSubClasses.add("cobra.model.dbg.EpgToIp")
    meta.concreteSubClasses.add("cobra.model.dbg.IpToEp")
    meta.concreteSubClasses.add("cobra.model.dbg.Expert")
    meta.concreteSubClasses.add("cobra.model.dbg.FiveTuple")
    meta.concreteSubClasses.add("cobra.model.dbg.EpgToEp")
    meta.concreteSubClasses.add("cobra.model.dbg.EpgToEpg")
    meta.concreteSubClasses.add("cobra.model.dbg.EpToIp")
    meta.concreteSubClasses.add("cobra.model.dbg.EpToEp")
    meta.concreteSubClasses.add("cobra.model.dbg.EpToEpg")
    meta.concreteSubClasses.add("cobra.model.dbg.EpToAny")
    meta.concreteSubClasses.add("cobra.model.dbg.IpToEpg")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "admitRxB", "admitRxB", 4487, PropCategory.REGULAR)
    prop.label = "Admitted Bytes"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("admitRxB", prop)

    prop = PropMeta("str", "admitRxP", "admitRxP", 4488, PropCategory.REGULAR)
    prop.label = "Admitted Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("admitRxP", prop)

    prop = PropMeta("str", "admitTotRxB", "admitTotRxB", 4495, PropCategory.REGULAR)
    prop.label = "Total Admitted Bytes"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("admitTotRxB", prop)

    prop = PropMeta("str", "admitTotRxP", "admitTotRxP", 4496, PropCategory.REGULAR)
    prop.label = "Total Admitted Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("admitTotRxP", prop)

    prop = PropMeta("str", "admitTotTxB", "admitTotTxB", 4491, PropCategory.REGULAR)
    prop.label = "Total Admitted Bytes"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("admitTotTxB", prop)

    prop = PropMeta("str", "admitTotTxP", "admitTotTxP", 4492, PropCategory.REGULAR)
    prop.label = "Total Admitted Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("admitTotTxP", prop)

    prop = PropMeta("str", "admitTxB", "admitTxB", 4483, PropCategory.REGULAR)
    prop.label = "Admitted Bytes"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("admitTxB", prop)

    prop = PropMeta("str", "admitTxP", "admitTxP", 4484, PropCategory.REGULAR)
    prop.label = "Admitted Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("admitTxP", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "createTs", "createTs", 15725, PropCategory.REGULAR)
    prop.label = "Creation Timestamp in Milliseconds Since Epoch"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("createTs", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dropRxB", "dropRxB", 4489, PropCategory.REGULAR)
    prop.label = "Dropped Bytes"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dropRxB", prop)

    prop = PropMeta("str", "dropRxP", "dropRxP", 4490, PropCategory.REGULAR)
    prop.label = "Dropped Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dropRxP", prop)

    prop = PropMeta("str", "dropTotRxB", "dropTotRxB", 4497, PropCategory.REGULAR)
    prop.label = "Total Dropped Bytes"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dropTotRxB", prop)

    prop = PropMeta("str", "dropTotRxP", "dropTotRxP", 4498, PropCategory.REGULAR)
    prop.label = "Total Dropped Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dropTotRxP", prop)

    prop = PropMeta("str", "dropTotTxB", "dropTotTxB", 4493, PropCategory.REGULAR)
    prop.label = "Total Dropped Bytes"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dropTotTxB", prop)

    prop = PropMeta("str", "dropTotTxP", "dropTotTxP", 4494, PropCategory.REGULAR)
    prop.label = "Total Dropped Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dropTotTxP", prop)

    prop = PropMeta("str", "dropTxB", "dropTxB", 4485, PropCategory.REGULAR)
    prop.label = "Dropped Bytes"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dropTxB", prop)

    prop = PropMeta("str", "dropTxP", "dropTxP", 4486, PropCategory.REGULAR)
    prop.label = "Dropped Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dropTxP", prop)

    prop = PropMeta("str", "filtEnt", "filtEnt", 4477, PropCategory.REGULAR)
    prop.label = "Filter Indicating Layer 4 Ports"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("filtEnt", prop)

    prop = PropMeta("str", "firstCollTs", "firstCollTs", 4480, PropCategory.REGULAR)
    prop.label = "First Collection Timestamp in Milliseconds Since Epoch"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("firstCollTs", prop)

    prop = PropMeta("str", "lastCollTs", "lastCollTs", 4479, PropCategory.REGULAR)
    prop.label = "Collection Timestamp in Milliseconds Since Epoch"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollTs", prop)

    prop = PropMeta("str", "localNodeId", "localNodeId", 4478, PropCategory.REGULAR)
    prop.label = "Source Fabric Node ID"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 16000)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("localNodeId", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "ruleId", "ruleId", 4482, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("ruleId", prop)

    prop = PropMeta("str", "ruleId2", "ruleId2", 15735, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("ruleId2", prop)

    prop = PropMeta("str", "ruleName", "ruleName", 4474, PropCategory.REGULAR)
    prop.label = "Atomic Policy Rule Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("ruleName", prop)

    prop = PropMeta("str", "seqNo", "seqNo", 4481, PropCategory.REGULAR)
    prop.label = "Sequence Number, Increamented by One after                                  every Collection"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("seqNo", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tenantName", "tenantName", 4475, PropCategory.REGULAR)
    prop.label = "Tenant Name for this Atomic Counter Rule"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("tenantName", prop)

    prop = PropMeta("str", "type", "type", 4476, PropCategory.REGULAR)
    prop.label = "Atomic Counter Rule Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("anyToEp", "anytoep", 70)
    prop._addConstant("apDdEpgToEpg", "apddepgtoepg", 81)
    prop._addConstant("apEpgToEpg", "apepgtoepg", 82)
    prop._addConstant("epToAny", "eptoany", 50)
    prop._addConstant("epToEp", "eptoep", 30)
    prop._addConstant("epToEpg", "eptoepg", 40)
    prop._addConstant("epToIp", "eptoip", 31)
    prop._addConstant("epgToEp", "epgtoep", 60)
    prop._addConstant("epgToEpg", "epgtoepg", 80)
    prop._addConstant("epgToEpgDdEpToEp", "epgtoepgddeptoep", 33)
    prop._addConstant("epgToIp", "epgtoip", 61)
    prop._addConstant("expert", "expert", 10)
    prop._addConstant("fiveTuple", "fivetuple", 20)
    prop._addConstant("ipToEp", "iptoep", 32)
    prop._addConstant("ipToEpg", "iptoepg", 41)
    prop._addConstant("ipToIp", "iptoip", 36)
    prop._addConstant("tnDdEpgToEpg", "tnddepgtoepg", 83)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("type", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

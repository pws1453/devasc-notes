# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class ACRuleIp(Mo):
    """
    The IP match rule policy for atomic counter probe.

    """

    meta = ClassMeta("cobra.model.dbg.ACRuleIp")

    meta.moClassName = "dbgACRuleIp"
    meta.rnFormat = "acRuleIp-%(ruleName)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Atomic Counter IP Entry Policy"
    meta.writeAccessMask = 0x80008180000c001
    meta.readAccessMask = 0x80008180000c001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.dbg.AtomicCntrP")

    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Comp")
    meta.superClasses.add("cobra.model.dbg.ACRulePCommon")

    meta.rnPrefixes = [
        ('acRuleIp-', True),
    ]

    prop = PropMeta("str", "adminSt", "adminSt", 4518, PropCategory.REGULAR)
    prop.label = "Administrative State"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dPcTag", "dPcTag", 4528, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop._addConstant("any", "any", 0)
    meta.props.add("dPcTag", prop)

    prop = PropMeta("str", "descr", "descr", 5582, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dscp", "dscp", 4538, PropCategory.REGULAR)
    prop.label = "DSCP"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.defaultValue = 64
    prop.defaultValueStr = "unspecified"
    prop._addConstant("AF11", "af11-low-drop", 10)
    prop._addConstant("AF12", "af12-medium-drop", 12)
    prop._addConstant("AF13", "af13-high-drop", 14)
    prop._addConstant("AF21", "af21-low-drop", 18)
    prop._addConstant("AF22", "af22-medium-drop", 20)
    prop._addConstant("AF23", "af23-high-drop", 22)
    prop._addConstant("AF31", "af31-low-drop", 26)
    prop._addConstant("AF32", "af32-medium-drop", 28)
    prop._addConstant("AF33", "af33-high-drop", 30)
    prop._addConstant("AF41", "af41-low-drop", 34)
    prop._addConstant("AF42", "af42-medium-drop", 36)
    prop._addConstant("AF43", "af43-high-drop", 38)
    prop._addConstant("CS0", "cs0", 0)
    prop._addConstant("CS1", "cs1", 8)
    prop._addConstant("CS2", "cs2", 16)
    prop._addConstant("CS3", "cs3", 24)
    prop._addConstant("CS4", "cs4", 32)
    prop._addConstant("CS5", "cs5", 40)
    prop._addConstant("CS6", "cs6", 48)
    prop._addConstant("CS7", "cs7", 56)
    prop._addConstant("EF", "expedited-forwarding", 46)
    prop._addConstant("VA", "voice-admit", 44)
    prop._addConstant("unspecified", "unspecified", 64)
    meta.props.add("dscp", prop)

    prop = PropMeta("str", "ecn", "ecn", 4540, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 2)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("ecn", prop)

    prop = PropMeta("str", "ecnMask", "ecnMask", 4541, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 2)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("ecnMask", prop)

    prop = PropMeta("str", "fabricEncap", "fabricEncap", 4525, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("fabricEncap", prop)

    prop = PropMeta("str", "fabricPort", "fabricPort", 4524, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("fabricPort", prop)

    prop = PropMeta("str", "flags", "flags", 4532, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("df", "do-not-fragment", 1)
    prop._addConstant("frag-offset", "fragment-offset", 4)
    prop._addConstant("mf", "more-fragment", 2)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "flagsMask", "flagsMask", 4533, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("df", "do-not-fragment", 1)
    prop._addConstant("frag-offset", "fragment-offset", 4)
    prop._addConstant("mf", "more-fragment", 2)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("flagsMask", prop)

    prop = PropMeta("str", "icmpCode", "icmpCode", 4545, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    prop._addConstant("unspecified", "unspecified", 65535)
    meta.props.add("icmpCode", prop)

    prop = PropMeta("str", "icmpFlags", "icmpFlags", 4544, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    prop._addConstant("unspecified", "unspecified", 255)
    meta.props.add("icmpFlags", prop)

    prop = PropMeta("str", "icmpType", "icmpType", 4546, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    prop._addConstant("unspecified", "unspecified", 255)
    meta.props.add("icmpType", prop)

    prop = PropMeta("str", "ipDst", "ipDst", 4530, PropCategory.REGULAR)
    prop.label = "L3 IP Desctination Address"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("ipDst", prop)

    prop = PropMeta("str", "ipProto", "ipProto", 4531, PropCategory.REGULAR)
    prop.label = "L3 IP Protocol"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("egp", "egp", 8)
    prop._addConstant("eigrp", "eigrp", 88)
    prop._addConstant("icmp", "icmp", 1)
    prop._addConstant("icmpv6", "icmpv6", 58)
    prop._addConstant("igmp", "igmp", 2)
    prop._addConstant("igp", "igp", 9)
    prop._addConstant("l2tp", "l2tp", 115)
    prop._addConstant("ospfigp", "ospf", 89)
    prop._addConstant("pim", "pim", 103)
    prop._addConstant("tcp", "tcp", 6)
    prop._addConstant("udp", "udp", 17)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("ipProto", prop)

    prop = PropMeta("str", "ipSrc", "ipSrc", 4529, PropCategory.REGULAR)
    prop.label = "L3 IP Source Address"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("ipSrc", prop)

    prop = PropMeta("str", "l4DstPrt", "l4DstPrt", 4535, PropCategory.REGULAR)
    prop.label = "L4 Destination Port"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dns", "dns", 53)
    prop._addConstant("ftpData", "ftp-data", 20)
    prop._addConstant("http", "http", 80)
    prop._addConstant("https", "https", 443)
    prop._addConstant("pop3", "pop3", 110)
    prop._addConstant("rtsp", "rtsp", 554)
    prop._addConstant("smtp", "smtp", 25)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("l4DstPrt", prop)

    prop = PropMeta("str", "l4SrcPrt", "l4SrcPrt", 4534, PropCategory.REGULAR)
    prop.label = "L4 Source Port"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dns", "dns", 53)
    prop._addConstant("ftpData", "ftp-data", 20)
    prop._addConstant("http", "http", 80)
    prop._addConstant("https", "https", 443)
    prop._addConstant("pop3", "pop3", 110)
    prop._addConstant("rtsp", "rtsp", 554)
    prop._addConstant("smtp", "smtp", 25)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("l4SrcPrt", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "operSt", "operSt", 4519, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "down"
    prop._addConstant("down", "down", 2)
    prop._addConstant("failed", "failed", 3)
    prop._addConstant("partial", "partial", 4)
    prop._addConstant("up", "up", 1)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 4520, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "options", "options", 4542, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop._addConstant("frag-hdr", "fragment-header", 2)
    prop._addConstant("hop-by-hop", "hop-by-hop-header", 1)
    prop._addConstant("v4-opt", "ipv4-options", 4)
    meta.props.add("options", prop)

    prop = PropMeta("str", "optionsMask", "optionsMask", 4543, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop._addConstant("frag-hdr", "fragment-header", 2)
    prop._addConstant("hop-by-hop", "hop-by-hop-header", 1)
    prop._addConstant("v4-opt", "ipv4-options", 4)
    meta.props.add("optionsMask", prop)

    prop = PropMeta("str", "payloadSz", "payloadSz", 4526, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop._addConstant("dont-care", "wildcard-payload-size", 255)
    meta.props.add("payloadSz", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "ruleName", "ruleName", 6012, PropCategory.REGULAR)
    prop.label = "Entry an Unique Policy Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 512)]
    meta.props.add("ruleName", prop)

    prop = PropMeta("str", "sPcTag", "sPcTag", 4527, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop._addConstant("any", "any", 0)
    meta.props.add("sPcTag", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tcpFlagsMask", "tcpFlagsMask", 4537, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("ack", "acknowledgment", 2)
    prop._addConstant("est", "established", 16)
    prop._addConstant("fin", "finish", 4)
    prop._addConstant("rst", "reset", 8)
    prop._addConstant("syn", "synchronize", 1)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("tcpFlagsMask", prop)

    prop = PropMeta("str", "tcpFlgs", "tcpFlgs", 4536, PropCategory.REGULAR)
    prop.label = "TCP Flags"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("ack", "acknowledgment", 2)
    prop._addConstant("est", "established", 16)
    prop._addConstant("fin", "finish", 4)
    prop._addConstant("rst", "reset", 8)
    prop._addConstant("syn", "synchronize", 1)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("tcpFlgs", prop)

    prop = PropMeta("str", "tgt", "tgt", 4522, PropCategory.REGULAR)
    prop.label = "Target where the Rule is Deployed"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 6
    prop.defaultValueStr = "all"
    prop._addConstant("DstL", "dstl", 2)
    prop._addConstant("SrcDstL", "srcdstl", 3)
    prop._addConstant("SrcDstLS", "srcdstls", 4)
    prop._addConstant("SrcDstLSAll", "srcdstlsall", 5)
    prop._addConstant("SrcL", "srcl", 1)
    prop._addConstant("Unknown", "unknown", 0)
    prop._addConstant("all", "all", 6)
    meta.props.add("tgt", prop)

    prop = PropMeta("str", "ts", "ts", 4521, PropCategory.REGULAR)
    prop.label = "Last Update Timestamp"
    prop.isOper = True
    meta.props.add("ts", prop)

    prop = PropMeta("str", "ttl", "ttl", 4539, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("ttl", prop)

    prop = PropMeta("str", "wildcard", "wildcard", 4523, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "All"
    prop._addConstant("All", "all-wildcarded", 0)
    prop._addConstant("ArpOpcode", "arp-opcode", 20)
    prop._addConstant("ArpSenderMac", "arp-sender-mac", 21)
    prop._addConstant("ArpTgtIp", "arp-target-ip", 23)
    prop._addConstant("ArpTgtMac", "arp-target-mac", 22)
    prop._addConstant("DestIp", "destination-ip-address", 15)
    prop._addConstant("DestL4Port", "destination-layer4-port", 16)
    prop._addConstant("DestMac", "destination-mac-address", 14)
    prop._addConstant("DestPolTag", "destination-policy-tag", 17)
    prop._addConstant("DestPort", "destination-port", 13)
    prop._addConstant("DestTep", "destination-tunnel-endpoint", 18)
    prop._addConstant("Encap", "encapsulation", 3)
    prop._addConstant("EtherType", "ether-type", 2)
    prop._addConstant("IcmpType", "icmp-type", 19)
    prop._addConstant("L3Protocol", "layer-3-protocol", 4)
    prop._addConstant("PayloadSize", "payload-size", 6)
    prop._addConstant("RuleOrder", "rule-order", 1)
    prop._addConstant("SrcIp", "source-ip-address", 9)
    prop._addConstant("SrcL4Port", "source-layer4-port", 10)
    prop._addConstant("SrcMac", "source-mac-address", 8)
    prop._addConstant("SrcPolTag", "source-policy-tag", 11)
    prop._addConstant("SrcPort", "source-port", 7)
    prop._addConstant("SrcTep", "source-tunnel-endpoint", 12)
    prop._addConstant("TTL", "time-to-live", 5)
    meta.props.add("wildcard", prop)

    meta.namingProps.append(getattr(meta.props, "ruleName"))

    def __init__(self, parentMoOrDn, ruleName, markDirty=True, **creationProps):
        namingVals = [ruleName]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

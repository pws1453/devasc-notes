# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class ACPbStats(Mo):
    """
    Atomic Counter Probe stats from each node where this probe is deployed. Total count across all linecards in a node is maintained if there   are multiple linecards and hence, multiple atomic counter block instances in a node.

    """

    meta = ClassMeta("cobra.model.dbg.ACPbStats")

    meta.moClassName = "dbgACPbStats"
    meta.rnFormat = "nstats-nd-%(localNodeId)s-pNd-%(remoteNodeId)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Atomic Counter Probe Stats from a Node"
    meta.writeAccessMask = 0x80008180000c001
    meta.readAccessMask = 0x80008180000c001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.dbg.ACProbe")

    meta.rnPrefixes = [
        ('nstats-', False),
        ('nd-', True),
        ('-pNd-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "localNodeId", "localNodeId", 4637, PropCategory.REGULAR)
    prop.label = "Fabric Node ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 16000)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("localNodeId", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "remoteNodeId", "remoteNodeId", 4638, PropCategory.REGULAR)
    prop.label = "Peer Fabric Node ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 16000)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("remoteNodeId", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rxAP", "rxAP", 4643, PropCategory.REGULAR)
    prop.label = "CurrentReceived Admit Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("rxAP", prop)

    prop = PropMeta("str", "rxDP", "rxDP", 4644, PropCategory.REGULAR)
    prop.label = "Current Received Drop Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("rxDP", prop)

    prop = PropMeta("str", "seqNo", "seqNo", 4640, PropCategory.REGULAR)
    prop.label = "Sequence Number"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("seqNo", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "totRxAP", "totRxAP", 4647, PropCategory.REGULAR)
    prop.label = "Total Received Admit Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("totRxAP", prop)

    prop = PropMeta("str", "totRxDP", "totRxDP", 4648, PropCategory.REGULAR)
    prop.label = "Total Received Drop Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("totRxDP", prop)

    prop = PropMeta("str", "totTxAP", "totTxAP", 4645, PropCategory.REGULAR)
    prop.label = "Total Transmitted Admit Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("totTxAP", prop)

    prop = PropMeta("str", "totTxDP", "totTxDP", 4646, PropCategory.REGULAR)
    prop.label = "Total Dropped Packets in Tx Direction"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("totTxDP", prop)

    prop = PropMeta("str", "ts", "ts", 4639, PropCategory.REGULAR)
    prop.label = "Last Update Timestamp"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("ts", prop)

    prop = PropMeta("str", "txAP", "txAP", 4641, PropCategory.REGULAR)
    prop.label = "Current Transmitted Admit Packets"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("txAP", prop)

    prop = PropMeta("str", "txDP", "txDP", 4642, PropCategory.REGULAR)
    prop.label = "Current Dropped Packets in Tx Direction"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("txDP", prop)

    meta.namingProps.append(getattr(meta.props, "localNodeId"))
    meta.namingProps.append(getattr(meta.props, "remoteNodeId"))

    def __init__(self, parentMoOrDn, localNodeId, remoteNodeId, markDirty=True, **creationProps):
        namingVals = [localNodeId, remoteNodeId]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class IngrPktsHist1qtr(Mo):
    """
    A class that represents historical statistics for ingress packets in a 1 quarter sampling interval.  This class updates every day.

    """

    meta = StatsClassMeta("cobra.model.l2.IngrPktsHist1qtr", "ingress packets")

    counter = CounterMeta("drop", CounterCategory.COUNTER, "packets", "ingress drop packets")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "dropCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "dropPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "dropMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "dropMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "dropAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "dropSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "dropThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "dropTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "dropRate"
    meta._counters.append(counter)

    counter = CounterMeta("flood", CounterCategory.COUNTER, "packets", "ingress flood packets")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "floodCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "floodPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "floodMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "floodMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "floodAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "floodSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "floodThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "floodTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "floodRate"
    meta._counters.append(counter)

    counter = CounterMeta("multicast", CounterCategory.COUNTER, "packets", "ingress multicast packets")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "multicastCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "multicastPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "multicastMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "multicastMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "multicastAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "multicastSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "multicastThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "multicastTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "multicastRate"
    meta._counters.append(counter)

    counter = CounterMeta("unicast", CounterCategory.COUNTER, "packets", "ingress unicast packets")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "unicastCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "unicastPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "unicastMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "unicastMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "unicastAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "unicastSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "unicastThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "unicastTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "unicastRate"
    meta._counters.append(counter)

    meta.moClassName = "l2IngrPktsHist1qtr"
    meta.rnFormat = "HDl2IngrPkts1qtr-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical ingress packets stats in 1 quarter"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.l3.EncRtdIf")
    meta.parentClasses.add("cobra.model.vxlan.CktEp")
    meta.parentClasses.add("cobra.model.svi.If")
    meta.parentClasses.add("cobra.model.l3.RtdIf")
    meta.parentClasses.add("cobra.model.vlan.CktEp")
    meta.parentClasses.add("cobra.model.qinq.CktEp")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Hist")
    meta.superClasses.add("cobra.model.l2.IngrPktsHist")

    meta.rnPrefixes = [
        ('HDl2IngrPkts1qtr-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dropAvg", "dropAvg", 9925, PropCategory.IMPLICIT_AVG)
    prop.label = "ingress drop packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropAvg", prop)

    prop = PropMeta("str", "dropCum", "dropCum", 9921, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "ingress drop packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropCum", prop)

    prop = PropMeta("str", "dropMax", "dropMax", 9924, PropCategory.IMPLICIT_MAX)
    prop.label = "ingress drop packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropMax", prop)

    prop = PropMeta("str", "dropMin", "dropMin", 9923, PropCategory.IMPLICIT_MIN)
    prop.label = "ingress drop packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropMin", prop)

    prop = PropMeta("str", "dropPer", "dropPer", 9922, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "ingress drop packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropPer", prop)

    prop = PropMeta("str", "dropRate", "dropRate", 9929, PropCategory.IMPLICIT_RATE)
    prop.label = "ingress drop packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropRate", prop)

    prop = PropMeta("str", "dropSpct", "dropSpct", 9926, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "ingress drop packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropSpct", prop)

    prop = PropMeta("str", "dropThr", "dropThr", 9927, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "ingress drop packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("dropThr", prop)

    prop = PropMeta("str", "dropTr", "dropTr", 9928, PropCategory.IMPLICIT_TREND)
    prop.label = "ingress drop packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropTr", prop)

    prop = PropMeta("str", "floodAvg", "floodAvg", 9986, PropCategory.IMPLICIT_AVG)
    prop.label = "ingress flood packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodAvg", prop)

    prop = PropMeta("str", "floodCum", "floodCum", 9982, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "ingress flood packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodCum", prop)

    prop = PropMeta("str", "floodMax", "floodMax", 9985, PropCategory.IMPLICIT_MAX)
    prop.label = "ingress flood packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodMax", prop)

    prop = PropMeta("str", "floodMin", "floodMin", 9984, PropCategory.IMPLICIT_MIN)
    prop.label = "ingress flood packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodMin", prop)

    prop = PropMeta("str", "floodPer", "floodPer", 9983, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "ingress flood packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodPer", prop)

    prop = PropMeta("str", "floodRate", "floodRate", 9990, PropCategory.IMPLICIT_RATE)
    prop.label = "ingress flood packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodRate", prop)

    prop = PropMeta("str", "floodSpct", "floodSpct", 9987, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "ingress flood packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodSpct", prop)

    prop = PropMeta("str", "floodThr", "floodThr", 9988, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "ingress flood packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("floodThr", prop)

    prop = PropMeta("str", "floodTr", "floodTr", 9989, PropCategory.IMPLICIT_TREND)
    prop.label = "ingress flood packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodTr", prop)

    prop = PropMeta("str", "index", "index", 6802, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "multicastAvg", "multicastAvg", 10047, PropCategory.IMPLICIT_AVG)
    prop.label = "ingress multicast packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastAvg", prop)

    prop = PropMeta("str", "multicastCum", "multicastCum", 10043, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "ingress multicast packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastCum", prop)

    prop = PropMeta("str", "multicastMax", "multicastMax", 10046, PropCategory.IMPLICIT_MAX)
    prop.label = "ingress multicast packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastMax", prop)

    prop = PropMeta("str", "multicastMin", "multicastMin", 10045, PropCategory.IMPLICIT_MIN)
    prop.label = "ingress multicast packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastMin", prop)

    prop = PropMeta("str", "multicastPer", "multicastPer", 10044, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "ingress multicast packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastPer", prop)

    prop = PropMeta("str", "multicastRate", "multicastRate", 10051, PropCategory.IMPLICIT_RATE)
    prop.label = "ingress multicast packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastRate", prop)

    prop = PropMeta("str", "multicastSpct", "multicastSpct", 10048, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "ingress multicast packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastSpct", prop)

    prop = PropMeta("str", "multicastThr", "multicastThr", 10049, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "ingress multicast packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("multicastThr", prop)

    prop = PropMeta("str", "multicastTr", "multicastTr", 10050, PropCategory.IMPLICIT_TREND)
    prop.label = "ingress multicast packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastTr", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "unicastAvg", "unicastAvg", 10108, PropCategory.IMPLICIT_AVG)
    prop.label = "ingress unicast packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastAvg", prop)

    prop = PropMeta("str", "unicastCum", "unicastCum", 10104, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "ingress unicast packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastCum", prop)

    prop = PropMeta("str", "unicastMax", "unicastMax", 10107, PropCategory.IMPLICIT_MAX)
    prop.label = "ingress unicast packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastMax", prop)

    prop = PropMeta("str", "unicastMin", "unicastMin", 10106, PropCategory.IMPLICIT_MIN)
    prop.label = "ingress unicast packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastMin", prop)

    prop = PropMeta("str", "unicastPer", "unicastPer", 10105, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "ingress unicast packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastPer", prop)

    prop = PropMeta("str", "unicastRate", "unicastRate", 10112, PropCategory.IMPLICIT_RATE)
    prop.label = "ingress unicast packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastRate", prop)

    prop = PropMeta("str", "unicastSpct", "unicastSpct", 10109, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "ingress unicast packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastSpct", prop)

    prop = PropMeta("str", "unicastThr", "unicastThr", 10110, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "ingress unicast packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("unicastThr", prop)

    prop = PropMeta("str", "unicastTr", "unicastTr", 10111, PropCategory.IMPLICIT_TREND)
    prop.label = "ingress unicast packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastTr", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class KeyRing(Mo):
    """
    A keyring to create and hold an SSL certificate. The SSL certificate contains the public RSA key and signed identity information of a PKI device. The PKI device holds a pair of RSA encryption keys, one kept private and one made public, stored in an internal key ring. The keyring certificate merges into the PKI device keyring to create a trusted relationship.

    """

    meta = ClassMeta("cobra.model.pki.KeyRing")

    meta.moClassName = "pkiKeyRing"
    meta.rnFormat = "keyring-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Key Ring"
    meta.writeAccessMask = 0x3
    meta.readAccessMask = 0x6000000000000003
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.pki.CertReq")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.pki.RtKeyRing")
    meta.childClasses.add("cobra.model.pki.RtKeyringRef")
    meta.childClasses.add("cobra.model.tag.Annotation")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.pki.RtSvrKeyRing")
    meta.childClasses.add("cobra.model.pki.RtListenerToCert")

    meta.childNamesAndRnPrefix.append(("cobra.model.pki.RtListenerToCert", "rtcloudListenerToCert-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.pki.RtSvrKeyRing", "rtadepgSvrKeyRing-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.pki.RtKeyringRef", "rtaaaKeyringRef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.pki.RtKeyRing", "rtcommKeyRing-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.pki.CertReq", "certreq"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.cloud.CertStore")
    meta.parentClasses.add("cobra.model.pki.Ep")

    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pki.Item")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Def")
    meta.superClasses.add("cobra.model.pki.Definition")

    meta.rnPrefixes = [
        ('keyring-', True),
    ]

    prop = PropMeta("str", "adminState", "adminState", 1199, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "started"
    prop._addConstant("completed", "completed", 5)
    prop._addConstant("created", "created", 2)
    prop._addConstant("reqCreated", "request-created", 3)
    prop._addConstant("started", "started", 1)
    prop._addConstant("tpSet", "trust-provider-set", 4)
    meta.props.add("adminState", prop)

    prop = PropMeta("str", "annotation", "annotation", 37508, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "cert", "cert", 1203, PropCategory.REGULAR)
    prop.label = "Certificate"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("cert", prop)

    prop = PropMeta("str", "certValidUntil", "certValidUntil", 1204, PropCategory.REGULAR)
    prop.label = "Certificate Validity"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("certValidUntil", prop)

    prop = PropMeta("str", "certificateDecodeInformation", "certificateDecodeInformation", 1205, PropCategory.REGULAR)
    prop.label = "Certificate Decode Information"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("certificateDecodeInformation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5579, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "expState", "expState", 35519, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "active"
    prop._addConstant("active", "active", 1)
    prop._addConstant("expired", "expired", 3)
    prop._addConstant("expiring", "expiring", 2)
    meta.props.add("expState", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 39647, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "key", "key", 1201, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isPassword = True
    prop.range = [(0, 4096)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("key", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "modulus", "modulus", 1202, PropCategory.REGULAR)
    prop.label = "Modulus"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 2048
    prop.defaultValueStr = "mod2048"
    prop._addConstant("mod1024", "mod-1024", 1024)
    prop._addConstant("mod1536", "mod-1536", 1536)
    prop._addConstant("mod2048", "mod-2048", 2048)
    prop._addConstant("mod512", "mod-512", 512)
    meta.props.add("modulus", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14135, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 7017, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "regen", "regen", 1200, PropCategory.REGULAR)
    prop.label = "Regenerate"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("regen", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tp", "tp", 1206, PropCategory.REGULAR)
    prop.label = "Certificate Authority"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("tp", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Fabric"

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class IfDef(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.igmp.IfDef")

    meta.moClassName = "igmpIfDef"
    meta.rnFormat = "igmpIfDef"
    meta.category = MoCategory.REGULAR
    meta.label = "Interface Profile Definition"
    meta.writeAccessMask = 0x20000001
    meta.readAccessMask = 0x20000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.igmp.StRepDef")
    meta.childClasses.add("cobra.model.igmp.RsIfDefToIgmpIf")
    meta.childClasses.add("cobra.model.igmp.StateLDef")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.igmp.RepDef")

    meta.childNamesAndRnPrefix.append(("cobra.model.igmp.RsIfDefToIgmpIf", "rsIfDefToIgmpIf"))
    meta.childNamesAndRnPrefix.append(("cobra.model.igmp.StRepDef", "igmpstrepdef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.igmp.StateLDef", "igmpstateLDef"))
    meta.childNamesAndRnPrefix.append(("cobra.model.igmp.RepDef", "igmprepdef"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.fv.IfConn")
    meta.parentClasses.add("cobra.model.rtdmc.McastIfDefCont")
    meta.parentClasses.add("cobra.model.l3ext.LIfPDef")
    meta.parentClasses.add("cobra.model.fv.BDDef")

    meta.superClasses.add("cobra.model.fabric.ProtoPol")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.fabric.L3IfPol")
    meta.superClasses.add("cobra.model.pol.Def")
    meta.superClasses.add("cobra.model.ipmc.AIfPol")
    meta.superClasses.add("cobra.model.fabric.ProtoIfPol")

    meta.rnPrefixes = [
        ('igmpIfDef', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5579, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "grpTimeout", "grpTimeout", 25434, PropCategory.REGULAR)
    prop.label = "Group Timeout"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(3, 65535)]
    prop.defaultValue = 260
    prop.defaultValueStr = "260"
    meta.props.add("grpTimeout", prop)

    prop = PropMeta("str", "ifCtrl", "ifCtrl", 25435, PropCategory.REGULAR)
    prop.label = "Controls"
    prop.isConfig = True
    prop.isAdmin = True
    prop._addConstant("allow-v3-asm", "allow-v3-asm", 4)
    prop._addConstant("fast-leave", "fast-leave", 2)
    prop._addConstant("rep-ll", "report-link-local-groups", 1)
    meta.props.add("ifCtrl", prop)

    prop = PropMeta("str", "lastMbrCnt", "lastMbrCnt", 25438, PropCategory.REGULAR)
    prop.label = "Last Member Query Count"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 5)]
    prop.defaultValue = 2
    prop.defaultValueStr = "2"
    meta.props.add("lastMbrCnt", prop)

    prop = PropMeta("str", "lastMbrRespTime", "lastMbrRespTime", 26132, PropCategory.REGULAR)
    prop.label = "Last Member Response Time"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 25)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("lastMbrRespTime", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 25967, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "querierTimeout", "querierTimeout", 25437, PropCategory.REGULAR)
    prop.label = "Querier Timeout"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 65535)]
    prop.defaultValue = 255
    prop.defaultValueStr = "255"
    meta.props.add("querierTimeout", prop)

    prop = PropMeta("str", "queryIntvl", "queryIntvl", 25439, PropCategory.REGULAR)
    prop.label = "Query interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 18000)]
    prop.defaultValue = 125
    prop.defaultValueStr = "125"
    meta.props.add("queryIntvl", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "robustFac", "robustFac", 25892, PropCategory.REGULAR)
    prop.label = "Robustness Factor"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 7)]
    prop.defaultValue = 2
    prop.defaultValueStr = "2"
    meta.props.add("robustFac", prop)

    prop = PropMeta("str", "rspIntvl", "rspIntvl", 25893, PropCategory.REGULAR)
    prop.label = "Response Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 25)]
    prop.defaultValue = 10
    prop.defaultValueStr = "10"
    meta.props.add("rspIntvl", prop)

    prop = PropMeta("str", "startQueryCnt", "startQueryCnt", 25441, PropCategory.REGULAR)
    prop.label = "Startup Query Count"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 10)]
    prop.defaultValue = 2
    prop.defaultValueStr = "2"
    meta.props.add("startQueryCnt", prop)

    prop = PropMeta("str", "startQueryIntvl", "startQueryIntvl", 25440, PropCategory.REGULAR)
    prop.label = "Startup query interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 18000)]
    prop.defaultValue = 31
    prop.defaultValueStr = "31"
    meta.props.add("startQueryIntvl", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "ver", "ver", 25433, PropCategory.REGULAR)
    prop.label = "Version"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "v2"
    prop._addConstant("v2", "version-2", 2)
    prop._addConstant("v3", "version-3", 3)
    meta.props.add("ver", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Path"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("L3IfPolToEthIf", "Interface", "cobra.model.l1.EthIf"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

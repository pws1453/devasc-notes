# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class ICMPEchoStats1mo(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.sla.ICMPEchoStats1mo", "ICMP Echo Operation Statistics")

    counter = CounterMeta("failures", CounterCategory.COUNTER, "packets", "number of failed ICMP Echo probes")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "failuresLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "failuresCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "failuresPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "failuresMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "failuresMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "failuresAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "failuresSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "failuresBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "failuresThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "failuresTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "failuresTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "failuresRate"
    meta._counters.append(counter)

    counter = CounterMeta("success", CounterCategory.COUNTER, "packets", "number of successful ICMP Echo probes")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "successLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "successCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "successPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "successMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "successMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "successAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "successSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "successBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "successThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "successTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "successTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "successRate"
    meta._counters.append(counter)

    counter = CounterMeta("txPkts", CounterCategory.COUNTER, "packets", "number of transmitted ICMP Echo probes")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "txPktsLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "txPktsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "txPktsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "txPktsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "txPktsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "txPktsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "txPktsSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "txPktsBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "txPktsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "txPktsTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "txPktsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "txPktsRate"
    meta._counters.append(counter)

    counter = CounterMeta("rtt", CounterCategory.GAUGE, "milliseconds", "ICMP Echo Round Trip Time")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "rttLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "rttMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "rttMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "rttAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "rttSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "rttTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "rttThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "rttTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "rttTr"
    meta._counters.append(counter)

    meta.moClassName = "slaICMPEchoStats1mo"
    meta.rnFormat = "CDslaICMPEchoStats1mo"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current ICMP Echo Operation Statistics stats in 1 month"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.sla.ICMPEcho")
    meta.parentClasses.add("cobra.model.fv.TrackMember")

    meta.superClasses.add("cobra.model.sla.ICMPEchoStats")
    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Curr")

    meta.rnPrefixes = [
        ('CDslaICMPEchoStats1mo', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "failuresAvg", "failuresAvg", 49482, PropCategory.IMPLICIT_AVG)
    prop.label = "number of failed ICMP Echo probes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("failuresAvg", prop)

    prop = PropMeta("str", "failuresBase", "failuresBase", 49477, PropCategory.IMPLICIT_BASELINE)
    prop.label = "number of failed ICMP Echo probes baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("failuresBase", prop)

    prop = PropMeta("str", "failuresCum", "failuresCum", 49478, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "number of failed ICMP Echo probes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("failuresCum", prop)

    prop = PropMeta("str", "failuresLast", "failuresLast", 49476, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "number of failed ICMP Echo probes current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("failuresLast", prop)

    prop = PropMeta("str", "failuresMax", "failuresMax", 49481, PropCategory.IMPLICIT_MAX)
    prop.label = "number of failed ICMP Echo probes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("failuresMax", prop)

    prop = PropMeta("str", "failuresMin", "failuresMin", 49480, PropCategory.IMPLICIT_MIN)
    prop.label = "number of failed ICMP Echo probes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("failuresMin", prop)

    prop = PropMeta("str", "failuresPer", "failuresPer", 49479, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "number of failed ICMP Echo probes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("failuresPer", prop)

    prop = PropMeta("str", "failuresRate", "failuresRate", 49487, PropCategory.IMPLICIT_RATE)
    prop.label = "number of failed ICMP Echo probes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("failuresRate", prop)

    prop = PropMeta("str", "failuresSpct", "failuresSpct", 49483, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "number of failed ICMP Echo probes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("failuresSpct", prop)

    prop = PropMeta("str", "failuresThr", "failuresThr", 49484, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "number of failed ICMP Echo probes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("failuresThr", prop)

    prop = PropMeta("str", "failuresTr", "failuresTr", 49486, PropCategory.IMPLICIT_TREND)
    prop.label = "number of failed ICMP Echo probes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("failuresTr", prop)

    prop = PropMeta("str", "failuresTrBase", "failuresTrBase", 49485, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "number of failed ICMP Echo probes trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("failuresTrBase", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rttAvg", "rttAvg", 49500, PropCategory.IMPLICIT_AVG)
    prop.label = "ICMP Echo Round Trip Time average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rttAvg", prop)

    prop = PropMeta("str", "rttLast", "rttLast", 49497, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "ICMP Echo Round Trip Time current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rttLast", prop)

    prop = PropMeta("str", "rttMax", "rttMax", 49499, PropCategory.IMPLICIT_MAX)
    prop.label = "ICMP Echo Round Trip Time maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rttMax", prop)

    prop = PropMeta("str", "rttMin", "rttMin", 49498, PropCategory.IMPLICIT_MIN)
    prop.label = "ICMP Echo Round Trip Time minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rttMin", prop)

    prop = PropMeta("str", "rttSpct", "rttSpct", 49501, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "ICMP Echo Round Trip Time suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rttSpct", prop)

    prop = PropMeta("str", "rttThr", "rttThr", 49503, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "ICMP Echo Round Trip Time thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("rttThr", prop)

    prop = PropMeta("str", "rttTr", "rttTr", 49505, PropCategory.IMPLICIT_TREND)
    prop.label = "ICMP Echo Round Trip Time trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rttTr", prop)

    prop = PropMeta("str", "rttTrBase", "rttTrBase", 49504, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "ICMP Echo Round Trip Time trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rttTrBase", prop)

    prop = PropMeta("str", "rttTtl", "rttTtl", 49502, PropCategory.IMPLICIT_TOTAL)
    prop.label = "ICMP Echo Round Trip Time total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rttTtl", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "successAvg", "successAvg", 49518, PropCategory.IMPLICIT_AVG)
    prop.label = "number of successful ICMP Echo probes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("successAvg", prop)

    prop = PropMeta("str", "successBase", "successBase", 49513, PropCategory.IMPLICIT_BASELINE)
    prop.label = "number of successful ICMP Echo probes baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("successBase", prop)

    prop = PropMeta("str", "successCum", "successCum", 49514, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "number of successful ICMP Echo probes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("successCum", prop)

    prop = PropMeta("str", "successLast", "successLast", 49512, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "number of successful ICMP Echo probes current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("successLast", prop)

    prop = PropMeta("str", "successMax", "successMax", 49517, PropCategory.IMPLICIT_MAX)
    prop.label = "number of successful ICMP Echo probes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("successMax", prop)

    prop = PropMeta("str", "successMin", "successMin", 49516, PropCategory.IMPLICIT_MIN)
    prop.label = "number of successful ICMP Echo probes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("successMin", prop)

    prop = PropMeta("str", "successPer", "successPer", 49515, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "number of successful ICMP Echo probes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("successPer", prop)

    prop = PropMeta("str", "successRate", "successRate", 49523, PropCategory.IMPLICIT_RATE)
    prop.label = "number of successful ICMP Echo probes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("successRate", prop)

    prop = PropMeta("str", "successSpct", "successSpct", 49519, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "number of successful ICMP Echo probes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("successSpct", prop)

    prop = PropMeta("str", "successThr", "successThr", 49520, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "number of successful ICMP Echo probes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("successThr", prop)

    prop = PropMeta("str", "successTr", "successTr", 49522, PropCategory.IMPLICIT_TREND)
    prop.label = "number of successful ICMP Echo probes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("successTr", prop)

    prop = PropMeta("str", "successTrBase", "successTrBase", 49521, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "number of successful ICMP Echo probes trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("successTrBase", prop)

    prop = PropMeta("str", "txPktsAvg", "txPktsAvg", 49539, PropCategory.IMPLICIT_AVG)
    prop.label = "number of transmitted ICMP Echo probes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsAvg", prop)

    prop = PropMeta("str", "txPktsBase", "txPktsBase", 49534, PropCategory.IMPLICIT_BASELINE)
    prop.label = "number of transmitted ICMP Echo probes baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsBase", prop)

    prop = PropMeta("str", "txPktsCum", "txPktsCum", 49535, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "number of transmitted ICMP Echo probes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsCum", prop)

    prop = PropMeta("str", "txPktsLast", "txPktsLast", 49533, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "number of transmitted ICMP Echo probes current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsLast", prop)

    prop = PropMeta("str", "txPktsMax", "txPktsMax", 49538, PropCategory.IMPLICIT_MAX)
    prop.label = "number of transmitted ICMP Echo probes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsMax", prop)

    prop = PropMeta("str", "txPktsMin", "txPktsMin", 49537, PropCategory.IMPLICIT_MIN)
    prop.label = "number of transmitted ICMP Echo probes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsMin", prop)

    prop = PropMeta("str", "txPktsPer", "txPktsPer", 49536, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "number of transmitted ICMP Echo probes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsPer", prop)

    prop = PropMeta("str", "txPktsRate", "txPktsRate", 49544, PropCategory.IMPLICIT_RATE)
    prop.label = "number of transmitted ICMP Echo probes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsRate", prop)

    prop = PropMeta("str", "txPktsSpct", "txPktsSpct", 49540, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "number of transmitted ICMP Echo probes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsSpct", prop)

    prop = PropMeta("str", "txPktsThr", "txPktsThr", 49541, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "number of transmitted ICMP Echo probes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("txPktsThr", prop)

    prop = PropMeta("str", "txPktsTr", "txPktsTr", 49543, PropCategory.IMPLICIT_TREND)
    prop.label = "number of transmitted ICMP Echo probes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsTr", prop)

    prop = PropMeta("str", "txPktsTrBase", "txPktsTrBase", 49542, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "number of transmitted ICMP Echo probes trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsTrBase", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToHcloudIgw", "Tenant to IGW", "cobra.model.hcloud.SecurityGroup"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToHcloudSecurityGroup", "Tenant to Security Group", "cobra.model.hcloud.SecurityGroup"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToVzCPIf", "Tenant to vzCPIf", "cobra.model.vz.CPIf"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToVzFilter", "From fvTenant to vzFilter", "cobra.model.vz.Filter"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToVnsAbsGraph", "From fvTenant to vnsAbsGraph", "cobra.model.vns.AbsGraph"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToCloudLB", "From fvTenant to cloudLB", "cobra.model.cloud.LB"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToCloudZone", "From fvTenant to cloudZone", "cobra.model.cloud.Zone"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudCtxProfile", "Tenant to cloudCtxProfile", "cobra.model.cloud.CtxProfile"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToVzBrCP", "Tenant to vzBrCP", "cobra.model.vz.BrCP"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToHcloudCsr", "Tenant to hcloudCsr", "cobra.model.hcloud.Csr"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudExtEPg", "fv:Tenant to cloud:ExtEPg", "cobra.model.cloud.ExtEPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudRegion", "From fvTenant to cloudRegion", "cobra.model.cloud.Region"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToHcloudRegion", "Tenant to hcloudRegion", "cobra.model.hcloud.Region"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToFvCtx", "fvTenant to fvCtx", "cobra.model.fv.Ctx"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToHcloudCtx", "Tenant to Hcloud context", "cobra.model.hcloud.Ctx"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToHCloudEndPoint", "Tenant to hcloudEndPoint", "cobra.model.hcloud.EndPoint"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudApp", "Tenant to Application profile", "cobra.model.cloud.App"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudEPg", "Tenant to cloud EPg", "cobra.model.cloud.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class AdjEp(Mo):
    """
     This object holds udld neighbor information 

    """

    meta = ClassMeta("cobra.model.udld.AdjEp")

    meta.moClassName = "udldAdjEp"
    meta.rnFormat = "adj-%(id)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Adjacency"
    meta.writeAccessMask = 0x4004010020001
    meta.readAccessMask = 0x4004010020001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.udld.If")

    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.ConnEp")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.AdjEp")
    meta.superClasses.add("cobra.model.nw.Ep")

    meta.rnPrefixes = [
        ('adj-', True),
    ]

    prop = PropMeta("str", "cdpDevName", "cdpDevName", 26105, PropCategory.REGULAR)
    prop.label = "Neighbor CDP Device Name"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("cdpDevName", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "devId", "devId", 26102, PropCategory.REGULAR)
    prop.label = "Neighbor Device Index"
    prop.isOper = True
    meta.props.add("devId", prop)

    prop = PropMeta("str", "devName", "devName", 26103, PropCategory.REGULAR)
    prop.label = "Neighbor Device Name"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("devName", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "id", "id", 26101, PropCategory.REGULAR)
    prop.label = "Neighbor ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "msgIntvl", "msgIntvl", 26107, PropCategory.REGULAR)
    prop.label = "Neighbor Msg Interval"
    prop.isOper = True
    meta.props.add("msgIntvl", prop)

    prop = PropMeta("str", "name", "name", 16432, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "neighBidirSt", "neighBidirSt", 26109, PropCategory.REGULAR)
    prop.label = "Neighbor Bidirectional State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("bi-dir", "neighbor-status-bidirectional", 2)
    prop._addConstant("echo-empty", "neighbor-echo-empty", 5)
    prop._addConstant("mismatch", "mismatch-with-neighbor-state-reported", 4)
    prop._addConstant("tx-rx-loop", "neighbor-in-tx/rx-loop", 3)
    prop._addConstant("uni-dir", "neighbor-status-unidirectional", 1)
    prop._addConstant("unknown", "neighbor-status-unknown", 0)
    meta.props.add("neighBidirSt", prop)

    prop = PropMeta("str", "neighExpTime", "neighExpTime", 26106, PropCategory.REGULAR)
    prop.label = "Neighbor Expiration Time"
    prop.isOper = True
    meta.props.add("neighExpTime", prop)

    prop = PropMeta("str", "portId", "portId", 26104, PropCategory.REGULAR)
    prop.label = "Neighbor Port ID"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("portId", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "timeoutIntvl", "timeoutIntvl", 26108, PropCategory.REGULAR)
    prop.label = "Neighbor Timeout"
    prop.isOper = True
    meta.props.add("timeoutIntvl", prop)

    meta.namingProps.append(getattr(meta.props, "id"))

    def __init__(self, parentMoOrDn, id, markDirty=True, **creationProps):
        namingVals = [id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

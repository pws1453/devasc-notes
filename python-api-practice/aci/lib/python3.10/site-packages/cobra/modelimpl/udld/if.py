# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class If(Mo):
    """
     This object holds udld information that is operated at a interface level 

    """

    meta = ClassMeta("cobra.model.udld.If")

    meta.moClassName = "udldIf"
    meta.rnFormat = "if-[%(id)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "UDLD Interface"
    meta.writeAccessMask = 0x4004010020001
    meta.readAccessMask = 0x4004010020001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.l2.RsMgmtIf")
    meta.childClasses.add("cobra.model.l2.RsEthIf")
    meta.childClasses.add("cobra.model.udld.AdjEp")
    meta.childClasses.add("cobra.model.nw.RtPathToIf")

    meta.childNamesAndRnPrefix.append(("cobra.model.nw.RtPathToIf", "rtpathToIf-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.RsMgmtIf", "rsmgmtIf"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.RsEthIf", "rsethIf"))
    meta.childNamesAndRnPrefix.append(("cobra.model.udld.AdjEp", "adj-"))

    meta.parentClasses.add("cobra.model.udld.Inst")

    meta.superClasses.add("cobra.model.nw.ConnEp")
    meta.superClasses.add("cobra.model.nw.If")
    meta.superClasses.add("cobra.model.l2.ProtIf")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.LogicalIf")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.ProtIf")
    meta.superClasses.add("cobra.model.nw.Ep")

    meta.rnPrefixes = [
        ('if-', True),
    ]

    prop = PropMeta("str", "adminSt", "adminSt", 27146, PropCategory.REGULAR)
    prop.label = "UDLD Enable/Disable per port"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "disabled"
    prop._addConstant("disabled", "disabled", 0)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "biDirOperSt", "biDirOperSt", 27147, PropCategory.REGULAR)
    prop.label = "UDLD Bidirectional State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("bi-dir", "neighbor-status-bidirectional", 2)
    prop._addConstant("echo-empty", "neighbor-echo-empty", 5)
    prop._addConstant("mismatch", "mismatch-with-neighbor-state-reported", 4)
    prop._addConstant("tx-rx-loop", "neighbor-in-tx/rx-loop", 3)
    prop._addConstant("uni-dir", "neighbor-status-unidirectional", 1)
    prop._addConstant("unknown", "neighbor-status-unknown", 0)
    meta.props.add("biDirOperSt", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "ctrl", "ctrl", 27145, PropCategory.REGULAR)
    prop.label = "Port Aggresive Mode Control"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "disabled"
    prop._addConstant("disabled", "disabled", 0)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("ctrl", prop)

    prop = PropMeta("str", "descr", "descr", 5585, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "id", "id", 26110, PropCategory.REGULAR)
    prop.label = "Interface ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "lastEchoRecv", "lastEchoRecv", 26098, PropCategory.REGULAR)
    prop.label = "Last Echo Recv"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("lastEchoRecv", prop)

    prop = PropMeta("str", "lastEchoSent", "lastEchoSent", 26097, PropCategory.REGULAR)
    prop.label = "Last Echo Sent"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("lastEchoSent", prop)

    prop = PropMeta("str", "lastFlushRecv", "lastFlushRecv", 26100, PropCategory.REGULAR)
    prop.label = "Last Flush Recv"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("lastFlushRecv", prop)

    prop = PropMeta("str", "lastFlushSent", "lastFlushSent", 26099, PropCategory.REGULAR)
    prop.label = "Last Flush Sent"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("lastFlushSent", prop)

    prop = PropMeta("str", "lastPktRecv", "lastPktRecv", 26094, PropCategory.REGULAR)
    prop.label = "Last Packet Recv"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("lastPktRecv", prop)

    prop = PropMeta("str", "lastPktSent", "lastPktSent", 26093, PropCategory.REGULAR)
    prop.label = "Last Packet Sent"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("lastPktSent", prop)

    prop = PropMeta("str", "lastProbeRecv", "lastProbeRecv", 26096, PropCategory.REGULAR)
    prop.label = "Last Probe Recv"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("lastProbeRecv", prop)

    prop = PropMeta("str", "lastProbeSent", "lastProbeSent", 26095, PropCategory.REGULAR)
    prop.label = "Last Probe Sent"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("lastProbeSent", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "linkOperSt", "linkOperSt", 27148, PropCategory.REGULAR)
    prop.label = "UDLD Link Oper State"
    prop.isOper = True
    prop.defaultValue = 7
    prop.defaultValueStr = "init"
    prop._addConstant("advertisement", "udld-advertisement", 3)
    prop._addConstant("detect", "udld-detection", 2)
    prop._addConstant("disabled-linkdown", "udld-disabled-link-down", 6)
    prop._addConstant("disabled-linkup", "udld-disabled-link-up", 5)
    prop._addConstant("down", "udld-link-down", 1)
    prop._addConstant("ext-detect", "udld-extended-detection", 8)
    prop._addConstant("init", "udld-init", 7)
    prop._addConstant("port-disabled", "udld-disable-port", 4)
    prop._addConstant("up", "udld-link-up", 0)
    meta.props.add("linkOperSt", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "msgIntvl", "msgIntvl", 26088, PropCategory.REGULAR)
    prop.label = "Msg Interval"
    prop.isOper = True
    meta.props.add("msgIntvl", prop)

    prop = PropMeta("str", "msgTimeoutIntvl", "msgTimeoutIntvl", 27150, PropCategory.REGULAR)
    prop.label = "Msg Timeout Interval"
    prop.isOper = True
    meta.props.add("msgTimeoutIntvl", prop)

    prop = PropMeta("str", "name", "name", 16432, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "portId", "portId", 26090, PropCategory.REGULAR)
    prop.label = "Port ID"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("portId", prop)

    prop = PropMeta("str", "portOperMode", "portOperMode", 27149, PropCategory.REGULAR)
    prop.label = "UDLD Port Operational Mode"
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "disabled"
    prop._addConstant("disabled", "udld-disabled-on-port", 2)
    prop._addConstant("enabled", "udld-enabled-on-port", 1)
    prop._addConstant("enabled-aggresive", "udld-aggresive-mode-enabled-on-port", 3)
    meta.props.add("portOperMode", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "id"))
    getattr(meta.props, "id").needDelimiter = True

    meta.deploymentCategory = DeploymentCategory("interface", "Interface")
    def __init__(self, parentMoOrDn, id, markDirty=True, **creationProps):
        namingVals = [id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class RcvdPktsHist1d(Mo):
    """
    A class that represents historical statistics for received packets in a 1 day sampling interval.  This class updates every hour.

    """

    meta = StatsClassMeta("cobra.model.comp.RcvdPktsHist1d", "received packets")

    counter = CounterMeta("mcast", CounterCategory.COUNTER, "packets", "received multicast packets")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "mcastCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "mcastPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "mcastMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "mcastMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "mcastAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "mcastSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "mcastThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "mcastTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "mcastRate"
    meta._counters.append(counter)

    counter = CounterMeta("bcast", CounterCategory.COUNTER, "packets", "received broadcast packets")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "bcastCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "bcastPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "bcastMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "bcastMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "bcastAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "bcastSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "bcastThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "bcastTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "bcastRate"
    meta._counters.append(counter)

    counter = CounterMeta("total", CounterCategory.COUNTER, "packets", "received packets")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "totalCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "totalPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "totalMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "totalMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "totalAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "totalSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "totalThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "totalTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "totalRate"
    meta._counters.append(counter)

    meta.moClassName = "compRcvdPktsHist1d"
    meta.rnFormat = "HDcompRcvdPkts1d-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical received packets stats in 1 day"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.comp.Hv")
    meta.parentClasses.add("cobra.model.comp.HpNic")
    meta.parentClasses.add("cobra.model.comp.VNic")
    meta.parentClasses.add("cobra.model.comp.Vm")

    meta.superClasses.add("cobra.model.stats.Hist")
    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.comp.RcvdPktsHist")

    meta.rnPrefixes = [
        ('HDcompRcvdPkts1d-', True),
    ]

    prop = PropMeta("str", "bcastAvg", "bcastAvg", 7665, PropCategory.IMPLICIT_AVG)
    prop.label = "received broadcast packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bcastAvg", prop)

    prop = PropMeta("str", "bcastCum", "bcastCum", 7661, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "received broadcast packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bcastCum", prop)

    prop = PropMeta("str", "bcastMax", "bcastMax", 7664, PropCategory.IMPLICIT_MAX)
    prop.label = "received broadcast packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bcastMax", prop)

    prop = PropMeta("str", "bcastMin", "bcastMin", 7663, PropCategory.IMPLICIT_MIN)
    prop.label = "received broadcast packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bcastMin", prop)

    prop = PropMeta("str", "bcastPer", "bcastPer", 7662, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "received broadcast packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bcastPer", prop)

    prop = PropMeta("str", "bcastRate", "bcastRate", 7669, PropCategory.IMPLICIT_RATE)
    prop.label = "received broadcast packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bcastRate", prop)

    prop = PropMeta("str", "bcastSpct", "bcastSpct", 7666, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "received broadcast packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bcastSpct", prop)

    prop = PropMeta("str", "bcastThr", "bcastThr", 7667, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "received broadcast packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("bcastThr", prop)

    prop = PropMeta("str", "bcastTr", "bcastTr", 7668, PropCategory.IMPLICIT_TREND)
    prop.label = "received broadcast packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bcastTr", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "index", "index", 5940, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "mcastAvg", "mcastAvg", 7686, PropCategory.IMPLICIT_AVG)
    prop.label = "received multicast packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastAvg", prop)

    prop = PropMeta("str", "mcastCum", "mcastCum", 7682, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "received multicast packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastCum", prop)

    prop = PropMeta("str", "mcastMax", "mcastMax", 7685, PropCategory.IMPLICIT_MAX)
    prop.label = "received multicast packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastMax", prop)

    prop = PropMeta("str", "mcastMin", "mcastMin", 7684, PropCategory.IMPLICIT_MIN)
    prop.label = "received multicast packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastMin", prop)

    prop = PropMeta("str", "mcastPer", "mcastPer", 7683, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "received multicast packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastPer", prop)

    prop = PropMeta("str", "mcastRate", "mcastRate", 7690, PropCategory.IMPLICIT_RATE)
    prop.label = "received multicast packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastRate", prop)

    prop = PropMeta("str", "mcastSpct", "mcastSpct", 7687, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "received multicast packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastSpct", prop)

    prop = PropMeta("str", "mcastThr", "mcastThr", 7688, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "received multicast packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("mcastThr", prop)

    prop = PropMeta("str", "mcastTr", "mcastTr", 7689, PropCategory.IMPLICIT_TREND)
    prop.label = "received multicast packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastTr", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "totalAvg", "totalAvg", 7707, PropCategory.IMPLICIT_AVG)
    prop.label = "received packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalAvg", prop)

    prop = PropMeta("str", "totalCum", "totalCum", 7703, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "received packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalCum", prop)

    prop = PropMeta("str", "totalMax", "totalMax", 7706, PropCategory.IMPLICIT_MAX)
    prop.label = "received packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalMax", prop)

    prop = PropMeta("str", "totalMin", "totalMin", 7705, PropCategory.IMPLICIT_MIN)
    prop.label = "received packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalMin", prop)

    prop = PropMeta("str", "totalPer", "totalPer", 7704, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "received packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalPer", prop)

    prop = PropMeta("str", "totalRate", "totalRate", 7711, PropCategory.IMPLICIT_RATE)
    prop.label = "received packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalRate", prop)

    prop = PropMeta("str", "totalSpct", "totalSpct", 7708, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "received packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalSpct", prop)

    prop = PropMeta("str", "totalThr", "totalThr", 7709, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "received packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("totalThr", prop)

    prop = PropMeta("str", "totalTr", "totalTr", 7710, PropCategory.IMPLICIT_TREND)
    prop.label = "received packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalTr", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

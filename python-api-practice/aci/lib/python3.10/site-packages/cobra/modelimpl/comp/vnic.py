# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class VNic(Mo):
    """
    The virtual network interface on the VM.

    """

    meta = ClassMeta("cobra.model.comp.VNic")

    meta.moClassName = "compVNic"
    meta.rnFormat = "vnic-%(mac)s"
    meta.category = MoCategory.REGULAR
    meta.label = "VM Virtual Interface"
    meta.writeAccessMask = 0x25
    meta.readAccessMask = 0x625
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.comp.RcvdBytesHist1h")
    meta.childClasses.add("cobra.model.comp.RcvdErrPktsHist1qtr")
    meta.childClasses.add("cobra.model.comp.RcvdBytesHist1d")
    meta.childClasses.add("cobra.model.comp.RtNic")
    meta.childClasses.add("cobra.model.comp.RcvdErrPkts1year")
    meta.childClasses.add("cobra.model.comp.TrnsmtdBytesHist1d")
    meta.childClasses.add("cobra.model.comp.TrnsmtdBytesHist1h")
    meta.childClasses.add("cobra.model.comp.RcvdBytesHist1w")
    meta.childClasses.add("cobra.model.comp.TrnsmtdPkts1d")
    meta.childClasses.add("cobra.model.comp.RcvdBytesHist1qtr")
    meta.childClasses.add("cobra.model.comp.TrnsmtdBytesHist1w")
    meta.childClasses.add("cobra.model.comp.RcvdPkts1w")
    meta.childClasses.add("cobra.model.comp.TrnsmtdPkts1h")
    meta.childClasses.add("cobra.model.comp.TrnsmtdPkts1w")
    meta.childClasses.add("cobra.model.comp.RcvdPkts1h")
    meta.childClasses.add("cobra.model.comp.RsNicAdj")
    meta.childClasses.add("cobra.model.comp.TrnsmtdPkts1qtr")
    meta.childClasses.add("cobra.model.comp.RcvdPkts1d")
    meta.childClasses.add("cobra.model.comp.Ip")
    meta.childClasses.add("cobra.model.comp.RcvdPktsHist1qtr")
    meta.childClasses.add("cobra.model.comp.RcvdErrPkts1w")
    meta.childClasses.add("cobra.model.comp.RcvdErrPkts1h")
    meta.childClasses.add("cobra.model.comp.RcvdErrPkts1d")
    meta.childClasses.add("cobra.model.comp.TrnsmtdPktsHist1h")
    meta.childClasses.add("cobra.model.comp.TrnsmtdPktsHist1d")
    meta.childClasses.add("cobra.model.comp.TrnsmtdErrPkts1mo")
    meta.childClasses.add("cobra.model.comp.RcvdErrPktsHist1year")
    meta.childClasses.add("cobra.model.comp.RcvdErrPkts1mo")
    meta.childClasses.add("cobra.model.comp.TrnsmtdPktsHist15min")
    meta.childClasses.add("cobra.model.comp.TrnsmtdPktsHist1w")
    meta.childClasses.add("cobra.model.comp.RcvdPktsHist1h")
    meta.childClasses.add("cobra.model.comp.RcvdBytes15min")
    meta.childClasses.add("cobra.model.comp.TrnsmtdPkts1mo")
    meta.childClasses.add("cobra.model.comp.TrnsmtdBytes1d")
    meta.childClasses.add("cobra.model.comp.TrnsmtdErrPktsHist15min")
    meta.childClasses.add("cobra.model.comp.TrnsmtdBytes1h")
    meta.childClasses.add("cobra.model.comp.RcvdBytesHist1year")
    meta.childClasses.add("cobra.model.comp.TrnsmtdPkts1year")
    meta.childClasses.add("cobra.model.comp.TrnsmtdBytes1w")
    meta.childClasses.add("cobra.model.comp.TrnsmtdBytesHist1year")
    meta.childClasses.add("cobra.model.comp.TrnsmtdErrPkts1year")
    meta.childClasses.add("cobra.model.comp.TrnsmtdBytesHist1qtr")
    meta.childClasses.add("cobra.model.comp.TrnsmtdBytes1qtr")
    meta.childClasses.add("cobra.model.comp.TrnsmtdPktsHist1year")
    meta.childClasses.add("cobra.model.comp.TrnsmtdErrPktsHist1qtr")
    meta.childClasses.add("cobra.model.comp.RcvdBytes1mo")
    meta.childClasses.add("cobra.model.comp.TrnsmtdBytesHist1mo")
    meta.childClasses.add("cobra.model.comp.TrnsmtdBytesHist15min")
    meta.childClasses.add("cobra.model.comp.RcvdBytes1qtr")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.comp.RcvdBytesHist1mo")
    meta.childClasses.add("cobra.model.comp.RcvdPktsHist1w")
    meta.childClasses.add("cobra.model.comp.RcvdPkts1mo")
    meta.childClasses.add("cobra.model.comp.RcvdPkts15min")
    meta.childClasses.add("cobra.model.comp.RcvdPktsHist1d")
    meta.childClasses.add("cobra.model.comp.RcvdErrPkts1qtr")
    meta.childClasses.add("cobra.model.comp.RcvdBytesHist15min")
    meta.childClasses.add("cobra.model.comp.TrnsmtdErrPkts1h")
    meta.childClasses.add("cobra.model.comp.PrimaryEncapDef")
    meta.childClasses.add("cobra.model.comp.RcvdPkts1qtr")
    meta.childClasses.add("cobra.model.comp.TrnsmtdErrPkts1d")
    meta.childClasses.add("cobra.model.comp.RcvdBytes1w")
    meta.childClasses.add("cobra.model.comp.RcvdBytes1h")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.comp.TrnsmtdBytes1year")
    meta.childClasses.add("cobra.model.comp.RcvdBytes1d")
    meta.childClasses.add("cobra.model.comp.TrnsmtdErrPkts1w")
    meta.childClasses.add("cobra.model.comp.RtToNic")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.comp.TrnsmtdErrPktsHist1mo")
    meta.childClasses.add("cobra.model.comp.TrnsmtdBytes15min")
    meta.childClasses.add("cobra.model.comp.RcvdPkts1year")
    meta.childClasses.add("cobra.model.comp.RcvdErrPktsHist1mo")
    meta.childClasses.add("cobra.model.comp.RcvdBytes1year")
    meta.childClasses.add("cobra.model.comp.TrnsmtdPkts15min")
    meta.childClasses.add("cobra.model.comp.RcvdPktsHist1mo")
    meta.childClasses.add("cobra.model.comp.RcvdErrPktsHist1d")
    meta.childClasses.add("cobra.model.comp.TrnsmtdErrPktsHist1w")
    meta.childClasses.add("cobra.model.comp.TrnsmtdErrPkts15min")
    meta.childClasses.add("cobra.model.comp.TrnsmtdErrPktsHist1h")
    meta.childClasses.add("cobra.model.comp.RsDlPol")
    meta.childClasses.add("cobra.model.comp.RcvdPktsHist1year")
    meta.childClasses.add("cobra.model.comp.TrnsmtdErrPkts1qtr")
    meta.childClasses.add("cobra.model.comp.TrnsmtdErrPktsHist1d")
    meta.childClasses.add("cobra.model.comp.RcvdErrPkts15min")
    meta.childClasses.add("cobra.model.comp.RsUsegEpPD")
    meta.childClasses.add("cobra.model.comp.TrnsmtdBytes1mo")
    meta.childClasses.add("cobra.model.comp.RcvdErrPktsHist1h")
    meta.childClasses.add("cobra.model.comp.RcvdPktsHist15min")
    meta.childClasses.add("cobra.model.comp.TrnsmtdPktsHist1mo")
    meta.childClasses.add("cobra.model.comp.RcvdErrPktsHist15min")
    meta.childClasses.add("cobra.model.comp.TrnsmtdPktsHist1qtr")
    meta.childClasses.add("cobra.model.comp.EpPConn")
    meta.childClasses.add("cobra.model.comp.TrnsmtdErrPktsHist1year")
    meta.childClasses.add("cobra.model.comp.RcvdErrPktsHist1w")

    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdErrPktsHist15min", "HDcompTrnsmtdErrPkts15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdErrPktsHist1year", "HDcompTrnsmtdErrPkts1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdErrPkts1year", "CDcompTrnsmtdErrPkts1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdErrPktsHist1qtr", "HDcompTrnsmtdErrPkts1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdErrPkts15min", "CDcompTrnsmtdErrPkts15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdBytesHist1year", "HDcompTrnsmtdBytes1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdBytesHist15min", "HDcompTrnsmtdBytes15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdErrPktsHist1mo", "HDcompTrnsmtdErrPkts1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdErrPkts1qtr", "CDcompTrnsmtdErrPkts1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdErrPkts1mo", "CDcompTrnsmtdErrPkts1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdErrPktsHist1year", "HDcompRcvdErrPkts1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdPktsHist15min", "HDcompTrnsmtdPkts15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdBytesHist1qtr", "HDcompTrnsmtdBytes1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdPktsHist1year", "HDcompTrnsmtdPkts1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdBytes1year", "CDcompTrnsmtdBytes1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdBytes15min", "CDcompTrnsmtdBytes15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdErrPktsHist1w", "HDcompTrnsmtdErrPkts1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdErrPktsHist1h", "HDcompTrnsmtdErrPkts1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdErrPktsHist1d", "HDcompTrnsmtdErrPkts1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdErrPktsHist15min", "HDcompRcvdErrPkts15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdErrPktsHist1qtr", "HDcompRcvdErrPkts1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdErrPkts1year", "CDcompRcvdErrPkts1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdPkts1year", "CDcompTrnsmtdPkts1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdBytes1qtr", "CDcompTrnsmtdBytes1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdBytesHist1mo", "HDcompTrnsmtdBytes1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdErrPkts1h", "CDcompTrnsmtdErrPkts1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdErrPkts1d", "CDcompTrnsmtdErrPkts1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdErrPkts1w", "CDcompTrnsmtdErrPkts1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdPkts15min", "CDcompTrnsmtdPkts15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdErrPkts15min", "CDcompRcvdErrPkts15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdPktsHist1qtr", "HDcompTrnsmtdPkts1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdBytesHist1d", "HDcompTrnsmtdBytes1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdBytesHist1h", "HDcompTrnsmtdBytes1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdBytesHist1w", "HDcompTrnsmtdBytes1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdPkts1qtr", "CDcompTrnsmtdPkts1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdBytesHist1year", "HDcompRcvdBytes1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdErrPkts1qtr", "CDcompRcvdErrPkts1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdBytesHist15min", "HDcompRcvdBytes15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdErrPktsHist1mo", "HDcompRcvdErrPkts1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdBytes1mo", "CDcompTrnsmtdBytes1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdPktsHist1mo", "HDcompTrnsmtdPkts1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdBytesHist1qtr", "HDcompRcvdBytes1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdPktsHist1h", "HDcompTrnsmtdPkts1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdPktsHist1d", "HDcompTrnsmtdPkts1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdErrPkts1mo", "CDcompRcvdErrPkts1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdPktsHist1w", "HDcompTrnsmtdPkts1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdBytes15min", "CDcompRcvdBytes15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdPkts1mo", "CDcompTrnsmtdPkts1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdBytes1d", "CDcompTrnsmtdBytes1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdBytes1h", "CDcompTrnsmtdBytes1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdBytes1w", "CDcompTrnsmtdBytes1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdBytes1year", "CDcompRcvdBytes1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdErrPktsHist1d", "HDcompRcvdErrPkts1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdPktsHist1year", "HDcompRcvdPkts1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdErrPktsHist1h", "HDcompRcvdErrPkts1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdPktsHist15min", "HDcompRcvdPkts15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdErrPktsHist1w", "HDcompRcvdErrPkts1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdPkts1d", "CDcompTrnsmtdPkts1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdPkts1h", "CDcompTrnsmtdPkts1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.TrnsmtdPkts1w", "CDcompTrnsmtdPkts1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdPktsHist1qtr", "HDcompRcvdPkts1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdErrPkts1w", "CDcompRcvdErrPkts1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdErrPkts1h", "CDcompRcvdErrPkts1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdErrPkts1d", "CDcompRcvdErrPkts1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdBytes1qtr", "CDcompRcvdBytes1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdBytesHist1mo", "HDcompRcvdBytes1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdPkts15min", "CDcompRcvdPkts15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdPkts1year", "CDcompRcvdPkts1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdBytesHist1h", "HDcompRcvdBytes1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdBytesHist1d", "HDcompRcvdBytes1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdBytesHist1w", "HDcompRcvdBytes1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdBytes1mo", "CDcompRcvdBytes1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdPkts1qtr", "CDcompRcvdPkts1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdPktsHist1mo", "HDcompRcvdPkts1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdPktsHist1h", "HDcompRcvdPkts1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdPktsHist1w", "HDcompRcvdPkts1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdPkts1mo", "CDcompRcvdPkts1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdPktsHist1d", "HDcompRcvdPkts1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdBytes1w", "CDcompRcvdBytes1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdBytes1h", "CDcompRcvdBytes1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdBytes1d", "CDcompRcvdBytes1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdPkts1w", "CDcompRcvdPkts1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdPkts1h", "CDcompRcvdPkts1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RcvdPkts1d", "CDcompRcvdPkts1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RsUsegEpPD", "rsusegEpPD-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.PrimaryEncapDef", "primencap-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RtToNic", "rtfvToNic-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RsNicAdj", "rsnicAdj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RtNic", "rtfvNic-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.EpPConn", "eppconn-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.RsDlPol", "rsdlPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.comp.Ip", "ip-"))

    meta.parentClasses.add("cobra.model.comp.Vm")

    meta.superClasses.add("cobra.model.comp.Element")
    meta.superClasses.add("cobra.model.comp.PNic")
    meta.superClasses.add("cobra.model.comp.Entity")
    meta.superClasses.add("cobra.model.comp.Nic")
    meta.superClasses.add("cobra.model.naming.NamedIdentifiedObject")
    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('vnic-', True),
    ]

    prop = PropMeta("str", "adapterType", "adapterType", 15701, PropCategory.REGULAR)
    prop.label = "VNic Adapter Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("E1000", "virtuale1000-adapter", 1)
    prop._addConstant("E1000e", "virtuale1000e-adapter", 2)
    prop._addConstant("PCNet32", "virtualpcnet32-adapter", 6)
    prop._addConstant("Vmxnet", "virtualvmxnet-adapter", 3)
    prop._addConstant("Vmxnet2", "virtualvmxnet2-adapter", 4)
    prop._addConstant("Vmxnet3", "virtualvmxnet3-adapter", 5)
    prop._addConstant("unknown", "unknown-adapter", 0)
    meta.props.add("adapterType", prop)

    prop = PropMeta("str", "addressType", "addressType", 17656, PropCategory.REGULAR)
    prop.label = "VNic Address Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("addressType", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5587, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "guid", "guid", 1006, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("guid", prop)

    prop = PropMeta("str", "id", "id", 1003, PropCategory.REGULAR)
    prop.label = "Id"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "ip", "ip", 967, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("ip", prop)

    prop = PropMeta("str", "issues", "issues", 34206, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("ds-update-fault", "failed-to-update-ds(data-store)-property", 4096)
    prop._addConstant("hpnic-miss-epg-fault", "hpnic-is-attached-to-an-invalid-uplink-dvs-port-group", 32)
    prop._addConstant("hv-disconnect-fault", "esx-host-is-disconnected-or-not-responding", 128)
    prop._addConstant("hv-miss-dvs-fault", "esx-host-is-configured-with-invalid-dvs", 64)
    prop._addConstant("hv-miss-pnic-fault", "esx-host-does-not-have-any-pnic", 1024)
    prop._addConstant("hv-miss-vmknic-fault", "esx-host-does-not-have-any-vmknic", 256)
    prop._addConstant("hv-update-fault", "failed-to-update-hv(esx-host)-property", 2)
    prop._addConstant("lnode-property-fault", "failed-to-get-dvs-property", 1)
    prop._addConstant("mgmtnic-miss-dvs-fault", "vmk-nic-is-configured-with-invalid-dvs", 512)
    prop._addConstant("none", "none", 0)
    prop._addConstant("opflex-channels-down-ave", "both-the-opflex-channels-are-down-for-ave.-please-check-the-connections-on-the-host.", 16384)
    prop._addConstant("prep-iso-file-fault", "failed-to-prepare-or-push-iso-file-for-service-vm-deployment.-please-check-if-correct-datastore-is-selected-in-policy.", 131072)
    prop._addConstant("rp-update-fault", "failed-to-update-rp(resource-pool)-property", 8192)
    prop._addConstant("tagging-cat-fault", "failed-to-retrieve-all-tag-category-information", 65536)
    prop._addConstant("tagging-tag-fault", "failed-to-retrieve-all-tag-information", 32768)
    prop._addConstant("vm-deploy-task-fault", "deployvm-task-failed-on-vcenter", 2048)
    prop._addConstant("vm-miss-hv-fault", "vm-is-attached-to-an-invalid-hv(esx-host)", 8)
    prop._addConstant("vm-update-fault", "failed-to-update-vm(virtual-machine)-property", 4)
    prop._addConstant("vmfolder-update-fault", "failed-to-update-vm(virtual-machine)-folder-property", 262144)
    prop._addConstant("vnic-miss-epg-fault", "vnic-is-attached-to-an-invalid-dvs-port-group-or-unable-to-communicate-with-vcenter", 16)
    meta.props.add("issues", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "mac", "mac", 5972, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("mac", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14055, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 1004, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "oid", "oid", 1005, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("oid", prop)

    prop = PropMeta("str", "operSt", "operSt", 968, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "down"
    prop._addConstant("down", "down", 0)
    prop._addConstant("up", "up", 1)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "type", "type", 975, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "virt"
    prop._addConstant("ave-ctrl", "ave", 5)
    prop._addConstant("hv", "hypervisor-host", 3)
    prop._addConstant("phys", "baremetal-host", 1)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("virt", "virtual-machine", 2)
    prop._addConstant("vmk", "hypervisor-kernel", 4)
    meta.props.add("type", prop)

    prop = PropMeta("str", "uuid", "uuid", 35668, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("uuid", prop)

    meta.namingProps.append(getattr(meta.props, "mac"))

    meta.deploymentCategory = DeploymentCategory("vm", "VM")
    def __init__(self, parentMoOrDn, mac, markDirty=True, **creationProps):
        namingVals = [mac]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Query(Mo):
    """
    A query. This is a query object representing all information on returned objects.

    """

    meta = ClassMeta("cobra.model.callhome.Query")

    meta.moClassName = "callhomeQuery"
    meta.rnFormat = "chquery-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Query"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x800000000000001
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))

    meta.parentClasses.add("cobra.model.callhome.QueryGroup")

    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('chquery-', True),
    ]

    prop = PropMeta("str", "annotation", "annotation", 37580, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "entity", "entity", 1574, PropCategory.REGULAR)
    prop.label = "Value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    prop.regex = ['^[a-zA-Z0-9_./\\[\\]:-]+$']
    meta.props.add("entity", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 39719, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 5894, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rspSubtree", "rspSubtree", 1576, PropCategory.REGULAR)
    prop.label = "Response Depth"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no"
    prop._addConstant("children", "children", 1)
    prop._addConstant("full", "full", 2)
    prop._addConstant("no", "no", 0)
    meta.props.add("rspSubtree", prop)

    prop = PropMeta("str", "rspSubtreeInclude", "rspSubtreeInclude", 1577, PropCategory.REGULAR)
    prop.label = "Response Data"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("add-mo-list", "add-mo-list", 1048576)
    prop._addConstant("audit-logs", "audit-logs", 512)
    prop._addConstant("config-only", "config-only", 8)
    prop._addConstant("count", "count", 4096)
    prop._addConstant("custom-path-hop", "custom-path-hop", 16777216)
    prop._addConstant("deployment", "deployment", 32768)
    prop._addConstant("deployment-records", "deployment-records", 2097152)
    prop._addConstant("ep-records", "ep-records", 4194304)
    prop._addConstant("event-logs", "event-logs", 1024)
    prop._addConstant("fault-count", "fault-count", 131072)
    prop._addConstant("fault-records", "fault-records", 256)
    prop._addConstant("faults", "faults", 2)
    prop._addConstant("full-deployment", "full-deployment", 8388608)
    prop._addConstant("health", "health", 128)
    prop._addConstant("health-records", "health-records", 8192)
    prop._addConstant("local-prefix", "local-prefix", 65536)
    prop._addConstant("no-scoped", "no-scoped", 32)
    prop._addConstant("none", "none", 0)
    prop._addConstant("pending-deployment", "pending-deployment", 33554432)
    prop._addConstant("port-deployment", "port-deployment", 16384)
    prop._addConstant("record-subtree", "record-subtree", 524288)
    prop._addConstant("relations", "relations", 16)
    prop._addConstant("relations-with-parent", "relations-with-parent", 262144)
    prop._addConstant("required", "required", 2048)
    prop._addConstant("state", "state", 64)
    prop._addConstant("stats", "stats", 4)
    prop._addConstant("tags", "tags", 67108864)
    prop._addConstant("tasks", "tasks", 1)
    meta.props.add("rspSubtreeInclude", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "target", "target", 1575, PropCategory.REGULAR)
    prop.label = "Query Target"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "self"
    prop._addConstant("children", "children", 1)
    prop._addConstant("self", "self", 0)
    prop._addConstant("subtree", "subtree", 2)
    meta.props.add("target", prop)

    prop = PropMeta("str", "type", "type", 1573, PropCategory.REGULAR)
    prop.label = "Query Type"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "dn"
    prop._addConstant("class", "class", 1)
    prop._addConstant("dn", "dn", 0)
    meta.props.add("type", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Policy"

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

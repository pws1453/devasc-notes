# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class IngrTotal1h(Mo):
    """
    A class that represents the most current statistics for  Ingress in a 1 hour sampling interval.  This class updates every 15 minutes.

    """

    meta = StatsClassMeta("cobra.model.eqpt.IngrTotal1h", "Ingress")

    counter = CounterMeta("pktsRate", CounterCategory.GAUGE, "packets-per-second", "Total Ingress Packets rate")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "pktsRateLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "pktsRateMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "pktsRateMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "pktsRateAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "pktsRateSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "pktsRateTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "pktsRateThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "pktsRateTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "pktsRateTr"
    meta._counters.append(counter)

    counter = CounterMeta("util", CounterCategory.GAUGE, "percentage", "Ingress Link Utilization")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "utilLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "utilMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "utilMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "utilAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "utilSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "utilTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "utilThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "utilTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "utilTr"
    meta._counters.append(counter)

    counter = CounterMeta("pkts", CounterCategory.COUNTER, "packets", "Total Ingress Packets")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "pktsLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "pktsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "pktsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "pktsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "pktsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "pktsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "pktsSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "pktsBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "pktsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "pktsTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "pktsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "pktsRate"
    meta._counters.append(counter)

    counter = CounterMeta("bytesRate", CounterCategory.GAUGE, "bytes-per-second", "Total Ingress Bytes rate")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "bytesRateLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "bytesRateMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "bytesRateMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "bytesRateAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "bytesRateSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "bytesRateTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "bytesRateThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "bytesRateTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "bytesRateTr"
    meta._counters.append(counter)

    counter = CounterMeta("bytes", CounterCategory.COUNTER, "bytes", "Total Ingress Bytes")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "bytesLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "bytesCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "bytesPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "bytesMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "bytesMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "bytesAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "bytesSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "bytesBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "bytesThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "bytesTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "bytesTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "bytesRate"
    meta._counters.append(counter)

    meta.moClassName = "eqptIngrTotal1h"
    meta.rnFormat = "CDeqptIngrTotal1h"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current Ingress stats in 1 hour"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.mgmt.MgmtIf")
    meta.parentClasses.add("cobra.model.eqpt.CpuP")
    meta.parentClasses.add("cobra.model.pc.AggrIf")
    meta.parentClasses.add("cobra.model.l1.PhysIf")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.eqpt.IngrTotal")

    meta.rnPrefixes = [
        ('CDeqptIngrTotal1h', False),
    ]

    prop = PropMeta("str", "bytesAvg", "bytesAvg", 8621, PropCategory.IMPLICIT_AVG)
    prop.label = "Total Ingress Bytes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesAvg", prop)

    prop = PropMeta("str", "bytesBase", "bytesBase", 8616, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Total Ingress Bytes baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesBase", prop)

    prop = PropMeta("str", "bytesCum", "bytesCum", 8617, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Total Ingress Bytes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesCum", prop)

    prop = PropMeta("str", "bytesLast", "bytesLast", 8615, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Total Ingress Bytes current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesLast", prop)

    prop = PropMeta("str", "bytesMax", "bytesMax", 8620, PropCategory.IMPLICIT_MAX)
    prop.label = "Total Ingress Bytes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesMax", prop)

    prop = PropMeta("str", "bytesMin", "bytesMin", 8619, PropCategory.IMPLICIT_MIN)
    prop.label = "Total Ingress Bytes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesMin", prop)

    prop = PropMeta("str", "bytesPer", "bytesPer", 8618, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Total Ingress Bytes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesPer", prop)

    prop = PropMeta("str", "bytesRate", "bytesRate", 8626, PropCategory.IMPLICIT_RATE)
    prop.label = "Total Ingress Bytes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRate", prop)

    prop = PropMeta("str", "bytesRateAvg", "bytesRateAvg", 8645, PropCategory.IMPLICIT_AVG)
    prop.label = "Total Ingress Bytes rate average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateAvg", prop)

    prop = PropMeta("str", "bytesRateLast", "bytesRateLast", 8642, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Total Ingress Bytes rate current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateLast", prop)

    prop = PropMeta("str", "bytesRateMax", "bytesRateMax", 8644, PropCategory.IMPLICIT_MAX)
    prop.label = "Total Ingress Bytes rate maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateMax", prop)

    prop = PropMeta("str", "bytesRateMin", "bytesRateMin", 8643, PropCategory.IMPLICIT_MIN)
    prop.label = "Total Ingress Bytes rate minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateMin", prop)

    prop = PropMeta("str", "bytesRateSpct", "bytesRateSpct", 8646, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Total Ingress Bytes rate suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateSpct", prop)

    prop = PropMeta("str", "bytesRateThr", "bytesRateThr", 8648, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Total Ingress Bytes rate thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("bytesRateThr", prop)

    prop = PropMeta("str", "bytesRateTr", "bytesRateTr", 8650, PropCategory.IMPLICIT_TREND)
    prop.label = "Total Ingress Bytes rate trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateTr", prop)

    prop = PropMeta("str", "bytesRateTrBase", "bytesRateTrBase", 8649, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Total Ingress Bytes rate trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateTrBase", prop)

    prop = PropMeta("str", "bytesRateTtl", "bytesRateTtl", 8647, PropCategory.IMPLICIT_TOTAL)
    prop.label = "Total Ingress Bytes rate total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateTtl", prop)

    prop = PropMeta("str", "bytesSpct", "bytesSpct", 8622, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Total Ingress Bytes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesSpct", prop)

    prop = PropMeta("str", "bytesThr", "bytesThr", 8623, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Total Ingress Bytes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("bytesThr", prop)

    prop = PropMeta("str", "bytesTr", "bytesTr", 8625, PropCategory.IMPLICIT_TREND)
    prop.label = "Total Ingress Bytes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesTr", prop)

    prop = PropMeta("str", "bytesTrBase", "bytesTrBase", 8624, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Total Ingress Bytes trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesTrBase", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "pktsAvg", "pktsAvg", 8669, PropCategory.IMPLICIT_AVG)
    prop.label = "Total Ingress Packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsAvg", prop)

    prop = PropMeta("str", "pktsBase", "pktsBase", 8664, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Total Ingress Packets baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsBase", prop)

    prop = PropMeta("str", "pktsCum", "pktsCum", 8665, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Total Ingress Packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsCum", prop)

    prop = PropMeta("str", "pktsLast", "pktsLast", 8663, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Total Ingress Packets current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsLast", prop)

    prop = PropMeta("str", "pktsMax", "pktsMax", 8668, PropCategory.IMPLICIT_MAX)
    prop.label = "Total Ingress Packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsMax", prop)

    prop = PropMeta("str", "pktsMin", "pktsMin", 8667, PropCategory.IMPLICIT_MIN)
    prop.label = "Total Ingress Packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsMin", prop)

    prop = PropMeta("str", "pktsPer", "pktsPer", 8666, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Total Ingress Packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsPer", prop)

    prop = PropMeta("str", "pktsRate", "pktsRate", 8674, PropCategory.IMPLICIT_RATE)
    prop.label = "Total Ingress Packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRate", prop)

    prop = PropMeta("str", "pktsRateAvg", "pktsRateAvg", 15246, PropCategory.IMPLICIT_AVG)
    prop.label = "Total Ingress Packets rate average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateAvg", prop)

    prop = PropMeta("str", "pktsRateLast", "pktsRateLast", 15243, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Total Ingress Packets rate current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateLast", prop)

    prop = PropMeta("str", "pktsRateMax", "pktsRateMax", 15245, PropCategory.IMPLICIT_MAX)
    prop.label = "Total Ingress Packets rate maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateMax", prop)

    prop = PropMeta("str", "pktsRateMin", "pktsRateMin", 15244, PropCategory.IMPLICIT_MIN)
    prop.label = "Total Ingress Packets rate minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateMin", prop)

    prop = PropMeta("str", "pktsRateSpct", "pktsRateSpct", 15247, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Total Ingress Packets rate suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateSpct", prop)

    prop = PropMeta("str", "pktsRateThr", "pktsRateThr", 15249, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Total Ingress Packets rate thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("pktsRateThr", prop)

    prop = PropMeta("str", "pktsRateTr", "pktsRateTr", 15251, PropCategory.IMPLICIT_TREND)
    prop.label = "Total Ingress Packets rate trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateTr", prop)

    prop = PropMeta("str", "pktsRateTrBase", "pktsRateTrBase", 15250, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Total Ingress Packets rate trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateTrBase", prop)

    prop = PropMeta("str", "pktsRateTtl", "pktsRateTtl", 15248, PropCategory.IMPLICIT_TOTAL)
    prop.label = "Total Ingress Packets rate total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateTtl", prop)

    prop = PropMeta("str", "pktsSpct", "pktsSpct", 8670, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Total Ingress Packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsSpct", prop)

    prop = PropMeta("str", "pktsThr", "pktsThr", 8671, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Total Ingress Packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("pktsThr", prop)

    prop = PropMeta("str", "pktsTr", "pktsTr", 8673, PropCategory.IMPLICIT_TREND)
    prop.label = "Total Ingress Packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsTr", prop)

    prop = PropMeta("str", "pktsTrBase", "pktsTrBase", 8672, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Total Ingress Packets trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsTrBase", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "utilAvg", "utilAvg", 8693, PropCategory.IMPLICIT_AVG)
    prop.label = "Ingress Link Utilization average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("utilAvg", prop)

    prop = PropMeta("str", "utilLast", "utilLast", 8690, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Ingress Link Utilization current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("utilLast", prop)

    prop = PropMeta("str", "utilMax", "utilMax", 8692, PropCategory.IMPLICIT_MAX)
    prop.label = "Ingress Link Utilization maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("utilMax", prop)

    prop = PropMeta("str", "utilMin", "utilMin", 8691, PropCategory.IMPLICIT_MIN)
    prop.label = "Ingress Link Utilization minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("utilMin", prop)

    prop = PropMeta("str", "utilSpct", "utilSpct", 8694, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Ingress Link Utilization suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("utilSpct", prop)

    prop = PropMeta("str", "utilThr", "utilThr", 8696, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Ingress Link Utilization thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("utilThr", prop)

    prop = PropMeta("str", "utilTr", "utilTr", 8698, PropCategory.IMPLICIT_TREND)
    prop.label = "Ingress Link Utilization trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("utilTr", prop)

    prop = PropMeta("str", "utilTrBase", "utilTrBase", 8697, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Ingress Link Utilization trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("utilTrBase", prop)

    prop = PropMeta("str", "utilTtl", "utilTtl", 8695, PropCategory.IMPLICIT_TOTAL)
    prop.label = "Ingress Link Utilization total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("utilTtl", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("l1EthIfToEPg", "EPG", "cobra.model.fv.EPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("EqptPortToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

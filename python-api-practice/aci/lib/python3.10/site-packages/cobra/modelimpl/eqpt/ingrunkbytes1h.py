# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class IngrUnkBytes1h(Mo):
    """
    A class that represents the most current statistics for  Ingress  Unknown  Bytes in a 1 hour sampling interval.  This class updates every 15 minutes.

    """

    meta = StatsClassMeta("cobra.model.eqpt.IngrUnkBytes1h", "Ingress Unknown Bytes")

    counter = CounterMeta("unclassified", CounterCategory.COUNTER, "bytes", "Ingress Unclassfied Bytes")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "unclassifiedLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "unclassifiedCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "unclassifiedPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "unclassifiedMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "unclassifiedMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "unclassifiedAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "unclassifiedSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "unclassifiedBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "unclassifiedThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "unclassifiedTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "unclassifiedTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "unclassifiedRate"
    meta._counters.append(counter)

    counter = CounterMeta("unicast", CounterCategory.COUNTER, "bytes", "Ingress Unknown Unicast Bytes")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "unicastLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "unicastCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "unicastPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "unicastMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "unicastMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "unicastAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "unicastSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "unicastBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "unicastThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "unicastTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "unicastTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "unicastRate"
    meta._counters.append(counter)

    meta.moClassName = "eqptIngrUnkBytes1h"
    meta.rnFormat = "CDeqptIngrUnkBytes1h"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current Ingress Unknown Bytes stats in 1 hour"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.eqpt.CpuP")
    meta.parentClasses.add("cobra.model.pc.AggrIf")
    meta.parentClasses.add("cobra.model.l1.PhysIf")

    meta.superClasses.add("cobra.model.eqpt.IngrUnkBytes")
    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.stats.Item")

    meta.rnPrefixes = [
        ('CDeqptIngrUnkBytes1h', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "unclassifiedAvg", "unclassifiedAvg", 8717, PropCategory.IMPLICIT_AVG)
    prop.label = "Ingress Unclassfied Bytes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unclassifiedAvg", prop)

    prop = PropMeta("str", "unclassifiedBase", "unclassifiedBase", 8712, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Ingress Unclassfied Bytes baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unclassifiedBase", prop)

    prop = PropMeta("str", "unclassifiedCum", "unclassifiedCum", 8713, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Ingress Unclassfied Bytes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unclassifiedCum", prop)

    prop = PropMeta("str", "unclassifiedLast", "unclassifiedLast", 8711, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Ingress Unclassfied Bytes current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unclassifiedLast", prop)

    prop = PropMeta("str", "unclassifiedMax", "unclassifiedMax", 8716, PropCategory.IMPLICIT_MAX)
    prop.label = "Ingress Unclassfied Bytes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unclassifiedMax", prop)

    prop = PropMeta("str", "unclassifiedMin", "unclassifiedMin", 8715, PropCategory.IMPLICIT_MIN)
    prop.label = "Ingress Unclassfied Bytes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unclassifiedMin", prop)

    prop = PropMeta("str", "unclassifiedPer", "unclassifiedPer", 8714, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Ingress Unclassfied Bytes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unclassifiedPer", prop)

    prop = PropMeta("str", "unclassifiedRate", "unclassifiedRate", 8722, PropCategory.IMPLICIT_RATE)
    prop.label = "Ingress Unclassfied Bytes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unclassifiedRate", prop)

    prop = PropMeta("str", "unclassifiedSpct", "unclassifiedSpct", 8718, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Ingress Unclassfied Bytes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unclassifiedSpct", prop)

    prop = PropMeta("str", "unclassifiedThr", "unclassifiedThr", 8719, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Ingress Unclassfied Bytes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("unclassifiedThr", prop)

    prop = PropMeta("str", "unclassifiedTr", "unclassifiedTr", 8721, PropCategory.IMPLICIT_TREND)
    prop.label = "Ingress Unclassfied Bytes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unclassifiedTr", prop)

    prop = PropMeta("str", "unclassifiedTrBase", "unclassifiedTrBase", 8720, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Ingress Unclassfied Bytes trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unclassifiedTrBase", prop)

    prop = PropMeta("str", "unicastAvg", "unicastAvg", 8744, PropCategory.IMPLICIT_AVG)
    prop.label = "Ingress Unknown Unicast Bytes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastAvg", prop)

    prop = PropMeta("str", "unicastBase", "unicastBase", 8739, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Ingress Unknown Unicast Bytes baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastBase", prop)

    prop = PropMeta("str", "unicastCum", "unicastCum", 8740, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Ingress Unknown Unicast Bytes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastCum", prop)

    prop = PropMeta("str", "unicastLast", "unicastLast", 8738, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Ingress Unknown Unicast Bytes current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastLast", prop)

    prop = PropMeta("str", "unicastMax", "unicastMax", 8743, PropCategory.IMPLICIT_MAX)
    prop.label = "Ingress Unknown Unicast Bytes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastMax", prop)

    prop = PropMeta("str", "unicastMin", "unicastMin", 8742, PropCategory.IMPLICIT_MIN)
    prop.label = "Ingress Unknown Unicast Bytes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastMin", prop)

    prop = PropMeta("str", "unicastPer", "unicastPer", 8741, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Ingress Unknown Unicast Bytes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastPer", prop)

    prop = PropMeta("str", "unicastRate", "unicastRate", 8749, PropCategory.IMPLICIT_RATE)
    prop.label = "Ingress Unknown Unicast Bytes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastRate", prop)

    prop = PropMeta("str", "unicastSpct", "unicastSpct", 8745, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Ingress Unknown Unicast Bytes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastSpct", prop)

    prop = PropMeta("str", "unicastThr", "unicastThr", 8746, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Ingress Unknown Unicast Bytes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("unicastThr", prop)

    prop = PropMeta("str", "unicastTr", "unicastTr", 8748, PropCategory.IMPLICIT_TREND)
    prop.label = "Ingress Unknown Unicast Bytes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastTr", prop)

    prop = PropMeta("str", "unicastTrBase", "unicastTrBase", 8747, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Ingress Unknown Unicast Bytes trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastTrBase", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("l1EthIfToEPg", "EPG", "cobra.model.fv.EPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("EqptPortToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class IngrDropPktsHist1w(Mo):
    """
    A class that represents historical statistics for  Ingress  Drop  Packets in a 1 week sampling interval.  This class updates every day.

    """

    meta = StatsClassMeta("cobra.model.eqpt.IngrDropPktsHist1w", "Ingress Drop Packets")

    counter = CounterMeta("error", CounterCategory.COUNTER, "packets", "Ingress Error Drop Packets")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "errorCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "errorPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "errorMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "errorMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "errorAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "errorSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "errorThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "errorTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "errorRate"
    meta._counters.append(counter)

    counter = CounterMeta("lb", CounterCategory.COUNTER, "packets", "Ingress Load Balancer Drop Packets")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "lbCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "lbPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "lbMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "lbMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "lbAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "lbSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "lbThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "lbTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "lbRate"
    meta._counters.append(counter)

    counter = CounterMeta("buffer", CounterCategory.COUNTER, "packets", "Ingress Buffer Drop Packets")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "bufferCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "bufferPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "bufferMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "bufferMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "bufferAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "bufferSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "bufferThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "bufferTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "bufferRate"
    meta._counters.append(counter)

    counter = CounterMeta("forwarding", CounterCategory.COUNTER, "packets", "Ingress Forwarding Drop Packets")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "forwardingCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "forwardingPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "forwardingMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "forwardingMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "forwardingAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "forwardingSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "forwardingThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "forwardingTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "forwardingRate"
    meta._counters.append(counter)

    meta.moClassName = "eqptIngrDropPktsHist1w"
    meta.rnFormat = "HDeqptIngrDropPkts1w-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical Ingress Drop Packets stats in 1 week"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.pc.AggrIf")
    meta.parentClasses.add("cobra.model.l1.PhysIf")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Hist")
    meta.superClasses.add("cobra.model.eqpt.IngrDropPktsHist")

    meta.rnPrefixes = [
        ('HDeqptIngrDropPkts1w-', True),
    ]

    prop = PropMeta("str", "bufferAvg", "bufferAvg", 8442, PropCategory.IMPLICIT_AVG)
    prop.label = "Ingress Buffer Drop Packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bufferAvg", prop)

    prop = PropMeta("str", "bufferCum", "bufferCum", 8438, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Ingress Buffer Drop Packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bufferCum", prop)

    prop = PropMeta("str", "bufferMax", "bufferMax", 8441, PropCategory.IMPLICIT_MAX)
    prop.label = "Ingress Buffer Drop Packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bufferMax", prop)

    prop = PropMeta("str", "bufferMin", "bufferMin", 8440, PropCategory.IMPLICIT_MIN)
    prop.label = "Ingress Buffer Drop Packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bufferMin", prop)

    prop = PropMeta("str", "bufferPer", "bufferPer", 8439, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Ingress Buffer Drop Packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bufferPer", prop)

    prop = PropMeta("str", "bufferRate", "bufferRate", 8446, PropCategory.IMPLICIT_RATE)
    prop.label = "Ingress Buffer Drop Packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bufferRate", prop)

    prop = PropMeta("str", "bufferSpct", "bufferSpct", 8443, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Ingress Buffer Drop Packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bufferSpct", prop)

    prop = PropMeta("str", "bufferThr", "bufferThr", 8444, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Ingress Buffer Drop Packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("bufferThr", prop)

    prop = PropMeta("str", "bufferTr", "bufferTr", 8445, PropCategory.IMPLICIT_TREND)
    prop.label = "Ingress Buffer Drop Packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bufferTr", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "errorAvg", "errorAvg", 8469, PropCategory.IMPLICIT_AVG)
    prop.label = "Ingress Error Drop Packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorAvg", prop)

    prop = PropMeta("str", "errorCum", "errorCum", 8465, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Ingress Error Drop Packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorCum", prop)

    prop = PropMeta("str", "errorMax", "errorMax", 8468, PropCategory.IMPLICIT_MAX)
    prop.label = "Ingress Error Drop Packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorMax", prop)

    prop = PropMeta("str", "errorMin", "errorMin", 8467, PropCategory.IMPLICIT_MIN)
    prop.label = "Ingress Error Drop Packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorMin", prop)

    prop = PropMeta("str", "errorPer", "errorPer", 8466, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Ingress Error Drop Packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorPer", prop)

    prop = PropMeta("str", "errorRate", "errorRate", 8473, PropCategory.IMPLICIT_RATE)
    prop.label = "Ingress Error Drop Packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorRate", prop)

    prop = PropMeta("str", "errorSpct", "errorSpct", 8470, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Ingress Error Drop Packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorSpct", prop)

    prop = PropMeta("str", "errorThr", "errorThr", 8471, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Ingress Error Drop Packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("errorThr", prop)

    prop = PropMeta("str", "errorTr", "errorTr", 8472, PropCategory.IMPLICIT_TREND)
    prop.label = "Ingress Error Drop Packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorTr", prop)

    prop = PropMeta("str", "forwardingAvg", "forwardingAvg", 8496, PropCategory.IMPLICIT_AVG)
    prop.label = "Ingress Forwarding Drop Packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardingAvg", prop)

    prop = PropMeta("str", "forwardingCum", "forwardingCum", 8492, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Ingress Forwarding Drop Packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardingCum", prop)

    prop = PropMeta("str", "forwardingMax", "forwardingMax", 8495, PropCategory.IMPLICIT_MAX)
    prop.label = "Ingress Forwarding Drop Packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardingMax", prop)

    prop = PropMeta("str", "forwardingMin", "forwardingMin", 8494, PropCategory.IMPLICIT_MIN)
    prop.label = "Ingress Forwarding Drop Packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardingMin", prop)

    prop = PropMeta("str", "forwardingPer", "forwardingPer", 8493, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Ingress Forwarding Drop Packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardingPer", prop)

    prop = PropMeta("str", "forwardingRate", "forwardingRate", 8500, PropCategory.IMPLICIT_RATE)
    prop.label = "Ingress Forwarding Drop Packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardingRate", prop)

    prop = PropMeta("str", "forwardingSpct", "forwardingSpct", 8497, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Ingress Forwarding Drop Packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardingSpct", prop)

    prop = PropMeta("str", "forwardingThr", "forwardingThr", 8498, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Ingress Forwarding Drop Packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("forwardingThr", prop)

    prop = PropMeta("str", "forwardingTr", "forwardingTr", 8499, PropCategory.IMPLICIT_TREND)
    prop.label = "Ingress Forwarding Drop Packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardingTr", prop)

    prop = PropMeta("str", "index", "index", 6266, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "lbAvg", "lbAvg", 8523, PropCategory.IMPLICIT_AVG)
    prop.label = "Ingress Load Balancer Drop Packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lbAvg", prop)

    prop = PropMeta("str", "lbCum", "lbCum", 8519, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Ingress Load Balancer Drop Packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lbCum", prop)

    prop = PropMeta("str", "lbMax", "lbMax", 8522, PropCategory.IMPLICIT_MAX)
    prop.label = "Ingress Load Balancer Drop Packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lbMax", prop)

    prop = PropMeta("str", "lbMin", "lbMin", 8521, PropCategory.IMPLICIT_MIN)
    prop.label = "Ingress Load Balancer Drop Packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lbMin", prop)

    prop = PropMeta("str", "lbPer", "lbPer", 8520, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Ingress Load Balancer Drop Packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lbPer", prop)

    prop = PropMeta("str", "lbRate", "lbRate", 8527, PropCategory.IMPLICIT_RATE)
    prop.label = "Ingress Load Balancer Drop Packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lbRate", prop)

    prop = PropMeta("str", "lbSpct", "lbSpct", 8524, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Ingress Load Balancer Drop Packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lbSpct", prop)

    prop = PropMeta("str", "lbThr", "lbThr", 8525, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Ingress Load Balancer Drop Packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("lbThr", prop)

    prop = PropMeta("str", "lbTr", "lbTr", 8526, PropCategory.IMPLICIT_TREND)
    prop.label = "Ingress Load Balancer Drop Packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("lbTr", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("l1EthIfToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class IngrAggrPkts1mo(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.eqpt.IngrAggrPkts1mo", "Ingress Aggregated Packets")

    counter = CounterMeta("drop", CounterCategory.COUNTER, "packets", "Ingress Aggregated Drop Packets")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "dropLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "dropCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "dropPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "dropMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "dropMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "dropAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "dropSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "dropBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "dropThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "dropTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "dropTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "dropRate"
    meta._counters.append(counter)

    counter = CounterMeta("forward", CounterCategory.COUNTER, "packets", "Ingress Aggregated Forward Packets")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "forwardLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "forwardCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "forwardPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "forwardMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "forwardMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "forwardAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "forwardSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "forwardBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "forwardThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "forwardTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "forwardTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "forwardRate"
    meta._counters.append(counter)

    meta.moClassName = "eqptIngrAggrPkts1mo"
    meta.rnFormat = "CDeqptIngrAggrPkts1mo"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current Ingress Aggregated Packets stats in 1 month"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.l2.VfcIf")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.eqpt.IngrAggrPkts")

    meta.rnPrefixes = [
        ('CDeqptIngrAggrPkts1mo', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dropAvg", "dropAvg", 25762, PropCategory.IMPLICIT_AVG)
    prop.label = "Ingress Aggregated Drop Packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropAvg", prop)

    prop = PropMeta("str", "dropBase", "dropBase", 25757, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Ingress Aggregated Drop Packets baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropBase", prop)

    prop = PropMeta("str", "dropCum", "dropCum", 25758, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Ingress Aggregated Drop Packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropCum", prop)

    prop = PropMeta("str", "dropLast", "dropLast", 25756, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Ingress Aggregated Drop Packets current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropLast", prop)

    prop = PropMeta("str", "dropMax", "dropMax", 25761, PropCategory.IMPLICIT_MAX)
    prop.label = "Ingress Aggregated Drop Packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropMax", prop)

    prop = PropMeta("str", "dropMin", "dropMin", 25760, PropCategory.IMPLICIT_MIN)
    prop.label = "Ingress Aggregated Drop Packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropMin", prop)

    prop = PropMeta("str", "dropPer", "dropPer", 25759, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Ingress Aggregated Drop Packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropPer", prop)

    prop = PropMeta("str", "dropRate", "dropRate", 25767, PropCategory.IMPLICIT_RATE)
    prop.label = "Ingress Aggregated Drop Packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropRate", prop)

    prop = PropMeta("str", "dropSpct", "dropSpct", 25763, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Ingress Aggregated Drop Packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropSpct", prop)

    prop = PropMeta("str", "dropThr", "dropThr", 25764, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Ingress Aggregated Drop Packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("dropThr", prop)

    prop = PropMeta("str", "dropTr", "dropTr", 25766, PropCategory.IMPLICIT_TREND)
    prop.label = "Ingress Aggregated Drop Packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropTr", prop)

    prop = PropMeta("str", "dropTrBase", "dropTrBase", 25765, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Ingress Aggregated Drop Packets trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("dropTrBase", prop)

    prop = PropMeta("str", "forwardAvg", "forwardAvg", 25783, PropCategory.IMPLICIT_AVG)
    prop.label = "Ingress Aggregated Forward Packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardAvg", prop)

    prop = PropMeta("str", "forwardBase", "forwardBase", 25778, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Ingress Aggregated Forward Packets baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardBase", prop)

    prop = PropMeta("str", "forwardCum", "forwardCum", 25779, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Ingress Aggregated Forward Packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardCum", prop)

    prop = PropMeta("str", "forwardLast", "forwardLast", 25777, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Ingress Aggregated Forward Packets current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardLast", prop)

    prop = PropMeta("str", "forwardMax", "forwardMax", 25782, PropCategory.IMPLICIT_MAX)
    prop.label = "Ingress Aggregated Forward Packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardMax", prop)

    prop = PropMeta("str", "forwardMin", "forwardMin", 25781, PropCategory.IMPLICIT_MIN)
    prop.label = "Ingress Aggregated Forward Packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardMin", prop)

    prop = PropMeta("str", "forwardPer", "forwardPer", 25780, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Ingress Aggregated Forward Packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardPer", prop)

    prop = PropMeta("str", "forwardRate", "forwardRate", 25788, PropCategory.IMPLICIT_RATE)
    prop.label = "Ingress Aggregated Forward Packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardRate", prop)

    prop = PropMeta("str", "forwardSpct", "forwardSpct", 25784, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Ingress Aggregated Forward Packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardSpct", prop)

    prop = PropMeta("str", "forwardThr", "forwardThr", 25785, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Ingress Aggregated Forward Packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("forwardThr", prop)

    prop = PropMeta("str", "forwardTr", "forwardTr", 25787, PropCategory.IMPLICIT_TREND)
    prop.label = "Ingress Aggregated Forward Packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardTr", prop)

    prop = PropMeta("str", "forwardTrBase", "forwardTrBase", 25786, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Ingress Aggregated Forward Packets trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("forwardTrBase", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

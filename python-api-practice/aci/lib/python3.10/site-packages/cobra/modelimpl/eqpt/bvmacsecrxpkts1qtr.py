# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Bvmacsecrxpkts1qtr(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.eqpt.Bvmacsecrxpkts1qtr", "BV Macsec Rx Pkts")

    counter = CounterMeta("decryptedPacktesRate", CounterCategory.GAUGE, "packets-per-second", "BV Macsec Decrypted packets rate")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "decryptedPacktesRateLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "decryptedPacktesRateMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "decryptedPacktesRateMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "decryptedPacktesRateAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "decryptedPacktesRateSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "decryptedPacktesRateTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "decryptedPacktesRateThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "decryptedPacktesRateTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "decryptedPacktesRateTr"
    meta._counters.append(counter)

    counter = CounterMeta("decryptedPacktes", CounterCategory.COUNTER, "packets", "BV Macsec Decrypted packets")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "decryptedPacktesLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "decryptedPacktesCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "decryptedPacktesPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "decryptedPacktesMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "decryptedPacktesMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "decryptedPacktesAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "decryptedPacktesSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "decryptedPacktesBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "decryptedPacktesThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "decryptedPacktesTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "decryptedPacktesTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "decryptedPacktesRate"
    meta._counters.append(counter)

    meta.moClassName = "eqptBvmacsecrxpkts1qtr"
    meta.rnFormat = "CDeqptBvmacsecrxpkts1qtr"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current BV Macsec Rx Pkts stats in 1 quarter"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.pc.AggrIf")
    meta.parentClasses.add("cobra.model.l1.PhysIf")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.eqpt.Bvmacsecrxpkts")

    meta.rnPrefixes = [
        ('CDeqptBvmacsecrxpkts1qtr', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "decryptedPacktesAvg", "decryptedPacktesAvg", 42560, PropCategory.IMPLICIT_AVG)
    prop.label = "BV Macsec Decrypted packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesAvg", prop)

    prop = PropMeta("str", "decryptedPacktesBase", "decryptedPacktesBase", 42555, PropCategory.IMPLICIT_BASELINE)
    prop.label = "BV Macsec Decrypted packets baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesBase", prop)

    prop = PropMeta("str", "decryptedPacktesCum", "decryptedPacktesCum", 42556, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "BV Macsec Decrypted packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesCum", prop)

    prop = PropMeta("str", "decryptedPacktesLast", "decryptedPacktesLast", 42554, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "BV Macsec Decrypted packets current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesLast", prop)

    prop = PropMeta("str", "decryptedPacktesMax", "decryptedPacktesMax", 42559, PropCategory.IMPLICIT_MAX)
    prop.label = "BV Macsec Decrypted packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesMax", prop)

    prop = PropMeta("str", "decryptedPacktesMin", "decryptedPacktesMin", 42558, PropCategory.IMPLICIT_MIN)
    prop.label = "BV Macsec Decrypted packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesMin", prop)

    prop = PropMeta("str", "decryptedPacktesPer", "decryptedPacktesPer", 42557, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "BV Macsec Decrypted packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesPer", prop)

    prop = PropMeta("str", "decryptedPacktesRate", "decryptedPacktesRate", 42565, PropCategory.IMPLICIT_RATE)
    prop.label = "BV Macsec Decrypted packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesRate", prop)

    prop = PropMeta("str", "decryptedPacktesRateAvg", "decryptedPacktesRateAvg", 42578, PropCategory.IMPLICIT_AVG)
    prop.label = "BV Macsec Decrypted packets rate average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesRateAvg", prop)

    prop = PropMeta("str", "decryptedPacktesRateLast", "decryptedPacktesRateLast", 42575, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "BV Macsec Decrypted packets rate current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesRateLast", prop)

    prop = PropMeta("str", "decryptedPacktesRateMax", "decryptedPacktesRateMax", 42577, PropCategory.IMPLICIT_MAX)
    prop.label = "BV Macsec Decrypted packets rate maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesRateMax", prop)

    prop = PropMeta("str", "decryptedPacktesRateMin", "decryptedPacktesRateMin", 42576, PropCategory.IMPLICIT_MIN)
    prop.label = "BV Macsec Decrypted packets rate minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesRateMin", prop)

    prop = PropMeta("str", "decryptedPacktesRateSpct", "decryptedPacktesRateSpct", 42579, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "BV Macsec Decrypted packets rate suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesRateSpct", prop)

    prop = PropMeta("str", "decryptedPacktesRateThr", "decryptedPacktesRateThr", 42581, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "BV Macsec Decrypted packets rate thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("decryptedPacktesRateThr", prop)

    prop = PropMeta("str", "decryptedPacktesRateTr", "decryptedPacktesRateTr", 42583, PropCategory.IMPLICIT_TREND)
    prop.label = "BV Macsec Decrypted packets rate trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesRateTr", prop)

    prop = PropMeta("str", "decryptedPacktesRateTrBase", "decryptedPacktesRateTrBase", 42582, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "BV Macsec Decrypted packets rate trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesRateTrBase", prop)

    prop = PropMeta("str", "decryptedPacktesRateTtl", "decryptedPacktesRateTtl", 42580, PropCategory.IMPLICIT_TOTAL)
    prop.label = "BV Macsec Decrypted packets rate total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesRateTtl", prop)

    prop = PropMeta("str", "decryptedPacktesSpct", "decryptedPacktesSpct", 42561, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "BV Macsec Decrypted packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesSpct", prop)

    prop = PropMeta("str", "decryptedPacktesThr", "decryptedPacktesThr", 42562, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "BV Macsec Decrypted packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("decryptedPacktesThr", prop)

    prop = PropMeta("str", "decryptedPacktesTr", "decryptedPacktesTr", 42564, PropCategory.IMPLICIT_TREND)
    prop.label = "BV Macsec Decrypted packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesTr", prop)

    prop = PropMeta("str", "decryptedPacktesTrBase", "decryptedPacktesTrBase", 42563, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "BV Macsec Decrypted packets trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("decryptedPacktesTrBase", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("l1EthIfToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

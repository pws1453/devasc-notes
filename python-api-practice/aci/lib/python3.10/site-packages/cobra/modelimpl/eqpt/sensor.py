# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Sensor(Mo):
    """
    A temperature sensor monitors the on-board temperature on the chassis. The temperatures are an input into the fan control algorithm. The chassis software adjusts fan speed to keep all sensors within normal operating conditions.

    """

    meta = ClassMeta("cobra.model.eqpt.Sensor")

    meta.moClassName = "eqptSensor"
    meta.rnFormat = "sensor-%(id)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Equipment Sensor"
    meta.writeAccessMask = 0x80080000000001
    meta.readAccessMask = 0x80080000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.eqpt.TempHist1qtr")
    meta.childClasses.add("cobra.model.eqpt.TempHist1d")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.eqpt.Temp1w")
    meta.childClasses.add("cobra.model.eqpt.Temp15min")
    meta.childClasses.add("cobra.model.eqpt.Temp1mo")
    meta.childClasses.add("cobra.model.eqpt.Temp5min")
    meta.childClasses.add("cobra.model.eqpt.TempHist15min")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.eqpt.TempHist1w")
    meta.childClasses.add("cobra.model.eqpt.Temp1h")
    meta.childClasses.add("cobra.model.eqpt.Temp1qtr")
    meta.childClasses.add("cobra.model.eqpt.TempHist5min")
    meta.childClasses.add("cobra.model.eqpt.Temp1d")
    meta.childClasses.add("cobra.model.eqpt.TempHist1h")
    meta.childClasses.add("cobra.model.eqpt.Temp1year")
    meta.childClasses.add("cobra.model.eqpt.TempHist1year")
    meta.childClasses.add("cobra.model.eqpt.TempHist1mo")

    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.TempHist15min", "HDeqptTemp15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.TempHist1year", "HDeqptTemp1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.TempHist1qtr", "HDeqptTemp1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.Temp15min", "CDeqptTemp15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.TempHist5min", "HDeqptTemp5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.Temp1year", "CDeqptTemp1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.Temp5min", "CDeqptTemp5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.Temp1qtr", "CDeqptTemp1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.TempHist1mo", "HDeqptTemp1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.TempHist1d", "HDeqptTemp1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.Temp1mo", "CDeqptTemp1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.TempHist1w", "HDeqptTemp1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.TempHist1h", "HDeqptTemp1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.Temp1w", "CDeqptTemp1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.Temp1h", "CDeqptTemp1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.Temp1d", "CDeqptTemp1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.eqpt.SysC")
    meta.parentClasses.add("cobra.model.eqpt.FC")
    meta.parentClasses.add("cobra.model.eqpt.SupC")
    meta.parentClasses.add("cobra.model.eqpt.Board")
    meta.parentClasses.add("cobra.model.eqpt.ExtChCard")
    meta.parentClasses.add("cobra.model.eqpt.LC")
    meta.parentClasses.add("cobra.model.eqpt.Nic")

    meta.superClasses.add("cobra.model.eqpt.Item")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.eqpt.Silicon")
    meta.superClasses.add("cobra.model.eqpt.Comp")

    meta.rnPrefixes = [
        ('sensor-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cimcVersion", "cimcVersion", 56701, PropCategory.REGULAR)
    prop.label = "CIMC version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("cimcVersion", prop)

    prop = PropMeta("str", "descr", "descr", 5597, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "id", "id", 3440, PropCategory.REGULAR)
    prop.label = "ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 32)]
    meta.props.add("id", prop)

    prop = PropMeta("str", "majorThresh", "majorThresh", 3442, PropCategory.REGULAR)
    prop.label = "Major Threshold"
    prop.isOper = True
    meta.props.add("majorThresh", prop)

    prop = PropMeta("str", "mfgTm", "mfgTm", 5596, PropCategory.REGULAR)
    prop.label = "Manufacturing Time"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "not-applicable"
    prop._addConstant("not-applicable", "n/a", 0)
    meta.props.add("mfgTm", prop)

    prop = PropMeta("str", "minorThresh", "minorThresh", 3443, PropCategory.REGULAR)
    prop.label = "Minor Threshold"
    prop.isOper = True
    meta.props.add("minorThresh", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "model", "model", 5592, PropCategory.REGULAR)
    prop.label = "Model"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("model", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14521, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "operSt", "operSt", 3444, PropCategory.REGULAR)
    prop.label = "OperSt"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 4
    prop.defaultValueStr = "absent"
    prop._addConstant("absent", "absent", 4)
    prop._addConstant("bad-asic", "bad-asic", 5)
    prop._addConstant("fail", "fail", 0)
    prop._addConstant("major", "major-alarm", 3)
    prop._addConstant("minor", "minor-alarm", 2)
    prop._addConstant("normal", "normal", 1)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "rev", "rev", 5593, PropCategory.REGULAR)
    prop.label = "Revision"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    prop.defaultValue = "0"
    prop.defaultValueStr = "0"
    meta.props.add("rev", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "ser", "ser", 5594, PropCategory.REGULAR)
    prop.label = "Serial Number"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("ser", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "type", "type", 3441, PropCategory.REGULAR)
    prop.label = "Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 9
    prop.defaultValueStr = "asic"
    prop._addConstant("arm", "arm-cpu", 19)
    prop._addConstant("asic", "asic-sensor", 9)
    prop._addConstant("asic-vrm", "asic-vrm", 12)
    prop._addConstant("cpu", "cpu-sensor", 1)
    prop._addConstant("cpu-crm", "cpu-vrm", 11)
    prop._addConstant("dimm", "dimm-sensor", 5)
    prop._addConstant("hotswap", "hotswap-sensor", 4)
    prop._addConstant("inlet", "inlet-sensor", 2)
    prop._addConstant("outlet", "outlet-sensor", 3)
    prop._addConstant("pch", "pch", 10)
    prop._addConstant("phy", "phy-sensor", 6)
    prop._addConstant("qsfp", "qsfp-sensor", 8)
    prop._addConstant("sfp", "sfp-sensor", 7)
    prop._addConstant("x86", "x86-cpu", 18)
    meta.props.add("type", prop)

    prop = PropMeta("str", "value", "value", 24869, PropCategory.REGULAR)
    prop.label = "Sensor Value"
    prop.isOper = True
    meta.props.add("value", prop)

    prop = PropMeta("str", "vendor", "vendor", 5595, PropCategory.REGULAR)
    prop.label = "Vendor"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    prop.defaultValue = "Cisco Systems, Inc"
    prop.defaultValueStr = "Cisco Systems, Inc"
    meta.props.add("vendor", prop)

    meta.namingProps.append(getattr(meta.props, "id"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("EqptSlotToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, id, markDirty=True, **creationProps):
        namingVals = [id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class IngrCrcErrPkts1year(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.eqpt.IngrCrcErrPkts1year", "Ingress CRC Error Packets")

    counter = CounterMeta("fcsRate", CounterCategory.GAUGE, "packets-per-second", "FCS CRC Errored Packets rate")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "fcsRateLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "fcsRateMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "fcsRateMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "fcsRateAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "fcsRateSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "fcsRateTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "fcsRateThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "fcsRateTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "fcsRateTr"
    meta._counters.append(counter)

    counter = CounterMeta("fcs", CounterCategory.COUNTER, "packets", "FCS CRC Errored Packets")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "fcsLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "fcsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "fcsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "fcsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "fcsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "fcsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "fcsSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "fcsBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "fcsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "fcsTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "fcsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "fcsRate"
    meta._counters.append(counter)

    counter = CounterMeta("stompedRate", CounterCategory.GAUGE, "packets-per-second", "Stomped CRC Errored Packets rate")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "stompedRateLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "stompedRateMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "stompedRateMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "stompedRateAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "stompedRateSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "stompedRateTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "stompedRateThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "stompedRateTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "stompedRateTr"
    meta._counters.append(counter)

    counter = CounterMeta("stomped", CounterCategory.COUNTER, "packets", "Stomped CRC Errored Packets")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "stompedLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "stompedCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "stompedPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "stompedMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "stompedMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "stompedAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "stompedSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "stompedBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "stompedThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "stompedTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "stompedTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "stompedRate"
    meta._counters.append(counter)

    meta.moClassName = "eqptIngrCrcErrPkts1year"
    meta.rnFormat = "CDeqptIngrCrcErrPkts1year"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current Ingress CRC Error Packets stats in 1 year"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.pc.AggrIf")
    meta.parentClasses.add("cobra.model.l1.PhysIf")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.eqpt.IngrCrcErrPkts")

    meta.rnPrefixes = [
        ('CDeqptIngrCrcErrPkts1year', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "fcsAvg", "fcsAvg", 56347, PropCategory.IMPLICIT_AVG)
    prop.label = "FCS CRC Errored Packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsAvg", prop)

    prop = PropMeta("str", "fcsBase", "fcsBase", 56342, PropCategory.IMPLICIT_BASELINE)
    prop.label = "FCS CRC Errored Packets baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsBase", prop)

    prop = PropMeta("str", "fcsCum", "fcsCum", 56343, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "FCS CRC Errored Packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsCum", prop)

    prop = PropMeta("str", "fcsLast", "fcsLast", 56341, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "FCS CRC Errored Packets current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsLast", prop)

    prop = PropMeta("str", "fcsMax", "fcsMax", 56346, PropCategory.IMPLICIT_MAX)
    prop.label = "FCS CRC Errored Packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsMax", prop)

    prop = PropMeta("str", "fcsMin", "fcsMin", 56345, PropCategory.IMPLICIT_MIN)
    prop.label = "FCS CRC Errored Packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsMin", prop)

    prop = PropMeta("str", "fcsPer", "fcsPer", 56344, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "FCS CRC Errored Packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsPer", prop)

    prop = PropMeta("str", "fcsRate", "fcsRate", 56352, PropCategory.IMPLICIT_RATE)
    prop.label = "FCS CRC Errored Packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsRate", prop)

    prop = PropMeta("str", "fcsRateAvg", "fcsRateAvg", 56365, PropCategory.IMPLICIT_AVG)
    prop.label = "FCS CRC Errored Packets rate average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsRateAvg", prop)

    prop = PropMeta("str", "fcsRateLast", "fcsRateLast", 56362, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "FCS CRC Errored Packets rate current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsRateLast", prop)

    prop = PropMeta("str", "fcsRateMax", "fcsRateMax", 56364, PropCategory.IMPLICIT_MAX)
    prop.label = "FCS CRC Errored Packets rate maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsRateMax", prop)

    prop = PropMeta("str", "fcsRateMin", "fcsRateMin", 56363, PropCategory.IMPLICIT_MIN)
    prop.label = "FCS CRC Errored Packets rate minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsRateMin", prop)

    prop = PropMeta("str", "fcsRateSpct", "fcsRateSpct", 56366, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "FCS CRC Errored Packets rate suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsRateSpct", prop)

    prop = PropMeta("str", "fcsRateThr", "fcsRateThr", 56368, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "FCS CRC Errored Packets rate thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("fcsRateThr", prop)

    prop = PropMeta("str", "fcsRateTr", "fcsRateTr", 56370, PropCategory.IMPLICIT_TREND)
    prop.label = "FCS CRC Errored Packets rate trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsRateTr", prop)

    prop = PropMeta("str", "fcsRateTrBase", "fcsRateTrBase", 56369, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "FCS CRC Errored Packets rate trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsRateTrBase", prop)

    prop = PropMeta("str", "fcsRateTtl", "fcsRateTtl", 56367, PropCategory.IMPLICIT_TOTAL)
    prop.label = "FCS CRC Errored Packets rate total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsRateTtl", prop)

    prop = PropMeta("str", "fcsSpct", "fcsSpct", 56348, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "FCS CRC Errored Packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsSpct", prop)

    prop = PropMeta("str", "fcsThr", "fcsThr", 56349, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "FCS CRC Errored Packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("fcsThr", prop)

    prop = PropMeta("str", "fcsTr", "fcsTr", 56351, PropCategory.IMPLICIT_TREND)
    prop.label = "FCS CRC Errored Packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsTr", prop)

    prop = PropMeta("str", "fcsTrBase", "fcsTrBase", 56350, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "FCS CRC Errored Packets trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fcsTrBase", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "stompedAvg", "stompedAvg", 56383, PropCategory.IMPLICIT_AVG)
    prop.label = "Stomped CRC Errored Packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedAvg", prop)

    prop = PropMeta("str", "stompedBase", "stompedBase", 56378, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Stomped CRC Errored Packets baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedBase", prop)

    prop = PropMeta("str", "stompedCum", "stompedCum", 56379, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Stomped CRC Errored Packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedCum", prop)

    prop = PropMeta("str", "stompedLast", "stompedLast", 56377, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Stomped CRC Errored Packets current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedLast", prop)

    prop = PropMeta("str", "stompedMax", "stompedMax", 56382, PropCategory.IMPLICIT_MAX)
    prop.label = "Stomped CRC Errored Packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedMax", prop)

    prop = PropMeta("str", "stompedMin", "stompedMin", 56381, PropCategory.IMPLICIT_MIN)
    prop.label = "Stomped CRC Errored Packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedMin", prop)

    prop = PropMeta("str", "stompedPer", "stompedPer", 56380, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Stomped CRC Errored Packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedPer", prop)

    prop = PropMeta("str", "stompedRate", "stompedRate", 56388, PropCategory.IMPLICIT_RATE)
    prop.label = "Stomped CRC Errored Packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedRate", prop)

    prop = PropMeta("str", "stompedRateAvg", "stompedRateAvg", 56401, PropCategory.IMPLICIT_AVG)
    prop.label = "Stomped CRC Errored Packets rate average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedRateAvg", prop)

    prop = PropMeta("str", "stompedRateLast", "stompedRateLast", 56398, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Stomped CRC Errored Packets rate current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedRateLast", prop)

    prop = PropMeta("str", "stompedRateMax", "stompedRateMax", 56400, PropCategory.IMPLICIT_MAX)
    prop.label = "Stomped CRC Errored Packets rate maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedRateMax", prop)

    prop = PropMeta("str", "stompedRateMin", "stompedRateMin", 56399, PropCategory.IMPLICIT_MIN)
    prop.label = "Stomped CRC Errored Packets rate minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedRateMin", prop)

    prop = PropMeta("str", "stompedRateSpct", "stompedRateSpct", 56402, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Stomped CRC Errored Packets rate suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedRateSpct", prop)

    prop = PropMeta("str", "stompedRateThr", "stompedRateThr", 56404, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Stomped CRC Errored Packets rate thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("stompedRateThr", prop)

    prop = PropMeta("str", "stompedRateTr", "stompedRateTr", 56406, PropCategory.IMPLICIT_TREND)
    prop.label = "Stomped CRC Errored Packets rate trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedRateTr", prop)

    prop = PropMeta("str", "stompedRateTrBase", "stompedRateTrBase", 56405, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Stomped CRC Errored Packets rate trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedRateTrBase", prop)

    prop = PropMeta("str", "stompedRateTtl", "stompedRateTtl", 56403, PropCategory.IMPLICIT_TOTAL)
    prop.label = "Stomped CRC Errored Packets rate total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedRateTtl", prop)

    prop = PropMeta("str", "stompedSpct", "stompedSpct", 56384, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Stomped CRC Errored Packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedSpct", prop)

    prop = PropMeta("str", "stompedThr", "stompedThr", 56385, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Stomped CRC Errored Packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("stompedThr", prop)

    prop = PropMeta("str", "stompedTr", "stompedTr", 56387, PropCategory.IMPLICIT_TREND)
    prop.label = "Stomped CRC Errored Packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedTr", prop)

    prop = PropMeta("str", "stompedTrBase", "stompedTrBase", 56386, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Stomped CRC Errored Packets trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stompedTrBase", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("l1EthIfToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Macsectxpkts1qtr(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.eqpt.Macsectxpkts1qtr", "Macsec Tx Pkts")

    counter = CounterMeta("encryptedPacktesRate", CounterCategory.GAUGE, "packets-per-second", "Macsec Encrypted packets rate")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "encryptedPacktesRateLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "encryptedPacktesRateMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "encryptedPacktesRateMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "encryptedPacktesRateAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "encryptedPacktesRateSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "encryptedPacktesRateTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "encryptedPacktesRateThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "encryptedPacktesRateTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "encryptedPacktesRateTr"
    meta._counters.append(counter)

    counter = CounterMeta("encryptedPacktes", CounterCategory.COUNTER, "packets", "Macsec Encrypted packets")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "encryptedPacktesLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "encryptedPacktesCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "encryptedPacktesPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "encryptedPacktesMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "encryptedPacktesMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "encryptedPacktesAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "encryptedPacktesSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "encryptedPacktesBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "encryptedPacktesThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "encryptedPacktesTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "encryptedPacktesTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "encryptedPacktesRate"
    meta._counters.append(counter)

    counter = CounterMeta("protectedPacketsRate", CounterCategory.GAUGE, "packets-per-second", "Macsec Protected packets rate")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "protectedPacketsRateLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "protectedPacketsRateMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "protectedPacketsRateMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "protectedPacketsRateAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "protectedPacketsRateSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "protectedPacketsRateTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "protectedPacketsRateThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "protectedPacketsRateTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "protectedPacketsRateTr"
    meta._counters.append(counter)

    counter = CounterMeta("protectedPackets", CounterCategory.COUNTER, "packets", "Macsec Protected packets")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "protectedPacketsLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "protectedPacketsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "protectedPacketsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "protectedPacketsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "protectedPacketsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "protectedPacketsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "protectedPacketsSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "protectedPacketsBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "protectedPacketsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "protectedPacketsTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "protectedPacketsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "protectedPacketsRate"
    meta._counters.append(counter)

    meta.moClassName = "eqptMacsectxpkts1qtr"
    meta.rnFormat = "CDeqptMacsectxpkts1qtr"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current Macsec Tx Pkts stats in 1 quarter"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.pc.AggrIf")
    meta.parentClasses.add("cobra.model.l1.PhysIf")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.eqpt.Macsectxpkts")

    meta.rnPrefixes = [
        ('CDeqptMacsectxpkts1qtr', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "encryptedPacktesAvg", "encryptedPacktesAvg", 30999, PropCategory.IMPLICIT_AVG)
    prop.label = "Macsec Encrypted packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesAvg", prop)

    prop = PropMeta("str", "encryptedPacktesBase", "encryptedPacktesBase", 30994, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Macsec Encrypted packets baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesBase", prop)

    prop = PropMeta("str", "encryptedPacktesCum", "encryptedPacktesCum", 30995, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Macsec Encrypted packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesCum", prop)

    prop = PropMeta("str", "encryptedPacktesLast", "encryptedPacktesLast", 30993, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Macsec Encrypted packets current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesLast", prop)

    prop = PropMeta("str", "encryptedPacktesMax", "encryptedPacktesMax", 30998, PropCategory.IMPLICIT_MAX)
    prop.label = "Macsec Encrypted packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesMax", prop)

    prop = PropMeta("str", "encryptedPacktesMin", "encryptedPacktesMin", 30997, PropCategory.IMPLICIT_MIN)
    prop.label = "Macsec Encrypted packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesMin", prop)

    prop = PropMeta("str", "encryptedPacktesPer", "encryptedPacktesPer", 30996, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Macsec Encrypted packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesPer", prop)

    prop = PropMeta("str", "encryptedPacktesRate", "encryptedPacktesRate", 31004, PropCategory.IMPLICIT_RATE)
    prop.label = "Macsec Encrypted packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesRate", prop)

    prop = PropMeta("str", "encryptedPacktesRateAvg", "encryptedPacktesRateAvg", 31017, PropCategory.IMPLICIT_AVG)
    prop.label = "Macsec Encrypted packets rate average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesRateAvg", prop)

    prop = PropMeta("str", "encryptedPacktesRateLast", "encryptedPacktesRateLast", 31014, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Macsec Encrypted packets rate current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesRateLast", prop)

    prop = PropMeta("str", "encryptedPacktesRateMax", "encryptedPacktesRateMax", 31016, PropCategory.IMPLICIT_MAX)
    prop.label = "Macsec Encrypted packets rate maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesRateMax", prop)

    prop = PropMeta("str", "encryptedPacktesRateMin", "encryptedPacktesRateMin", 31015, PropCategory.IMPLICIT_MIN)
    prop.label = "Macsec Encrypted packets rate minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesRateMin", prop)

    prop = PropMeta("str", "encryptedPacktesRateSpct", "encryptedPacktesRateSpct", 31018, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Macsec Encrypted packets rate suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesRateSpct", prop)

    prop = PropMeta("str", "encryptedPacktesRateThr", "encryptedPacktesRateThr", 31020, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Macsec Encrypted packets rate thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("encryptedPacktesRateThr", prop)

    prop = PropMeta("str", "encryptedPacktesRateTr", "encryptedPacktesRateTr", 31022, PropCategory.IMPLICIT_TREND)
    prop.label = "Macsec Encrypted packets rate trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesRateTr", prop)

    prop = PropMeta("str", "encryptedPacktesRateTrBase", "encryptedPacktesRateTrBase", 31021, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Macsec Encrypted packets rate trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesRateTrBase", prop)

    prop = PropMeta("str", "encryptedPacktesRateTtl", "encryptedPacktesRateTtl", 31019, PropCategory.IMPLICIT_TOTAL)
    prop.label = "Macsec Encrypted packets rate total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesRateTtl", prop)

    prop = PropMeta("str", "encryptedPacktesSpct", "encryptedPacktesSpct", 31000, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Macsec Encrypted packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesSpct", prop)

    prop = PropMeta("str", "encryptedPacktesThr", "encryptedPacktesThr", 31001, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Macsec Encrypted packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("encryptedPacktesThr", prop)

    prop = PropMeta("str", "encryptedPacktesTr", "encryptedPacktesTr", 31003, PropCategory.IMPLICIT_TREND)
    prop.label = "Macsec Encrypted packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesTr", prop)

    prop = PropMeta("str", "encryptedPacktesTrBase", "encryptedPacktesTrBase", 31002, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Macsec Encrypted packets trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("encryptedPacktesTrBase", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "protectedPacketsAvg", "protectedPacketsAvg", 31035, PropCategory.IMPLICIT_AVG)
    prop.label = "Macsec Protected packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsAvg", prop)

    prop = PropMeta("str", "protectedPacketsBase", "protectedPacketsBase", 31030, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Macsec Protected packets baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsBase", prop)

    prop = PropMeta("str", "protectedPacketsCum", "protectedPacketsCum", 31031, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Macsec Protected packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsCum", prop)

    prop = PropMeta("str", "protectedPacketsLast", "protectedPacketsLast", 31029, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Macsec Protected packets current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsLast", prop)

    prop = PropMeta("str", "protectedPacketsMax", "protectedPacketsMax", 31034, PropCategory.IMPLICIT_MAX)
    prop.label = "Macsec Protected packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsMax", prop)

    prop = PropMeta("str", "protectedPacketsMin", "protectedPacketsMin", 31033, PropCategory.IMPLICIT_MIN)
    prop.label = "Macsec Protected packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsMin", prop)

    prop = PropMeta("str", "protectedPacketsPer", "protectedPacketsPer", 31032, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Macsec Protected packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsPer", prop)

    prop = PropMeta("str", "protectedPacketsRate", "protectedPacketsRate", 31040, PropCategory.IMPLICIT_RATE)
    prop.label = "Macsec Protected packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsRate", prop)

    prop = PropMeta("str", "protectedPacketsRateAvg", "protectedPacketsRateAvg", 31053, PropCategory.IMPLICIT_AVG)
    prop.label = "Macsec Protected packets rate average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsRateAvg", prop)

    prop = PropMeta("str", "protectedPacketsRateLast", "protectedPacketsRateLast", 31050, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Macsec Protected packets rate current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsRateLast", prop)

    prop = PropMeta("str", "protectedPacketsRateMax", "protectedPacketsRateMax", 31052, PropCategory.IMPLICIT_MAX)
    prop.label = "Macsec Protected packets rate maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsRateMax", prop)

    prop = PropMeta("str", "protectedPacketsRateMin", "protectedPacketsRateMin", 31051, PropCategory.IMPLICIT_MIN)
    prop.label = "Macsec Protected packets rate minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsRateMin", prop)

    prop = PropMeta("str", "protectedPacketsRateSpct", "protectedPacketsRateSpct", 31054, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Macsec Protected packets rate suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsRateSpct", prop)

    prop = PropMeta("str", "protectedPacketsRateThr", "protectedPacketsRateThr", 31056, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Macsec Protected packets rate thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("protectedPacketsRateThr", prop)

    prop = PropMeta("str", "protectedPacketsRateTr", "protectedPacketsRateTr", 31058, PropCategory.IMPLICIT_TREND)
    prop.label = "Macsec Protected packets rate trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsRateTr", prop)

    prop = PropMeta("str", "protectedPacketsRateTrBase", "protectedPacketsRateTrBase", 31057, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Macsec Protected packets rate trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsRateTrBase", prop)

    prop = PropMeta("str", "protectedPacketsRateTtl", "protectedPacketsRateTtl", 31055, PropCategory.IMPLICIT_TOTAL)
    prop.label = "Macsec Protected packets rate total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsRateTtl", prop)

    prop = PropMeta("str", "protectedPacketsSpct", "protectedPacketsSpct", 31036, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Macsec Protected packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsSpct", prop)

    prop = PropMeta("str", "protectedPacketsThr", "protectedPacketsThr", 31037, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Macsec Protected packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("protectedPacketsThr", prop)

    prop = PropMeta("str", "protectedPacketsTr", "protectedPacketsTr", 31039, PropCategory.IMPLICIT_TREND)
    prop.label = "Macsec Protected packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsTr", prop)

    prop = PropMeta("str", "protectedPacketsTrBase", "protectedPacketsTrBase", 31038, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Macsec Protected packets trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("protectedPacketsTrBase", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("l1EthIfToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

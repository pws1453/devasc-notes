# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class IndLed(Mo):
    """
    The locator LED for monitoring the component state.

    """

    meta = ClassMeta("cobra.model.eqpt.IndLed")

    meta.moClassName = "eqptIndLed"
    meta.rnFormat = "indled-%(id)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Indicator LED"
    meta.writeAccessMask = 0x80080000000001
    meta.readAccessMask = 0x80080000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.eqpt.SysC")
    meta.parentClasses.add("cobra.model.eqpt.Psu")
    meta.parentClasses.add("cobra.model.eqpt.SupC")
    meta.parentClasses.add("cobra.model.eqpt.FC")
    meta.parentClasses.add("cobra.model.eqpt.LeafP")
    meta.parentClasses.add("cobra.model.eqpt.LC")
    meta.parentClasses.add("cobra.model.eqpt.Ft")
    meta.parentClasses.add("cobra.model.eqpt.MgmtP")
    meta.parentClasses.add("cobra.model.eqpt.Ch")
    meta.parentClasses.add("cobra.model.eqpt.FabP")

    meta.superClasses.add("cobra.model.eqpt.Item")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.eqpt.Comp")
    meta.superClasses.add("cobra.model.eqpt.Led")

    meta.rnPrefixes = [
        ('indled-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cimcVersion", "cimcVersion", 56701, PropCategory.REGULAR)
    prop.label = "CIMC version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("cimcVersion", prop)

    prop = PropMeta("str", "color", "color", 3494, PropCategory.REGULAR)
    prop.label = "Color"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no-color"
    prop._addConstant("amber", "amber", 3)
    prop._addConstant("blue", "blue", 5)
    prop._addConstant("green", "green", 1)
    prop._addConstant("no-color", "no-color", 0)
    prop._addConstant("red", "red", 4)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("yellow", "yellow", 2)
    meta.props.add("color", prop)

    prop = PropMeta("str", "descr", "descr", 5597, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "id", "id", 3498, PropCategory.REGULAR)
    prop.label = "ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 6)]
    meta.props.add("id", prop)

    prop = PropMeta("str", "mfgTm", "mfgTm", 5596, PropCategory.REGULAR)
    prop.label = "Manufacturing Time"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "not-applicable"
    prop._addConstant("not-applicable", "n/a", 0)
    meta.props.add("mfgTm", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "model", "model", 5592, PropCategory.REGULAR)
    prop.label = "Model"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("model", prop)

    prop = PropMeta("str", "operSt", "operSt", 3495, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("blinking", "blinking", 3)
    prop._addConstant("fail", "fail", 4)
    prop._addConstant("off", "off", 1)
    prop._addConstant("on", "on", 2)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "rev", "rev", 5593, PropCategory.REGULAR)
    prop.label = "Revision"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    prop.defaultValue = "0"
    prop.defaultValueStr = "0"
    meta.props.add("rev", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "ser", "ser", 5594, PropCategory.REGULAR)
    prop.label = "Serial Number"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("ser", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "type", "type", 3497, PropCategory.REGULAR)
    prop.label = "Type"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("active", "active", 3)
    prop._addConstant("battery", "battery", 5)
    prop._addConstant("fan-status", "fan-status", 9)
    prop._addConstant("fc-status", "fabric-status", 8)
    prop._addConstant("lc-status", "lc-status", 6)
    prop._addConstant("power", "power", 4)
    prop._addConstant("pwr-status", "power-status", 10)
    prop._addConstant("status", "status", 1)
    prop._addConstant("sup-status", "sup-status", 7)
    prop._addConstant("system", "system", 2)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("type", prop)

    prop = PropMeta("str", "vendor", "vendor", 5595, PropCategory.REGULAR)
    prop.label = "Vendor"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    prop.defaultValue = "Cisco Systems, Inc"
    prop.defaultValueStr = "Cisco Systems, Inc"
    meta.props.add("vendor", prop)

    meta.namingProps.append(getattr(meta.props, "id"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("EqptPortToEPg", "EPG", "cobra.model.fv.EPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("EqptSlotToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, id, markDirty=True, **creationProps):
        namingVals = [id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class EgrBytes1mo(Mo):
    """
    A class that represents the most current statistics for  Egress  Bytes in a 1 month sampling interval.  This class updates every day.

    """

    meta = StatsClassMeta("cobra.model.eqpt.EgrBytes1mo", "Egress Bytes")

    counter = CounterMeta("flood", CounterCategory.COUNTER, "bytes", "Egress Flood Bytes")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "floodLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "floodCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "floodPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "floodMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "floodMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "floodAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "floodSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "floodBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "floodThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "floodTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "floodTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "floodRate"
    meta._counters.append(counter)

    counter = CounterMeta("multicastRate", CounterCategory.GAUGE, "bytes-per-second", "Egress Multicast Bytes rate")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "multicastRateLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "multicastRateMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "multicastRateMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "multicastRateAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "multicastRateSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "multicastRateTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "multicastRateThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "multicastRateTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "multicastRateTr"
    meta._counters.append(counter)

    counter = CounterMeta("multicast", CounterCategory.COUNTER, "bytes", "Egress Multicast Bytes")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "multicastLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "multicastCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "multicastPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "multicastMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "multicastMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "multicastAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "multicastSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "multicastBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "multicastThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "multicastTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "multicastTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "multicastRate"
    meta._counters.append(counter)

    counter = CounterMeta("unicastRate", CounterCategory.GAUGE, "bytes-per-second", "Egress Unicast Bytes rate")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "unicastRateLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "unicastRateMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "unicastRateMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "unicastRateAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "unicastRateSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "unicastRateTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "unicastRateThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "unicastRateTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "unicastRateTr"
    meta._counters.append(counter)

    counter = CounterMeta("unicast", CounterCategory.COUNTER, "bytes", "Egress Unicast Bytes")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "unicastLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "unicastCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "unicastPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "unicastMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "unicastMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "unicastAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "unicastSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "unicastBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "unicastThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "unicastTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "unicastTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "unicastRate"
    meta._counters.append(counter)

    meta.moClassName = "eqptEgrBytes1mo"
    meta.rnFormat = "CDeqptEgrBytes1mo"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current Egress Bytes stats in 1 month"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.mgmt.MgmtIf")
    meta.parentClasses.add("cobra.model.eqpt.CpuP")
    meta.parentClasses.add("cobra.model.pc.AggrIf")
    meta.parentClasses.add("cobra.model.l1.PhysIf")

    meta.superClasses.add("cobra.model.eqpt.EgrBytes")
    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.stats.Item")

    meta.rnPrefixes = [
        ('CDeqptEgrBytes1mo', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "floodAvg", "floodAvg", 7844, PropCategory.IMPLICIT_AVG)
    prop.label = "Egress Flood Bytes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodAvg", prop)

    prop = PropMeta("str", "floodBase", "floodBase", 7839, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Egress Flood Bytes baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodBase", prop)

    prop = PropMeta("str", "floodCum", "floodCum", 7840, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Egress Flood Bytes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodCum", prop)

    prop = PropMeta("str", "floodLast", "floodLast", 7838, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Egress Flood Bytes current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodLast", prop)

    prop = PropMeta("str", "floodMax", "floodMax", 7843, PropCategory.IMPLICIT_MAX)
    prop.label = "Egress Flood Bytes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodMax", prop)

    prop = PropMeta("str", "floodMin", "floodMin", 7842, PropCategory.IMPLICIT_MIN)
    prop.label = "Egress Flood Bytes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodMin", prop)

    prop = PropMeta("str", "floodPer", "floodPer", 7841, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Egress Flood Bytes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodPer", prop)

    prop = PropMeta("str", "floodRate", "floodRate", 7849, PropCategory.IMPLICIT_RATE)
    prop.label = "Egress Flood Bytes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodRate", prop)

    prop = PropMeta("str", "floodSpct", "floodSpct", 7845, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Egress Flood Bytes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodSpct", prop)

    prop = PropMeta("str", "floodThr", "floodThr", 7846, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Egress Flood Bytes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("floodThr", prop)

    prop = PropMeta("str", "floodTr", "floodTr", 7848, PropCategory.IMPLICIT_TREND)
    prop.label = "Egress Flood Bytes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodTr", prop)

    prop = PropMeta("str", "floodTrBase", "floodTrBase", 7847, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Egress Flood Bytes trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("floodTrBase", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "multicastAvg", "multicastAvg", 7871, PropCategory.IMPLICIT_AVG)
    prop.label = "Egress Multicast Bytes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastAvg", prop)

    prop = PropMeta("str", "multicastBase", "multicastBase", 7866, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Egress Multicast Bytes baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastBase", prop)

    prop = PropMeta("str", "multicastCum", "multicastCum", 7867, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Egress Multicast Bytes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastCum", prop)

    prop = PropMeta("str", "multicastLast", "multicastLast", 7865, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Egress Multicast Bytes current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastLast", prop)

    prop = PropMeta("str", "multicastMax", "multicastMax", 7870, PropCategory.IMPLICIT_MAX)
    prop.label = "Egress Multicast Bytes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastMax", prop)

    prop = PropMeta("str", "multicastMin", "multicastMin", 7869, PropCategory.IMPLICIT_MIN)
    prop.label = "Egress Multicast Bytes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastMin", prop)

    prop = PropMeta("str", "multicastPer", "multicastPer", 7868, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Egress Multicast Bytes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastPer", prop)

    prop = PropMeta("str", "multicastRate", "multicastRate", 7876, PropCategory.IMPLICIT_RATE)
    prop.label = "Egress Multicast Bytes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastRate", prop)

    prop = PropMeta("str", "multicastRateAvg", "multicastRateAvg", 7895, PropCategory.IMPLICIT_AVG)
    prop.label = "Egress Multicast Bytes rate average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastRateAvg", prop)

    prop = PropMeta("str", "multicastRateLast", "multicastRateLast", 7892, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Egress Multicast Bytes rate current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastRateLast", prop)

    prop = PropMeta("str", "multicastRateMax", "multicastRateMax", 7894, PropCategory.IMPLICIT_MAX)
    prop.label = "Egress Multicast Bytes rate maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastRateMax", prop)

    prop = PropMeta("str", "multicastRateMin", "multicastRateMin", 7893, PropCategory.IMPLICIT_MIN)
    prop.label = "Egress Multicast Bytes rate minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastRateMin", prop)

    prop = PropMeta("str", "multicastRateSpct", "multicastRateSpct", 7896, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Egress Multicast Bytes rate suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastRateSpct", prop)

    prop = PropMeta("str", "multicastRateThr", "multicastRateThr", 7898, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Egress Multicast Bytes rate thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("multicastRateThr", prop)

    prop = PropMeta("str", "multicastRateTr", "multicastRateTr", 7900, PropCategory.IMPLICIT_TREND)
    prop.label = "Egress Multicast Bytes rate trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastRateTr", prop)

    prop = PropMeta("str", "multicastRateTrBase", "multicastRateTrBase", 7899, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Egress Multicast Bytes rate trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastRateTrBase", prop)

    prop = PropMeta("str", "multicastRateTtl", "multicastRateTtl", 7897, PropCategory.IMPLICIT_TOTAL)
    prop.label = "Egress Multicast Bytes rate total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastRateTtl", prop)

    prop = PropMeta("str", "multicastSpct", "multicastSpct", 7872, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Egress Multicast Bytes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastSpct", prop)

    prop = PropMeta("str", "multicastThr", "multicastThr", 7873, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Egress Multicast Bytes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("multicastThr", prop)

    prop = PropMeta("str", "multicastTr", "multicastTr", 7875, PropCategory.IMPLICIT_TREND)
    prop.label = "Egress Multicast Bytes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastTr", prop)

    prop = PropMeta("str", "multicastTrBase", "multicastTrBase", 7874, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Egress Multicast Bytes trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("multicastTrBase", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "unicastAvg", "unicastAvg", 7919, PropCategory.IMPLICIT_AVG)
    prop.label = "Egress Unicast Bytes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastAvg", prop)

    prop = PropMeta("str", "unicastBase", "unicastBase", 7914, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Egress Unicast Bytes baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastBase", prop)

    prop = PropMeta("str", "unicastCum", "unicastCum", 7915, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Egress Unicast Bytes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastCum", prop)

    prop = PropMeta("str", "unicastLast", "unicastLast", 7913, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Egress Unicast Bytes current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastLast", prop)

    prop = PropMeta("str", "unicastMax", "unicastMax", 7918, PropCategory.IMPLICIT_MAX)
    prop.label = "Egress Unicast Bytes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastMax", prop)

    prop = PropMeta("str", "unicastMin", "unicastMin", 7917, PropCategory.IMPLICIT_MIN)
    prop.label = "Egress Unicast Bytes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastMin", prop)

    prop = PropMeta("str", "unicastPer", "unicastPer", 7916, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Egress Unicast Bytes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastPer", prop)

    prop = PropMeta("str", "unicastRate", "unicastRate", 7924, PropCategory.IMPLICIT_RATE)
    prop.label = "Egress Unicast Bytes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastRate", prop)

    prop = PropMeta("str", "unicastRateAvg", "unicastRateAvg", 7943, PropCategory.IMPLICIT_AVG)
    prop.label = "Egress Unicast Bytes rate average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastRateAvg", prop)

    prop = PropMeta("str", "unicastRateLast", "unicastRateLast", 7940, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Egress Unicast Bytes rate current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastRateLast", prop)

    prop = PropMeta("str", "unicastRateMax", "unicastRateMax", 7942, PropCategory.IMPLICIT_MAX)
    prop.label = "Egress Unicast Bytes rate maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastRateMax", prop)

    prop = PropMeta("str", "unicastRateMin", "unicastRateMin", 7941, PropCategory.IMPLICIT_MIN)
    prop.label = "Egress Unicast Bytes rate minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastRateMin", prop)

    prop = PropMeta("str", "unicastRateSpct", "unicastRateSpct", 7944, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Egress Unicast Bytes rate suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastRateSpct", prop)

    prop = PropMeta("str", "unicastRateThr", "unicastRateThr", 7946, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Egress Unicast Bytes rate thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("unicastRateThr", prop)

    prop = PropMeta("str", "unicastRateTr", "unicastRateTr", 7948, PropCategory.IMPLICIT_TREND)
    prop.label = "Egress Unicast Bytes rate trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastRateTr", prop)

    prop = PropMeta("str", "unicastRateTrBase", "unicastRateTrBase", 7947, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Egress Unicast Bytes rate trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastRateTrBase", prop)

    prop = PropMeta("str", "unicastRateTtl", "unicastRateTtl", 7945, PropCategory.IMPLICIT_TOTAL)
    prop.label = "Egress Unicast Bytes rate total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastRateTtl", prop)

    prop = PropMeta("str", "unicastSpct", "unicastSpct", 7920, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Egress Unicast Bytes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastSpct", prop)

    prop = PropMeta("str", "unicastThr", "unicastThr", 7921, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Egress Unicast Bytes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("unicastThr", prop)

    prop = PropMeta("str", "unicastTr", "unicastTr", 7923, PropCategory.IMPLICIT_TREND)
    prop.label = "Egress Unicast Bytes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastTr", prop)

    prop = PropMeta("str", "unicastTrBase", "unicastTrBase", 7922, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Egress Unicast Bytes trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("unicastTrBase", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("l1EthIfToEPg", "EPG", "cobra.model.fv.EPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("EqptPortToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class PsgP(Mo):
    """
    The power supply group policy.

    """

    meta = ClassMeta("cobra.model.eqpt.PsgP")

    meta.moClassName = "eqptPsgP"
    meta.rnFormat = "psgp"
    meta.category = MoCategory.REGULAR
    meta.label = "Power Supply Group Policy"
    meta.writeAccessMask = 0x80080000000001
    meta.readAccessMask = 0x80080000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.eqpt.RsPsuInstPolCons")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.eqpt.RsPsuInstPolCons", "rspsuInstPolCons"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.eqpt.Entity")

    meta.superClasses.add("cobra.model.pol.Instr")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")

    meta.rnPrefixes = [
        ('psgp', False),
    ]

    prop = PropMeta("str", "adminRdnM", "adminRdnM", 3299, PropCategory.REGULAR)
    prop.label = "Admin Redundancy Mode"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 3
    prop.defaultValueStr = "comb"
    prop._addConstant("comb", "combined", 3)
    prop._addConstant("insrc-rdn", "input-source-redundancy", 6)
    prop._addConstant("n-rdn", "non-redundant", 4)
    prop._addConstant("not-supp", "not-supported", 1)
    prop._addConstant("ps-rdn", "n+1-redundancy", 5)
    prop._addConstant("rdn", "n+n-redundancy", 2)
    prop._addConstant("sinin-rdn", "single-input-redundancy", 7)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("adminRdnM", prop)

    prop = PropMeta("str", "alPwr", "alPwr", 3304, PropCategory.REGULAR)
    prop.label = "Allocated Power"
    prop.isOper = True
    meta.props.add("alPwr", prop)

    prop = PropMeta("str", "avPwr", "avPwr", 3305, PropCategory.REGULAR)
    prop.label = "Available Power"
    prop.isOper = True
    meta.props.add("avPwr", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5581, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "flRdnCap", "flRdnCap", 3309, PropCategory.REGULAR)
    prop.label = "Full Redundant Capacity"
    prop.isOper = True
    meta.props.add("flRdnCap", prop)

    prop = PropMeta("str", "grdRdnCap", "grdRdnCap", 3308, PropCategory.REGULAR)
    prop.label = "Grid Redundant Capacity"
    prop.isOper = True
    meta.props.add("grdRdnCap", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14505, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "nRdnCap", "nRdnCap", 3306, PropCategory.REGULAR)
    prop.label = "N-Redundant Capacity"
    prop.isOper = True
    meta.props.add("nRdnCap", prop)

    prop = PropMeta("str", "nRdnRsn", "nRdnRsn", 3301, PropCategory.REGULAR)
    prop.label = "Non Redundancy Reason"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "na"
    prop._addConstant("error", "power-supply-error", 5)
    prop._addConstant("mismatch", "mis-matched-power-supply", 4)
    prop._addConstant("na", "not-applicable", 1)
    prop._addConstant("single", "single-power-supply", 3)
    prop._addConstant("unknown", "unknown", 2)
    meta.props.add("nRdnRsn", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "operRdnM", "operRdnM", 3300, PropCategory.REGULAR)
    prop.label = "Operational Redundancy Mode"
    prop.isOper = True
    prop.defaultValue = 3
    prop.defaultValueStr = "comb"
    prop._addConstant("comb", "combined", 3)
    prop._addConstant("insrc-rdn", "input-source-redundancy", 6)
    prop._addConstant("n-rdn", "non-redundant", 4)
    prop._addConstant("not-supp", "not-supported", 1)
    prop._addConstant("ps-rdn", "n+1-redundancy", 5)
    prop._addConstant("rdn", "n+n-redundancy", 2)
    prop._addConstant("sinin-rdn", "single-input-redundancy", 7)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("operRdnM", prop)

    prop = PropMeta("str", "psRdnCap", "psRdnCap", 3307, PropCategory.REGULAR)
    prop.label = "N+1 Redundant Capacity"
    prop.isOper = True
    meta.props.add("psRdnCap", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rsdPwr", "rsdPwr", 3303, PropCategory.REGULAR)
    prop.label = "Reserved Power"
    prop.isOper = True
    meta.props.add("rsdPwr", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tc", "tc", 3302, PropCategory.REGULAR)
    prop.label = "Total Capacity"
    prop.isOper = True
    meta.props.add("tc", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

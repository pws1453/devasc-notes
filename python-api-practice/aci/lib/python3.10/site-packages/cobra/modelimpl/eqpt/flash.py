# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Flash(Mo):
    """
    A flash memory unit.

    """

    meta = ClassMeta("cobra.model.eqpt.Flash")

    meta.moClassName = "eqptFlash"
    meta.rnFormat = "flash"
    meta.category = MoCategory.REGULAR
    meta.label = "Flash"
    meta.writeAccessMask = 0x80080000000001
    meta.readAccessMask = 0x80080000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.eqpt.SysC")
    meta.parentClasses.add("cobra.model.eqpt.FC")
    meta.parentClasses.add("cobra.model.eqpt.SupC")
    meta.parentClasses.add("cobra.model.eqpt.Board")
    meta.parentClasses.add("cobra.model.eqpt.ExtChCard")
    meta.parentClasses.add("cobra.model.eqpt.LC")
    meta.parentClasses.add("cobra.model.eqpt.Nic")

    meta.superClasses.add("cobra.model.eqpt.Item")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.eqpt.Mem")
    meta.superClasses.add("cobra.model.eqpt.Comp")

    meta.rnPrefixes = [
        ('flash', False),
    ]

    prop = PropMeta("str", "acc", "acc", 3340, PropCategory.REGULAR)
    prop.label = "Access"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("read-only", "read-only", 0)
    prop._addConstant("read-write", "write-only", 1)
    meta.props.add("acc", prop)

    prop = PropMeta("str", "cap", "cap", 3339, PropCategory.REGULAR)
    prop.label = "Capacity"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("cap", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cimcVersion", "cimcVersion", 56701, PropCategory.REGULAR)
    prop.label = "CIMC version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("cimcVersion", prop)

    prop = PropMeta("str", "deltape", "deltape", 53065, PropCategory.REGULAR)
    prop.label = "Delta Program Erase Cycles on the Flash"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("deltape", prop)

    prop = PropMeta("str", "descr", "descr", 5597, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "gbb", "gbb", 39361, PropCategory.REGULAR)
    prop.label = "Grown Bad Block count on the Flash"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("gbb", prop)

    prop = PropMeta("str", "id", "id", 3505, PropCategory.REGULAR)
    prop.label = "ID"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "lba", "lba", 39364, PropCategory.REGULAR)
    prop.label = "Total number of LBAs written"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lba", prop)

    prop = PropMeta("str", "lifetime", "lifetime", 52026, PropCategory.REGULAR)
    prop.label = "Overall lifetime of the flash in Percentage"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lifetime", prop)

    prop = PropMeta("str", "majorAlarm", "majorAlarm", 39366, PropCategory.REGULAR)
    prop.label = "Major Alarm"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("majorAlarm", prop)

    prop = PropMeta("str", "mfgTm", "mfgTm", 5596, PropCategory.REGULAR)
    prop.label = "Manufacturing Time"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "not-applicable"
    prop._addConstant("not-applicable", "n/a", 0)
    meta.props.add("mfgTm", prop)

    prop = PropMeta("str", "minorAlarm", "minorAlarm", 39365, PropCategory.REGULAR)
    prop.label = "Minor Alarm"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("minorAlarm", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "model", "model", 5592, PropCategory.REGULAR)
    prop.label = "Model"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("model", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 39367, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "operSt", "operSt", 3341, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("absent", "absent", 3)
    prop._addConstant("fail", "fail", 2)
    prop._addConstant("mismatch", "mismatch", 5)
    prop._addConstant("ok", "ok", 1)
    prop._addConstant("shut", "shut", 4)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "peCycles", "peCycles", 39360, PropCategory.REGULAR)
    prop.label = "Program Erase Cycles on the Flash"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("peCycles", prop)

    prop = PropMeta("str", "readErr", "readErr", 53064, PropCategory.REGULAR)
    prop.label = "Grown Read Error Block count on the Flash"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("readErr", prop)

    prop = PropMeta("str", "rev", "rev", 5593, PropCategory.REGULAR)
    prop.label = "Revision"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    prop.defaultValue = "0"
    prop.defaultValueStr = "0"
    meta.props.add("rev", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "ser", "ser", 5594, PropCategory.REGULAR)
    prop.label = "Serial Number"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("ser", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tbw", "tbw", 39362, PropCategory.REGULAR)
    prop.label = "Tera Bytes written on the Flash"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("tbw", prop)

    prop = PropMeta("str", "type", "type", 3343, PropCategory.REGULAR)
    prop.label = "Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "flash"
    prop._addConstant("dimm", "dimm", 1)
    prop._addConstant("flash", "flash", 2)
    prop._addConstant("sprom", "sprom", 3)
    prop._addConstant("unk", "unknown", 0)
    meta.props.add("type", prop)

    prop = PropMeta("str", "vendor", "vendor", 5595, PropCategory.REGULAR)
    prop.label = "Vendor"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    prop.defaultValue = "Cisco Systems, Inc"
    prop.defaultValueStr = "Cisco Systems, Inc"
    meta.props.add("vendor", prop)

    prop = PropMeta("str", "warning", "warning", 53066, PropCategory.REGULAR)
    prop.label = "Warning"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("warning", prop)

    prop = PropMeta("str", "wlc", "wlc", 39363, PropCategory.REGULAR)
    prop.label = "Wear Leveling Count"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("wlc", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("EqptSlotToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

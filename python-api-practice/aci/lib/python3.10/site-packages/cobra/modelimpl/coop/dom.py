# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Dom(Mo):
    """
    Per COOP domain (vrf) information.

    """

    meta = ClassMeta("cobra.model.coop.Dom")

    meta.moClassName = "coopDom"
    meta.rnFormat = "dom-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "COOP Domain"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.coop.TepDb")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.coop.RepP")
    meta.childClasses.add("cobra.model.coop.CitizenAdj")
    meta.childClasses.add("cobra.model.coop.ConCitizenAdj")
    meta.childClasses.add("cobra.model.coop.OracleAdj")
    meta.childClasses.add("cobra.model.coop.RibLeakP")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.coop.DomAf")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.coop.ShardSt")
    meta.childClasses.add("cobra.model.coop.RtBD2Dom")
    meta.childClasses.add("cobra.model.coop.Db")

    meta.childNamesAndRnPrefix.append(("cobra.model.coop.RtBD2Dom", "rtBD2Dom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.CitizenAdj", "citizen-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.OracleAdj", "oracle-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.RibLeakP", "ribleak"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.ConCitizenAdj", "concz-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.TepDb", "dbtep"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.RepP", "repp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.ShardSt", "shard"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.DomAf", "af-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.Db", "db-"))

    meta.parentClasses.add("cobra.model.coop.Inst")

    meta.superClasses.add("cobra.model.nw.ProtDom")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.CpDom")
    meta.superClasses.add("cobra.model.nw.GEp")
    meta.superClasses.add("cobra.model.l3.ProtDom")

    meta.rnPrefixes = [
        ('dom-', True),
    ]

    prop = PropMeta("str", "addr", "addr", 2463, PropCategory.REGULAR)
    prop.label = "Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("addr", prop)

    prop = PropMeta("str", "assertFuncName", "assertFuncName", 62759, PropCategory.REGULAR)
    prop.label = "Coop Assert Function Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("assertFuncName", prop)

    prop = PropMeta("str", "assertHit", "assertHit", 62740, PropCategory.REGULAR)
    prop.label = "Coop Assert Hit status"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", 0)
    prop._addConstant("yes", "yes", 1)
    meta.props.add("assertHit", prop)

    prop = PropMeta("str", "assertLineNo", "assertLineNo", 62758, PropCategory.REGULAR)
    prop.label = "Coop Assert Line No"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("assertLineNo", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "councilMinMaxVersion", "councilMinMaxVersion", 18413, PropCategory.REGULAR)
    prop.label = "Lowest of the max version supported by oracles in the council."
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("v1", "v1", 1)
    prop._addConstant("v2", "v2", 2)
    meta.props.add("councilMinMaxVersion", prop)

    prop = PropMeta("str", "curVersion", "curVersion", 18412, PropCategory.REGULAR)
    prop.label = "Current Version Supported"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("v1", "v1", 1)
    prop._addConstant("v2", "v2", 2)
    meta.props.add("curVersion", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "epDamp", "epDamp", 55246, PropCategory.REGULAR)
    prop.label = "EP Dampening"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 0)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("epDamp", prop)

    prop = PropMeta("str", "flags", "flags", 43446, PropCategory.REGULAR)
    prop.label = "Dom Flags"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("host-route", "host-route", 1)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "haveDampenedEPs", "haveDampenedEPs", 56060, PropCategory.REGULAR)
    prop.label = "Current Dampened EPs"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", 0)
    prop._addConstant("yes", "yes", 1)
    meta.props.add("haveDampenedEPs", prop)

    prop = PropMeta("str", "lastLowerTs", "lastLowerTs", 18414, PropCategory.REGULAR)
    prop.label = "Last lower max supported version receive time"
    prop.isOper = True
    meta.props.add("lastLowerTs", prop)

    prop = PropMeta("str", "lastLowerVersionAddr", "lastLowerVersionAddr", 18415, PropCategory.REGULAR)
    prop.label = "Last citizen with lower max supported version"
    prop.isOper = True
    meta.props.add("lastLowerVersionAddr", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "maxVersion", "maxVersion", 18411, PropCategory.REGULAR)
    prop.label = "Maximum Version Supported"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("v1", "v1", 1)
    prop._addConstant("v2", "v2", 2)
    meta.props.add("maxVersion", prop)

    prop = PropMeta("str", "minVersion", "minVersion", 18410, PropCategory.REGULAR)
    prop.label = "Minimum Version Supported"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("v1", "v1", 1)
    prop._addConstant("v2", "v2", 2)
    meta.props.add("minVersion", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14445, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 5996, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "noOfDampenedEPs", "noOfDampenedEPs", 56330, PropCategory.REGULAR)
    prop.label = "No of Dampened EPs"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("noOfDampenedEPs", prop)

    prop = PropMeta("str", "operSt", "operSt", 2464, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "down"
    prop._addConstant("down", "down", 0)
    prop._addConstant("init", "initializing", 1)
    prop._addConstant("up", "up", 2)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 2465, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("admin-down", "admin-down", 6)
    prop._addConstant("config-unresolved", "configuration-not-resolved", 1)
    prop._addConstant("council-pending", "council-pending", 4)
    prop._addConstant("inconsistent-config", "inconsistent-configuration", 5)
    prop._addConstant("infra-dom-down", "infra-domain-down", 3)
    prop._addConstant("time-not-synced", "time-not-synced", 2)
    prop._addConstant("unspecified", "unspecified", 0)
    prop._addConstant("up", "up", 7)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "routeTag", "routeTag", 47356, PropCategory.REGULAR)
    prop.label = "Route Tag for Host Routes"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("routeTag", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "vnid", "vnid", 43445, PropCategory.REGULAR)
    prop.label = "VNID"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 16777215)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("vnid", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

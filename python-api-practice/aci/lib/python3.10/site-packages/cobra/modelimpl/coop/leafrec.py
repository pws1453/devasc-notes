# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class LeafRec(Mo):
    """
    The COOP leaf records.

    """

    meta = ClassMeta("cobra.model.coop.LeafRec")

    meta.moClassName = "coopLeafRec"
    meta.rnFormat = "leaf-%(pubId)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Leaf Record"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8408420042001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.coop.RtDTEp2Leaf")
    meta.childClasses.add("cobra.model.coop.RtCtx2Leaf")
    meta.childClasses.add("cobra.model.coop.RtMrtr2Leaf")
    meta.childClasses.add("cobra.model.coop.RtFabMcgrp2Leaf")
    meta.childClasses.add("cobra.model.coop.RtMcgrp2Leaf")

    meta.childNamesAndRnPrefix.append(("cobra.model.coop.RtFabMcgrp2Leaf", "rtfabMcgrp2Leaf-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.RtMcgrp2Leaf", "rtmcgrp2Leaf-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.RtDTEp2Leaf", "rtDTEp2Leaf-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.RtMrtr2Leaf", "rtmrtr2Leaf-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.RtCtx2Leaf", "rtctx2Leaf-"))

    meta.parentClasses.add("cobra.model.coop.Db")

    meta.superClasses.add("cobra.model.nw.DbRec")
    meta.superClasses.add("cobra.model.l3.DbRec")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.coop.Rec")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.GEp")

    meta.rnPrefixes = [
        ('leaf-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 16437, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "pubId", "pubId", 2471, PropCategory.REGULAR)
    prop.label = "Publisher ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("pubId", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "pubId"))

    def __init__(self, parentMoOrDn, pubId, markDirty=True, **creationProps):
        namingVals = [pubId]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class RepP(Mo):
    """
    All the repository policies information.

    """

    meta = ClassMeta("cobra.model.coop.RepP")

    meta.moClassName = "coopRepP"
    meta.rnFormat = "repp-%(type)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Repository Policy"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.coop.Ep")
    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.coop.Ep", "ep-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.coop.Dom")

    meta.superClasses.add("cobra.model.pol.Instr")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")

    meta.rnPrefixes = [
        ('repp-', True),
    ]

    prop = PropMeta("str", "adminSt", "adminSt", 2499, PropCategory.REGULAR)
    prop.label = "Administrative State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dampAction", "dampAction", 2502, PropCategory.REGULAR)
    prop.label = "Dampening Action"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "freeze"
    prop._addConstant("freeze", "freeze", 1)
    prop._addConstant("freezeOper", "freeze-operational", 3)
    prop._addConstant("withdraw", "withdraw", 2)
    meta.props.add("dampAction", prop)

    prop = PropMeta("str", "dampAdminSt", "dampAdminSt", 2501, PropCategory.REGULAR)
    prop.label = "Dampening Administrative State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("dampAdminSt", prop)

    prop = PropMeta("str", "dampHalfLife", "dampHalfLife", 2506, PropCategory.REGULAR)
    prop.label = "Dampening Half Life"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 65535)]
    prop.defaultValue = 10
    prop.defaultValueStr = "10"
    meta.props.add("dampHalfLife", prop)

    prop = PropMeta("str", "dampReuseThresh", "dampReuseThresh", 2505, PropCategory.REGULAR)
    prop.label = "Dampening Reuse Threshold"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(100, 65535)]
    prop.defaultValue = 2500
    prop.defaultValueStr = "2500"
    meta.props.add("dampReuseThresh", prop)

    prop = PropMeta("str", "dampSatThresh", "dampSatThresh", 2507, PropCategory.REGULAR)
    prop.label = "Dampening Saturation Threshold"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(100, 65535)]
    prop.defaultValue = 10000
    prop.defaultValueStr = "10000"
    meta.props.add("dampSatThresh", prop)

    prop = PropMeta("str", "dampThresh", "dampThresh", 2504, PropCategory.REGULAR)
    prop.label = "Dampening Threshold"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(100, 65535)]
    prop.defaultValue = 4000
    prop.defaultValueStr = "4000"
    meta.props.add("dampThresh", prop)

    prop = PropMeta("str", "dampenPenalty", "dampenPenalty", 2503, PropCategory.REGULAR)
    prop.label = "Dampening Penalty"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(100, 65535)]
    prop.defaultValue = 1000
    prop.defaultValueStr = "1000"
    meta.props.add("dampenPenalty", prop)

    prop = PropMeta("str", "descr", "descr", 5581, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "loadFactor", "loadFactor", 2508, PropCategory.REGULAR)
    prop.label = "Load Factor"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 65535)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("loadFactor", prop)

    prop = PropMeta("str", "maxRepSz", "maxRepSz", 2509, PropCategory.REGULAR)
    prop.label = "Maximum Repository Size"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 4294967295)]
    prop.defaultValue = 1000000
    prop.defaultValueStr = "1000000"
    meta.props.add("maxRepSz", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 15782, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "refreshIntvl", "refreshIntvl", 2500, PropCategory.REGULAR)
    prop.label = "Refresh Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 715827882)]
    prop.defaultValue = 3600
    prop.defaultValueStr = "3600"
    meta.props.add("refreshIntvl", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "synthGen", "synthGen", 2510, PropCategory.REGULAR)
    prop.label = "Synthetic Generator ID"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "xxx"
    prop._addConstant("xxx", "xxx", 1)
    meta.props.add("synthGen", prop)

    prop = PropMeta("str", "type", "type", 2498, PropCategory.REGULAR)
    prop.label = "Type"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.defaultValue = 1
    prop.defaultValueStr = "ep"
    prop._addConstant("anycast", "anycast-repository", 7)
    prop._addConstant("ctx", "context-repository", 11)
    prop._addConstant("ep", "endpoint-reachability-repository", 1)
    prop._addConstant("extrtr", "external-router-repository", 8)
    prop._addConstant("fmgrpmbr", "fabric-multicast-group-repository", 12)
    prop._addConstant("leaf", "leaf-repository", 3)
    prop._addConstant("mgrpmbr", "multicast-group-membership-repository", 4)
    prop._addConstant("mrouter", "multicast-router-repository", 5)
    prop._addConstant("oracle", "oracle-repository", 2)
    prop._addConstant("svcnode", "service-node-repository", 6)
    prop._addConstant("tep", "discovered-tunnel-endpoint-repository", 13)
    prop._addConstant("vpc", "vpc-repository", 9)
    prop._addConstant("vtep", "vtep-repository", 10)
    prop._addConstant("wanrt", "wan-routes-repository", 14)
    meta.props.add("type", prop)

    meta.namingProps.append(getattr(meta.props, "type"))

    def __init__(self, parentMoOrDn, type, markDirty=True, **creationProps):
        namingVals = [type]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class EpRec(Mo):
    """
    The endpoint records.

    """

    meta = ClassMeta("cobra.model.coop.EpRec")

    meta.moClassName = "coopEpRec"
    meta.rnFormat = "epr-%(vnid)s-epr-%(mac)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Endpoint Record"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.coop.Ipv4Rec")
    meta.childClasses.add("cobra.model.coop.RtHBucket2EpRec")
    meta.childClasses.add("cobra.model.coop.Ipv6Rec")
    meta.childClasses.add("cobra.model.coop.EpVpcRec")

    meta.childNamesAndRnPrefix.append(("cobra.model.coop.RtHBucket2EpRec", "rthBucket2EpRec"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.Ipv4Rec", "epip4-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.Ipv6Rec", "epip6-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.coop.EpVpcRec", "epvpc-"))

    meta.parentClasses.add("cobra.model.coop.Db")

    meta.superClasses.add("cobra.model.nw.DbRec")
    meta.superClasses.add("cobra.model.l3.DbRec")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.coop.CoopExtRec")
    meta.superClasses.add("cobra.model.coop.Rec")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.GEp")
    meta.superClasses.add("cobra.model.coop.EpRecBase")
    meta.superClasses.add("cobra.model.coop.CoopRec")

    meta.rnPrefixes = [
        ('epr-', True),
        ('-epr-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "currCitizen", "currCitizen", 16971, PropCategory.REGULAR)
    prop.label = "Current Citizen"
    prop.isOper = True
    meta.props.add("currCitizen", prop)

    prop = PropMeta("str", "dampPenalty", "dampPenalty", 15371, PropCategory.REGULAR)
    prop.label = "Damp Penalty"
    prop.isOper = True
    prop.range = [(100, 65535)]
    prop.defaultValue = 1000
    prop.defaultValueStr = "1000"
    meta.props.add("dampPenalty", prop)

    prop = PropMeta("str", "dampState", "dampState", 55540, PropCategory.REGULAR)
    prop.label = "EP Damp state"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 3
    prop.defaultValueStr = "normal"
    prop._addConstant("critical", "critical", 2)
    prop._addConstant("freeze", "freeze", 1)
    prop._addConstant("normal", "normal", 3)
    meta.props.add("dampState", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "flags", "flags", 16967, PropCategory.REGULAR)
    prop.label = "Flags"
    prop.isOper = True
    prop._addConstant("anycast", "anycast", 2)
    prop._addConstant("bkup-shardm", "backup-shard-master-oracle", 64)
    prop._addConstant("dampen", "dampen", 512)
    prop._addConstant("host", "host", 8)
    prop._addConstant("infra", "infra-endpoint", 2048)
    prop._addConstant("ip-exported", "ip-exported", 16384)
    prop._addConstant("mac-exported", "mac-exported", 8192)
    prop._addConstant("mac-pub", "mac-published", 128)
    prop._addConstant("remote", "remote-endpoint", 4096)
    prop._addConstant("router", "router", 4)
    prop._addConstant("service", "service", 1)
    prop._addConstant("shardm", "shard-master-oracle", 32)
    prop._addConstant("static", "static-endpoint", 1024)
    prop._addConstant("vpc", "vpc", 16)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "lastDampen", "lastDampen", 15370, PropCategory.REGULAR)
    prop.label = "Last Dampened"
    prop.isOper = True
    meta.props.add("lastDampen", prop)

    prop = PropMeta("str", "lastPub", "lastPub", 15369, PropCategory.REGULAR)
    prop.label = "Last Published"
    prop.isOper = True
    meta.props.add("lastPub", prop)

    prop = PropMeta("str", "mac", "mac", 2479, PropCategory.REGULAR)
    prop.label = "MAC"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("mac", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 16437, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "pprevCitizen", "pprevCitizen", 16973, PropCategory.REGULAR)
    prop.label = "Prior to Previous Citizen"
    prop.isOper = True
    meta.props.add("pprevCitizen", prop)

    prop = PropMeta("str", "prevCitizen", "prevCitizen", 16972, PropCategory.REGULAR)
    prop.label = "Previous Citizen"
    prop.isOper = True
    meta.props.add("prevCitizen", prop)

    prop = PropMeta("str", "pubId", "pubId", 16966, PropCategory.REGULAR)
    prop.label = "Published ID"
    prop.isOper = True
    meta.props.add("pubId", prop)

    prop = PropMeta("str", "recordTs", "recordTs", 15368, PropCategory.REGULAR)
    prop.label = "Record Timestamp"
    prop.isOper = True
    meta.props.add("recordTs", prop)

    prop = PropMeta("str", "remoteTs", "remoteTs", 27694, PropCategory.REGULAR)
    prop.label = "Remote Publish Timestamp"
    prop.isOper = True
    meta.props.add("remoteTs", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "synthFlags", "synthFlags", 16970, PropCategory.REGULAR)
    prop.label = "Sythetic Flags"
    prop.isOper = True
    prop._addConstant("generated", "generated", 1)
    prop._addConstant("mark-del", "marked-for-deletion", 2)
    prop._addConstant("new", "newly-published", 8)
    prop._addConstant("urib-prog", "urib-programmed", 4)
    meta.props.add("synthFlags", prop)

    prop = PropMeta("str", "synthIp", "synthIp", 16968, PropCategory.REGULAR)
    prop.label = "Synthetic IP"
    prop.isOper = True
    meta.props.add("synthIp", prop)

    prop = PropMeta("str", "synthVrf", "synthVrf", 16969, PropCategory.REGULAR)
    prop.label = "Synthetic VRF"
    prop.isOper = True
    meta.props.add("synthVrf", prop)

    prop = PropMeta("str", "vnid", "vnid", 2477, PropCategory.REGULAR)
    prop.label = "VNID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 16777215)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("vnid", prop)

    prop = PropMeta("str", "vrfVnid", "vrfVnid", 16965, PropCategory.REGULAR)
    prop.label = "VRF VNID"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 16777215)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("vrfVnid", prop)

    meta.namingProps.append(getattr(meta.props, "vnid"))
    meta.namingProps.append(getattr(meta.props, "mac"))

    def __init__(self, parentMoOrDn, vnid, mac, markDirty=True, **creationProps):
        namingVals = [vnid, mac]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

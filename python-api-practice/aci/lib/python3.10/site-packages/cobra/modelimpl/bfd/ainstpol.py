# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class AInstPol(Mo):
    meta = ClassMeta("cobra.model.bfd.AInstPol")

    meta.isAbstract = True
    meta.moClassName = "bfdAInstPol"


    meta.moClassName = "bfdAInstPol"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "BFD Global Abstraction Policy"
    meta.writeAccessMask = 0x8000000000001
    meta.readAccessMask = 0x8000000000001
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.superClasses.add("cobra.model.fabric.ProtoPol")
    meta.superClasses.add("cobra.model.fabric.ProtoInstPol")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Def")
    meta.superClasses.add("cobra.model.fabric.L3InstPol")

    meta.concreteSubClasses.add("cobra.model.bfd.Ipv6InstPol")
    meta.concreteSubClasses.add("cobra.model.bfd.Ipv4InstPol")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5579, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "detectMult", "detectMult", 22736, PropCategory.REGULAR)
    prop.label = "Detection Multiplier"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 50)]
    prop.defaultValue = 3
    prop.defaultValueStr = "3"
    meta.props.add("detectMult", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "echoRxIntvl", "echoRxIntvl", 22737, PropCategory.REGULAR)
    prop.label = "Echo Rx Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(50, 999)]
    prop.defaultValue = 50
    prop.defaultValueStr = "50"
    meta.props.add("echoRxIntvl", prop)

    prop = PropMeta("str", "echoSrcAddr", "echoSrcAddr", 22733, PropCategory.REGULAR)
    prop.label = "BFD Ipv4 Source Address for Echo frames"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("echoSrcAddr", prop)

    prop = PropMeta("str", "minRxIntvl", "minRxIntvl", 22735, PropCategory.REGULAR)
    prop.label = "Required Minimum RX Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(50, 999)]
    prop.defaultValue = 50
    prop.defaultValueStr = "50"
    meta.props.add("minRxIntvl", prop)

    prop = PropMeta("str", "minTxIntvl", "minTxIntvl", 22734, PropCategory.REGULAR)
    prop.label = "Desired Minimum TX Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(50, 999)]
    prop.defaultValue = 50
    prop.defaultValueStr = "50"
    meta.props.add("minTxIntvl", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "slowIntvl", "slowIntvl", 22738, PropCategory.REGULAR)
    prop.label = "Slow Timer Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1000, 30000)]
    prop.defaultValue = 2000
    prop.defaultValueStr = "2000"
    meta.props.add("slowIntvl", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Policy"

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

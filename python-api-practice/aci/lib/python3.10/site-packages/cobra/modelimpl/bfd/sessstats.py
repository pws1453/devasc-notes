# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class SessStats(Mo):
    """
     This object holds bfd session stats information 

    """

    meta = ClassMeta("cobra.model.bfd.SessStats")

    meta.moClassName = "bfdSessStats"
    meta.rnFormat = "stats"
    meta.category = MoCategory.REGULAR
    meta.label = "BFD Session Stats"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.bfd.PduStats1qtr")
    meta.childClasses.add("cobra.model.bfd.PduStats1h")
    meta.childClasses.add("cobra.model.bfd.PduStatsHist1d")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.bfd.PduStatsHist5min")
    meta.childClasses.add("cobra.model.bfd.PduStatsHist1w")
    meta.childClasses.add("cobra.model.bfd.PduStatsHist1year")
    meta.childClasses.add("cobra.model.bfd.PduStatsHist15min")
    meta.childClasses.add("cobra.model.bfd.PduStatsHist1qtr")
    meta.childClasses.add("cobra.model.bfd.PduStats1year")
    meta.childClasses.add("cobra.model.bfd.PduStats1d")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.bfd.PduStats1mo")
    meta.childClasses.add("cobra.model.bfd.PduStatsHist1mo")
    meta.childClasses.add("cobra.model.bfd.PduStats15min")
    meta.childClasses.add("cobra.model.bfd.PduStatsHist1h")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.bfd.PduStats1w")
    meta.childClasses.add("cobra.model.bfd.PduStats5min")

    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStatsHist1year", "HDbfdPduStats1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStatsHist15min", "HDbfdPduStats15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStatsHist5min", "HDbfdPduStats5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStatsHist1qtr", "HDbfdPduStats1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStats1year", "CDbfdPduStats1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStats15min", "CDbfdPduStats15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStats1qtr", "CDbfdPduStats1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStatsHist1mo", "HDbfdPduStats1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStats5min", "CDbfdPduStats5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStatsHist1d", "HDbfdPduStats1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStatsHist1w", "HDbfdPduStats1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStats1mo", "CDbfdPduStats1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStatsHist1h", "HDbfdPduStats1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStats1h", "CDbfdPduStats1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStats1d", "CDbfdPduStats1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PduStats1w", "CDbfdPduStats1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))

    meta.parentClasses.add("cobra.model.bfd.Sess")

    meta.rnPrefixes = [
        ('stats', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "downCnt", "downCnt", 17040, PropCategory.REGULAR)
    prop.label = "Down Count"
    prop.isOper = True
    meta.props.add("downCnt", prop)

    prop = PropMeta("str", "lastRxPkt", "lastRxPkt", 17033, PropCategory.REGULAR)
    prop.label = "Last packet received timestamp"
    prop.isOper = True
    meta.props.add("lastRxPkt", prop)

    prop = PropMeta("str", "lastTxPkt", "lastTxPkt", 17038, PropCategory.REGULAR)
    prop.label = "Last packet transmitted timestamp"
    prop.isOper = True
    meta.props.add("lastTxPkt", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 49712, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rxAvg", "rxAvg", 17030, PropCategory.REGULAR)
    prop.label = "Packets Average Receive Interval"
    prop.isOper = True
    meta.props.add("rxAvg", prop)

    prop = PropMeta("str", "rxCnt", "rxCnt", 17029, PropCategory.REGULAR)
    prop.label = "Packets Received"
    prop.isOper = True
    meta.props.add("rxCnt", prop)

    prop = PropMeta("str", "rxMax", "rxMax", 17032, PropCategory.REGULAR)
    prop.label = "Packets Maximum Receive Interval"
    prop.isOper = True
    meta.props.add("rxMax", prop)

    prop = PropMeta("str", "rxMin", "rxMin", 17031, PropCategory.REGULAR)
    prop.label = "Packets Minimum Receive Interval"
    prop.isOper = True
    meta.props.add("rxMin", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "txAvg", "txAvg", 17035, PropCategory.REGULAR)
    prop.label = "Packets Average Transmit Interval"
    prop.isOper = True
    meta.props.add("txAvg", prop)

    prop = PropMeta("str", "txCnt", "txCnt", 17034, PropCategory.REGULAR)
    prop.label = "Packets Transmitted"
    prop.isOper = True
    meta.props.add("txCnt", prop)

    prop = PropMeta("str", "txMax", "txMax", 17037, PropCategory.REGULAR)
    prop.label = "Packets Maximum Transmit Interval"
    prop.isOper = True
    meta.props.add("txMax", prop)

    prop = PropMeta("str", "txMin", "txMin", 17036, PropCategory.REGULAR)
    prop.label = "Packets Minimum Transmit Interval"
    prop.isOper = True
    meta.props.add("txMin", prop)

    prop = PropMeta("str", "upCnt", "upCnt", 17039, PropCategory.REGULAR)
    prop.label = "Up Count"
    prop.isOper = True
    meta.props.add("upCnt", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

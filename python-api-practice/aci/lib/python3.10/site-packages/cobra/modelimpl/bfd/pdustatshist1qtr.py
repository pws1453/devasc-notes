# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class PduStatsHist1qtr(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.bfd.PduStatsHist1qtr", "BFD Session Stats")

    counter = CounterMeta("flaps", CounterCategory.COUNTER, "", "Number of BFD Session Flaps")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "flapsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "flapsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "flapsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "flapsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "flapsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "flapsSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "flapsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "flapsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "flapsRate"
    meta._counters.append(counter)

    counter = CounterMeta("pduSent", CounterCategory.COUNTER, "packets", "Packets Transmitted")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "pduSentCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "pduSentPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "pduSentMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "pduSentMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "pduSentAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "pduSentSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "pduSentThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "pduSentTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "pduSentRate"
    meta._counters.append(counter)

    counter = CounterMeta("pduRcvd", CounterCategory.COUNTER, "packets", "Packets Received")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "pduRcvdCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "pduRcvdPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "pduRcvdMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "pduRcvdMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "pduRcvdAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "pduRcvdSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "pduRcvdThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "pduRcvdTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "pduRcvdRate"
    meta._counters.append(counter)

    meta.moClassName = "bfdPduStatsHist1qtr"
    meta.rnFormat = "HDbfdPduStats1qtr-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical BFD Session Stats stats in 1 quarter"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.bfd.SessStats")

    meta.superClasses.add("cobra.model.bfd.PduStatsHist")
    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Hist")

    meta.rnPrefixes = [
        ('HDbfdPduStats1qtr-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "flapsAvg", "flapsAvg", 49665, PropCategory.IMPLICIT_AVG)
    prop.label = "Number of BFD Session Flaps average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flapsAvg", prop)

    prop = PropMeta("str", "flapsCum", "flapsCum", 49661, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Number of BFD Session Flaps cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flapsCum", prop)

    prop = PropMeta("str", "flapsMax", "flapsMax", 49664, PropCategory.IMPLICIT_MAX)
    prop.label = "Number of BFD Session Flaps maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flapsMax", prop)

    prop = PropMeta("str", "flapsMin", "flapsMin", 49663, PropCategory.IMPLICIT_MIN)
    prop.label = "Number of BFD Session Flaps minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flapsMin", prop)

    prop = PropMeta("str", "flapsPer", "flapsPer", 49662, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Number of BFD Session Flaps periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flapsPer", prop)

    prop = PropMeta("str", "flapsRate", "flapsRate", 49669, PropCategory.IMPLICIT_RATE)
    prop.label = "Number of BFD Session Flaps rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flapsRate", prop)

    prop = PropMeta("str", "flapsSpct", "flapsSpct", 49666, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Number of BFD Session Flaps suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flapsSpct", prop)

    prop = PropMeta("str", "flapsThr", "flapsThr", 49667, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Number of BFD Session Flaps thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("flapsThr", prop)

    prop = PropMeta("str", "flapsTr", "flapsTr", 49668, PropCategory.IMPLICIT_TREND)
    prop.label = "Number of BFD Session Flaps trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flapsTr", prop)

    prop = PropMeta("str", "index", "index", 49645, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "pduRcvdAvg", "pduRcvdAvg", 49686, PropCategory.IMPLICIT_AVG)
    prop.label = "Packets Received average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduRcvdAvg", prop)

    prop = PropMeta("str", "pduRcvdCum", "pduRcvdCum", 49682, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Packets Received cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduRcvdCum", prop)

    prop = PropMeta("str", "pduRcvdMax", "pduRcvdMax", 49685, PropCategory.IMPLICIT_MAX)
    prop.label = "Packets Received maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduRcvdMax", prop)

    prop = PropMeta("str", "pduRcvdMin", "pduRcvdMin", 49684, PropCategory.IMPLICIT_MIN)
    prop.label = "Packets Received minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduRcvdMin", prop)

    prop = PropMeta("str", "pduRcvdPer", "pduRcvdPer", 49683, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Packets Received periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduRcvdPer", prop)

    prop = PropMeta("str", "pduRcvdRate", "pduRcvdRate", 49690, PropCategory.IMPLICIT_RATE)
    prop.label = "Packets Received rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduRcvdRate", prop)

    prop = PropMeta("str", "pduRcvdSpct", "pduRcvdSpct", 49687, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Packets Received suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduRcvdSpct", prop)

    prop = PropMeta("str", "pduRcvdThr", "pduRcvdThr", 49688, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Packets Received thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("pduRcvdThr", prop)

    prop = PropMeta("str", "pduRcvdTr", "pduRcvdTr", 49689, PropCategory.IMPLICIT_TREND)
    prop.label = "Packets Received trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduRcvdTr", prop)

    prop = PropMeta("str", "pduSentAvg", "pduSentAvg", 49707, PropCategory.IMPLICIT_AVG)
    prop.label = "Packets Transmitted average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduSentAvg", prop)

    prop = PropMeta("str", "pduSentCum", "pduSentCum", 49703, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Packets Transmitted cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduSentCum", prop)

    prop = PropMeta("str", "pduSentMax", "pduSentMax", 49706, PropCategory.IMPLICIT_MAX)
    prop.label = "Packets Transmitted maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduSentMax", prop)

    prop = PropMeta("str", "pduSentMin", "pduSentMin", 49705, PropCategory.IMPLICIT_MIN)
    prop.label = "Packets Transmitted minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduSentMin", prop)

    prop = PropMeta("str", "pduSentPer", "pduSentPer", 49704, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Packets Transmitted periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduSentPer", prop)

    prop = PropMeta("str", "pduSentRate", "pduSentRate", 49711, PropCategory.IMPLICIT_RATE)
    prop.label = "Packets Transmitted rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduSentRate", prop)

    prop = PropMeta("str", "pduSentSpct", "pduSentSpct", 49708, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Packets Transmitted suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduSentSpct", prop)

    prop = PropMeta("str", "pduSentThr", "pduSentThr", 49709, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Packets Transmitted thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("pduSentThr", prop)

    prop = PropMeta("str", "pduSentTr", "pduSentTr", 49710, PropCategory.IMPLICIT_TREND)
    prop.label = "Packets Transmitted trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pduSentTr", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

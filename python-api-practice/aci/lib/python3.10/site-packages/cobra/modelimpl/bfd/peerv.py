# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class PeerV(Mo):
    """
     This object holds bfd last packet information. This signifies peer view of the session. 

    """

    meta = ClassMeta("cobra.model.bfd.PeerV")

    meta.moClassName = "bfdPeerV"
    meta.rnFormat = "peerv"
    meta.category = MoCategory.REGULAR
    meta.label = "BFD Peer View"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.bfd.Sess")

    meta.rnPrefixes = [
        ('peerv', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "detectMult", "detectMult", 17044, PropCategory.REGULAR)
    prop.label = "Detect Multiplier in Last Packet"
    prop.isOper = True
    prop.range = [(1, 50)]
    prop.defaultValue = 3
    prop.defaultValueStr = "3"
    meta.props.add("detectMult", prop)

    prop = PropMeta("str", "diag", "diag", 17041, PropCategory.REGULAR)
    prop.label = "Diag Code in Last Packet"
    prop.isOper = True
    prop._addConstant("admin-down", "administratively-down", 7)
    prop._addConstant("concat-path-down", "concatenated-path-down", 6)
    prop._addConstant("detect-timeout", "control-detection-time-expired", 1)
    prop._addConstant("echo-fail", "echo-function-failed", 2)
    prop._addConstant("fwd-plane-reset", "forwarding-plane-reset", 4)
    prop._addConstant("nbr-signal-down", "neighbor-signaled-session-down", 3)
    prop._addConstant("none", "no-diagnostic", 0)
    prop._addConstant("path-down", "path-down", 5)
    prop._addConstant("rev-concat-path-down", "reverse-concatenated-path-down", 8)
    meta.props.add("diag", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "flags", "flags", 17043, PropCategory.REGULAR)
    prop.label = "Flags in Last Packet"
    prop.isOper = True
    prop._addConstant("authentication", "authentication", 8)
    prop._addConstant("demand", "demand", 1)
    prop._addConstant("final", "final", 4)
    prop._addConstant("poll", "poll", 2)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "minEcho", "minEcho", 17049, PropCategory.REGULAR)
    prop.label = "Min Echo Interval in Last Packet"
    prop.isOper = True
    prop.range = [(50, 999)]
    prop.defaultValue = 50
    prop.defaultValueStr = "50"
    meta.props.add("minEcho", prop)

    prop = PropMeta("str", "minRx", "minRx", 17048, PropCategory.REGULAR)
    prop.label = "Min Rx Interval in Last Packet"
    prop.isOper = True
    prop.range = [(50, 999)]
    prop.defaultValue = 50
    prop.defaultValueStr = "50"
    meta.props.add("minRx", prop)

    prop = PropMeta("str", "minTx", "minTx", 17047, PropCategory.REGULAR)
    prop.label = "Min Tx Interval in Last Packet"
    prop.isOper = True
    prop.range = [(50, 999)]
    prop.defaultValue = 50
    prop.defaultValueStr = "50"
    meta.props.add("minTx", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "myDisc", "myDisc", 17045, PropCategory.REGULAR)
    prop.label = "My Discriminator in Last Packet"
    prop.isOper = True
    meta.props.add("myDisc", prop)

    prop = PropMeta("str", "operSt", "operSt", 17042, PropCategory.REGULAR)
    prop.label = "Protocol State in Last Packet"
    prop.isOper = True
    prop._addConstant("admin-down", "admindown", 0)
    prop._addConstant("down", "down", 1)
    prop._addConstant("init", "init", 2)
    prop._addConstant("up", "up", 3)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "yourDisc", "yourDisc", 17046, PropCategory.REGULAR)
    prop.label = "Your Discriminator in Last Packet"
    prop.isOper = True
    meta.props.add("yourDisc", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Sess(Mo):
    """
     This object holds bfd session information 

    """

    meta = ClassMeta("cobra.model.bfd.Sess")

    meta.moClassName = "bfdSess"
    meta.rnFormat = "session-%(discr)s"
    meta.category = MoCategory.REGULAR
    meta.label = "BFD Session"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.bfd.SessStats")
    meta.childClasses.add("cobra.model.bfd.RtMbrSess")
    meta.childClasses.add("cobra.model.bfd.PeerV")
    meta.childClasses.add("cobra.model.bfd.SessApp")
    meta.childClasses.add("cobra.model.bfd.RsMbrSess")

    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.RsMbrSess", "rsmbrSess-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.RtMbrSess", "rtmbrSess"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.SessStats", "stats"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.PeerV", "peerv"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.SessApp", "app-"))

    meta.parentClasses.add("cobra.model.bfd.Inst")

    meta.rnPrefixes = [
        ('session-', True),
    ]

    prop = PropMeta("str", "asyncPort", "asyncPort", 17003, PropCategory.REGULAR)
    prop.label = "Async Source Port"
    prop.isOper = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dns", "dns", 53)
    prop._addConstant("ftpData", "ftp-data", 20)
    prop._addConstant("http", "http", 80)
    prop._addConstant("https", "https", 443)
    prop._addConstant("pop3", "pop3", 110)
    prop._addConstant("rtsp", "rtsp", 554)
    prop._addConstant("smtp", "smtp", 25)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("asyncPort", prop)

    prop = PropMeta("str", "authSeqno", "authSeqno", 17021, PropCategory.REGULAR)
    prop.label = "Authentication Sequence Number"
    prop.isOper = True
    meta.props.add("authSeqno", prop)

    prop = PropMeta("str", "authType", "authType", 17020, PropCategory.REGULAR)
    prop.label = "Active value of Auth Type"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("none", "no-authentication", 0)
    prop._addConstant("sha1", "keyed-sha1", 4)
    meta.props.add("authType", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "destAddr", "destAddr", 17011, PropCategory.REGULAR)
    prop.label = "Destination IP Address"
    prop.isOper = True
    meta.props.add("destAddr", prop)

    prop = PropMeta("str", "detectMult", "detectMult", 17019, PropCategory.REGULAR)
    prop.label = "Active value of Detection Multiplier"
    prop.isOper = True
    prop.range = [(1, 50)]
    prop.defaultValue = 3
    prop.defaultValueStr = "3"
    meta.props.add("detectMult", prop)

    prop = PropMeta("str", "diag", "diag", 17024, PropCategory.REGULAR)
    prop.label = "Protocol Diag"
    prop.isOper = True
    prop._addConstant("admin-down", "administratively-down", 7)
    prop._addConstant("concat-path-down", "concatenated-path-down", 6)
    prop._addConstant("detect-timeout", "control-detection-time-expired", 1)
    prop._addConstant("echo-fail", "echo-function-failed", 2)
    prop._addConstant("fwd-plane-reset", "forwarding-plane-reset", 4)
    prop._addConstant("nbr-signal-down", "neighbor-signaled-session-down", 3)
    prop._addConstant("none", "no-diagnostic", 0)
    prop._addConstant("path-down", "path-down", 5)
    prop._addConstant("rev-concat-path-down", "reverse-concatenated-path-down", 8)
    meta.props.add("diag", prop)

    prop = PropMeta("str", "discr", "discr", 17001, PropCategory.REGULAR)
    prop.label = "Local Session Identifier"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("discr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "echoPort", "echoPort", 17004, PropCategory.REGULAR)
    prop.label = "Echo Source Port"
    prop.isOper = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dns", "dns", 53)
    prop._addConstant("ftpData", "ftp-data", 20)
    prop._addConstant("http", "http", 80)
    prop._addConstant("https", "https", 443)
    prop._addConstant("pop3", "pop3", 110)
    prop._addConstant("rtsp", "rtsp", 554)
    prop._addConstant("smtp", "smtp", 25)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("echoPort", prop)

    prop = PropMeta("str", "echoTxIntvl", "echoTxIntvl", 17016, PropCategory.REGULAR)
    prop.label = "Active Value of Echo Tx Interval"
    prop.isOper = True
    prop.range = [(50, 999)]
    prop.defaultValue = 50
    prop.defaultValueStr = "50"
    meta.props.add("echoTxIntvl", prop)

    prop = PropMeta("str", "flags", "flags", 17025, PropCategory.REGULAR)
    prop.label = "Packet Flags"
    prop.isOper = True
    prop._addConstant("authentication", "authentication", 8)
    prop._addConstant("demand", "demand", 1)
    prop._addConstant("final", "final", 4)
    prop._addConstant("poll", "poll", 2)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "ifId", "ifId", 17007, PropCategory.REGULAR)
    prop.label = "Interface ID"
    prop.isOper = True
    meta.props.add("ifId", prop)

    prop = PropMeta("str", "iod", "iod", 17008, PropCategory.REGULAR)
    prop.label = "Interface ordinal"
    prop.isOper = True
    prop.range = [(1, 4294967295)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("iod", prop)

    prop = PropMeta("str", "lastDiag", "lastDiag", 17027, PropCategory.REGULAR)
    prop.label = "Last Diag"
    prop.isOper = True
    prop._addConstant("admin-down", "administratively-down", 7)
    prop._addConstant("concat-path-down", "concatenated-path-down", 6)
    prop._addConstant("detect-timeout", "control-detection-time-expired", 1)
    prop._addConstant("echo-fail", "echo-function-failed", 2)
    prop._addConstant("fwd-plane-reset", "forwarding-plane-reset", 4)
    prop._addConstant("nbr-signal-down", "neighbor-signaled-session-down", 3)
    prop._addConstant("none", "no-diagnostic", 0)
    prop._addConstant("path-down", "path-down", 5)
    prop._addConstant("rev-concat-path-down", "reverse-concatenated-path-down", 8)
    meta.props.add("lastDiag", prop)

    prop = PropMeta("str", "lastDownTime", "lastDownTime", 17028, PropCategory.REGULAR)
    prop.label = "Last Down Time"
    prop.isOper = True
    meta.props.add("lastDownTime", prop)

    prop = PropMeta("str", "lastTransTime", "lastTransTime", 17026, PropCategory.REGULAR)
    prop.label = "Transition Time"
    prop.isOper = True
    meta.props.add("lastTransTime", prop)

    prop = PropMeta("str", "localDetectMult", "localDetectMult", 17014, PropCategory.REGULAR)
    prop.label = "Local value of Detection Multiplier"
    prop.isOper = True
    prop.range = [(1, 50)]
    prop.defaultValue = 3
    prop.defaultValueStr = "3"
    meta.props.add("localDetectMult", prop)

    prop = PropMeta("str", "localMac", "localMac", 17005, PropCategory.REGULAR)
    prop.label = "Local MAC Address"
    prop.isOper = True
    meta.props.add("localMac", prop)

    prop = PropMeta("str", "localRxIntvl", "localRxIntvl", 17013, PropCategory.REGULAR)
    prop.label = "Local Value of Rx Interval"
    prop.isOper = True
    prop.range = [(50, 999)]
    prop.defaultValue = 50
    prop.defaultValueStr = "50"
    meta.props.add("localRxIntvl", prop)

    prop = PropMeta("str", "localTxIntvl", "localTxIntvl", 17012, PropCategory.REGULAR)
    prop.label = "Local Value of Tx Interval"
    prop.isOper = True
    prop.range = [(50, 999)]
    prop.defaultValue = 50
    prop.defaultValueStr = "50"
    meta.props.add("localTxIntvl", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 17538, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "operSt", "operSt", 17022, PropCategory.REGULAR)
    prop.label = "Oper State"
    prop.isOper = True
    prop._addConstant("admin-down", "admindown", 0)
    prop._addConstant("down", "down", 1)
    prop._addConstant("init", "init", 2)
    prop._addConstant("up", "up", 3)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "remoteDiscr", "remoteDiscr", 17002, PropCategory.REGULAR)
    prop.label = "Remote Session Identifier"
    prop.isOper = True
    meta.props.add("remoteDiscr", prop)

    prop = PropMeta("str", "remoteMac", "remoteMac", 17006, PropCategory.REGULAR)
    prop.label = "Remote MAC Address"
    prop.isOper = True
    meta.props.add("remoteMac", prop)

    prop = PropMeta("str", "remoteOperSt", "remoteOperSt", 17023, PropCategory.REGULAR)
    prop.label = "Remote Oper State"
    prop.isOper = True
    prop._addConstant("admin-down", "admindown", 0)
    prop._addConstant("down", "down", 1)
    prop._addConstant("init", "init", 2)
    prop._addConstant("up", "up", 3)
    meta.props.add("remoteOperSt", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rxIntvl", "rxIntvl", 17017, PropCategory.REGULAR)
    prop.label = "Active Value of Rx Interval"
    prop.isOper = True
    prop.range = [(50, 999)]
    prop.defaultValue = 50
    prop.defaultValueStr = "50"
    meta.props.add("rxIntvl", prop)

    prop = PropMeta("str", "slowIntvl", "slowIntvl", 17018, PropCategory.REGULAR)
    prop.label = "Active value of Slow Interval"
    prop.isOper = True
    prop.range = [(1000, 30000)]
    prop.defaultValue = 2000
    prop.defaultValueStr = "2000"
    meta.props.add("slowIntvl", prop)

    prop = PropMeta("str", "srcAddr", "srcAddr", 17010, PropCategory.REGULAR)
    prop.label = "Source IP Address"
    prop.isOper = True
    meta.props.add("srcAddr", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "txIntvl", "txIntvl", 17015, PropCategory.REGULAR)
    prop.label = "Active Value of Tx Interval"
    prop.isOper = True
    prop.range = [(50, 999)]
    prop.defaultValue = 50
    prop.defaultValueStr = "50"
    meta.props.add("txIntvl", prop)

    prop = PropMeta("str", "vrfName", "vrfName", 17009, PropCategory.REGULAR)
    prop.label = "L3 Context Name"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("vrfName", prop)

    meta.namingProps.append(getattr(meta.props, "discr"))

    def __init__(self, parentMoOrDn, discr, markDirty=True, **creationProps):
        namingVals = [discr]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

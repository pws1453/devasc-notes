# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class IfStats(Mo):
    """
     This object holds dcbx intf statistics operational information. This is a singleton within an interface 

    """

    meta = ClassMeta("cobra.model.dcbx.IfStats")

    meta.moClassName = "dcbxIfStats"
    meta.rnFormat = "stats"
    meta.category = MoCategory.REGULAR
    meta.label = "Interface Statistics"
    meta.writeAccessMask = 0x6006010020001
    meta.readAccessMask = 0x6006010020001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.dcbx.IfCtx")

    meta.rnPrefixes = [
        ('stats', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "entriesAged", "entriesAged", 24443, PropCategory.REGULAR)
    prop.label = "Number of Entries Aged"
    prop.isOper = True
    meta.props.add("entriesAged", prop)

    prop = PropMeta("str", "errPktRcvd", "errPktRcvd", 24444, PropCategory.REGULAR)
    prop.label = "Number of Packets Received in Error"
    prop.isOper = True
    meta.props.add("errPktRcvd", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "pktDiscarded", "pktDiscarded", 24445, PropCategory.REGULAR)
    prop.label = "Number of Packets Discarded"
    prop.isOper = True
    meta.props.add("pktDiscarded", prop)

    prop = PropMeta("str", "pktRcvd", "pktRcvd", 24442, PropCategory.REGULAR)
    prop.label = "Number of Packets Received"
    prop.isOper = True
    meta.props.add("pktRcvd", prop)

    prop = PropMeta("str", "pktSent", "pktSent", 24441, PropCategory.REGULAR)
    prop.label = "Number of Packets Sent"
    prop.isOper = True
    meta.props.add("pktSent", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "unrecogTLV", "unrecogTLV", 24446, PropCategory.REGULAR)
    prop.label = "Number of Unrecognized TLVs"
    prop.isOper = True
    meta.props.add("unrecogTLV", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

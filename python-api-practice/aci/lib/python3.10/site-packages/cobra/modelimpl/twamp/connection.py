# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Connection(Mo):
    """
    

    """

    meta = ClassMeta("cobra.model.twamp.Connection")

    meta.moClassName = "twampConnection"
    meta.rnFormat = "connection-%(id)s"
    meta.category = MoCategory.REGULAR
    meta.label = "TWAMP Connection details"
    meta.writeAccessMask = 0x18018020040001
    meta.readAccessMask = 0x18018020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.twamp.ConnCont")

    meta.rnPrefixes = [
        ('connection-', True),
    ]

    prop = PropMeta("str", "TestReqCount", "TestReqCount", 42440, PropCategory.REGULAR)
    prop.label = "Total Number of Test Requests"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("TestReqCount", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "clientIpAddr", "clientIpAddr", 37185, PropCategory.REGULAR)
    prop.label = "Client IP Address"
    prop.isOper = True
    meta.props.add("clientIpAddr", prop)

    prop = PropMeta("str", "clientPort", "clientPort", 37186, PropCategory.REGULAR)
    prop.label = "Client Port Number"
    prop.isOper = True
    prop.range = [(1, 65535)]
    meta.props.add("clientPort", prop)

    prop = PropMeta("str", "clientVrf", "clientVrf", 37187, PropCategory.REGULAR)
    prop.label = "Client VRF"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("clientVrf", prop)

    prop = PropMeta("str", "connMode", "connMode", 37188, PropCategory.REGULAR)
    prop.label = "Connection Mode"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "Unauthenticated"
    prop._addConstant("Unauthenticated", "unauthenticated", 0)
    meta.props.add("connMode", prop)

    prop = PropMeta("str", "connState", "connState", 37189, PropCategory.REGULAR)
    prop.label = "Connection State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "Connected"
    prop._addConstant("Connected", "connected", 0)
    meta.props.add("connState", prop)

    prop = PropMeta("str", "ctrlState", "ctrlState", 37190, PropCategory.REGULAR)
    prop.label = "Control State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "None"
    prop._addConstant("Active", "active", 1)
    prop._addConstant("None", "none", 0)
    meta.props.add("ctrlState", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "id", "id", 37184, PropCategory.REGULAR)
    prop.label = "Connection ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "id"))

    def __init__(self, parentMoOrDn, id, markDirty=True, **creationProps):
        namingVals = [id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class AFiltEntry(Mo):
    meta = ClassMeta("cobra.model.vz.AFiltEntry")

    meta.isAbstract = True
    meta.moClassName = "vzAFiltEntry"


    meta.moClassName = "vzAFiltEntry"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "None"
    meta.writeAccessMask = 0x0
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Comp")

    meta.concreteSubClasses.add("cobra.model.actrl.Entry")
    meta.concreteSubClasses.add("cobra.model.vz.Entry")
    meta.concreteSubClasses.add("cobra.model.vz.RFltE")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "applyToFrag", "applyToFrag", 1063, PropCategory.REGULAR)
    prop.label = "Apply Rule for all Fragments"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("applyToFrag", prop)

    prop = PropMeta("str", "arpOpc", "arpOpc", 1065, PropCategory.REGULAR)
    prop.label = "ARP Opcodes"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("reply", "arp-reply", 2)
    prop._addConstant("req", "arp-request", 1)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("arpOpc", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dFromPort", "dFromPort", 1060, PropCategory.REGULAR)
    prop.label = "Destination from Port"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dns", "dns", 53)
    prop._addConstant("ftpData", "ftp-data", 20)
    prop._addConstant("http", "http", 80)
    prop._addConstant("https", "https", 443)
    prop._addConstant("pop3", "pop3", 110)
    prop._addConstant("rtsp", "rtsp", 554)
    prop._addConstant("smtp", "smtp", 25)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("dFromPort", prop)

    prop = PropMeta("str", "dToPort", "dToPort", 1061, PropCategory.REGULAR)
    prop.label = "Destination to Port"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dns", "dns", 53)
    prop._addConstant("ftpData", "ftp-data", 20)
    prop._addConstant("http", "http", 80)
    prop._addConstant("https", "https", 443)
    prop._addConstant("pop3", "pop3", 110)
    prop._addConstant("rtsp", "rtsp", 554)
    prop._addConstant("smtp", "smtp", 25)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("dToPort", prop)

    prop = PropMeta("str", "descr", "descr", 5582, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "etherT", "etherT", 1064, PropCategory.REGULAR)
    prop.label = "Ethernet Type"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("arp", "arp", 2054)
    prop._addConstant("fcoe", "fcoe", 35078)
    prop._addConstant("ip", "ip", 43981)
    prop._addConstant("ipv4", "ipv4", 2048)
    prop._addConstant("ipv6", "ipv6", 34525)
    prop._addConstant("mac_security", "mac-security", 35045)
    prop._addConstant("mpls_ucast", "mpls-unicast", 34887)
    prop._addConstant("trill", "trill", 8947)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("etherT", prop)

    prop = PropMeta("str", "icmpv4T", "icmpv4T", 16873, PropCategory.REGULAR)
    prop.label = "ICMPv4 Type"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 255
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dst-unreach", "destination-unreachable", 3)
    prop._addConstant("echo", "echo", 8)
    prop._addConstant("echo-rep", "echo-reply", 0)
    prop._addConstant("src-quench", "source-quench", 4)
    prop._addConstant("time-exceeded", "time-exceeded", 11)
    prop._addConstant("unspecified", "unspecified", 255)
    meta.props.add("icmpv4T", prop)

    prop = PropMeta("str", "icmpv6T", "icmpv6T", 16874, PropCategory.REGULAR)
    prop.label = "ICMPv6 Type"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dst-unreach", "destination-unreachable", 1)
    prop._addConstant("echo-rep", "echo-reply", 129)
    prop._addConstant("echo-req", "echo-request", 128)
    prop._addConstant("nbr-advert", "neighbor-advertisement", 136)
    prop._addConstant("nbr-solicit", "neighbor-solicitation", 135)
    prop._addConstant("redirect", "redirect-message", 137)
    prop._addConstant("time-exceeded", "time-exceeded", 3)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("icmpv6T", prop)

    prop = PropMeta("str", "matchDscp", "matchDscp", 23343, PropCategory.REGULAR)
    prop.label = "Dscp match for filter entry"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.defaultValue = 64
    prop.defaultValueStr = "unspecified"
    prop._addConstant("AF11", "af11-low-drop", 10)
    prop._addConstant("AF12", "af12-medium-drop", 12)
    prop._addConstant("AF13", "af13-high-drop", 14)
    prop._addConstant("AF21", "af21-low-drop", 18)
    prop._addConstant("AF22", "af22-medium-drop", 20)
    prop._addConstant("AF23", "af23-high-drop", 22)
    prop._addConstant("AF31", "af31-low-drop", 26)
    prop._addConstant("AF32", "af32-medium-drop", 28)
    prop._addConstant("AF33", "af33-high-drop", 30)
    prop._addConstant("AF41", "af41-low-drop", 34)
    prop._addConstant("AF42", "af42-medium-drop", 36)
    prop._addConstant("AF43", "af43-high-drop", 38)
    prop._addConstant("CS0", "cs0", 0)
    prop._addConstant("CS1", "cs1", 8)
    prop._addConstant("CS2", "cs2", 16)
    prop._addConstant("CS3", "cs3", 24)
    prop._addConstant("CS4", "cs4", 32)
    prop._addConstant("CS5", "cs5", 40)
    prop._addConstant("CS6", "cs6", 48)
    prop._addConstant("CS7", "cs7", 56)
    prop._addConstant("EF", "expedited-forwarding", 46)
    prop._addConstant("VA", "voice-admit", 44)
    prop._addConstant("unspecified", "unspecified", 64)
    meta.props.add("matchDscp", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "prot", "prot", 1057, PropCategory.REGULAR)
    prop.label = "Protocol"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("egp", "egp", 8)
    prop._addConstant("eigrp", "eigrp", 88)
    prop._addConstant("icmp", "icmp", 1)
    prop._addConstant("icmpv6", "icmpv6", 58)
    prop._addConstant("igmp", "igmp", 2)
    prop._addConstant("igp", "igp", 9)
    prop._addConstant("l2tp", "l2tp", 115)
    prop._addConstant("ospfigp", "ospf", 89)
    prop._addConstant("pim", "pim", 103)
    prop._addConstant("tcp", "tcp", 6)
    prop._addConstant("udp", "udp", 17)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("prot", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "sFromPort", "sFromPort", 1058, PropCategory.REGULAR)
    prop.label = "Source from Port"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dns", "dns", 53)
    prop._addConstant("ftpData", "ftp-data", 20)
    prop._addConstant("http", "http", 80)
    prop._addConstant("https", "https", 443)
    prop._addConstant("pop3", "pop3", 110)
    prop._addConstant("rtsp", "rtsp", 554)
    prop._addConstant("smtp", "smtp", 25)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("sFromPort", prop)

    prop = PropMeta("str", "sToPort", "sToPort", 1059, PropCategory.REGULAR)
    prop.label = "Source to Port"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dns", "dns", 53)
    prop._addConstant("ftpData", "ftp-data", 20)
    prop._addConstant("http", "http", 80)
    prop._addConstant("https", "https", 443)
    prop._addConstant("pop3", "pop3", 110)
    prop._addConstant("rtsp", "rtsp", 554)
    prop._addConstant("smtp", "smtp", 25)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("sToPort", prop)

    prop = PropMeta("str", "stateful", "stateful", 18591, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("stateful", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tcpRules", "tcpRules", 1062, PropCategory.REGULAR)
    prop.label = "TCP Rules"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("ack", "acknowledgment", 2)
    prop._addConstant("est", "established", 16)
    prop._addConstant("fin", "finish", 4)
    prop._addConstant("rst", "reset", 8)
    prop._addConstant("syn", "synchronize", 1)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("tcpRules", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class ProvSubjLblDef(Mo):
    """
    A provider subject label definition. A subject label is used as a classification criteria for subjects being consumed/provided by the endpoint groups (EPGs) participating in the contract. The label identifies a subject being consumed by a consumer. It can be parented by 2 different methods. The first method is the relation between the consumer EPG and the contract that is used for filtering the subjects. A label should match either the subject name or the label present under the subject. The second method is by subject, which is the application behind the EPG that can have different characteristics for different labels present under it. A consumer with no subject consumer label consumes all the subjects of the contract. A consumer with a specific subject consumer label can only consume subjects matching the label.

    """

    meta = ClassMeta("cobra.model.vz.ProvSubjLblDef")

    meta.moClassName = "vzProvSubjLblDef"
    meta.rnFormat = "pSubjLblD-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "None"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.vz.ConsDef")
    meta.parentClasses.add("cobra.model.vz.CtrctEntityDef")
    meta.parentClasses.add("cobra.model.vz.ProvDef")
    meta.parentClasses.add("cobra.model.vz.IntraSecurityDef")

    meta.superClasses.add("cobra.model.pol.ConsElem")
    meta.superClasses.add("cobra.model.vz.ACompLbl")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Lbl")
    meta.superClasses.add("cobra.model.vz.ACompLblDef")
    meta.superClasses.add("cobra.model.pol.Def")
    meta.superClasses.add("cobra.model.vz.ALbl")

    meta.rnPrefixes = [
        ('pSubjLblD-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5579, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "isComplement", "isComplement", 1051, PropCategory.REGULAR)
    prop.label = "Complement"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("isComplement", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 7427, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tag", "tag", 4992, PropCategory.REGULAR)
    prop.label = "Tag"
    prop.isConfig = True
    prop.isAdmin = True
    prop._addConstant("alice-blue", "alice-blue", 15792383)
    prop._addConstant("antique-white", "antique-white", 16444375)
    prop._addConstant("aqua", "aqua", 65535)
    prop._addConstant("aquamarine", "aquamarine", 8388564)
    prop._addConstant("azure", "azure", 15794175)
    prop._addConstant("beige", "beige", 16119260)
    prop._addConstant("bisque", "bisque", 16770244)
    prop._addConstant("black", "black", 0)
    prop._addConstant("blanched-almond", "blanched-almond", 16772045)
    prop._addConstant("blue", "blue", 255)
    prop._addConstant("blue-violet", "blueviolet", 9055202)
    prop._addConstant("brown", "brown", 10824234)
    prop._addConstant("burlywood", "burlywood", 14596231)
    prop._addConstant("cadet-blue", "cadet-blue", 6266528)
    prop._addConstant("chartreuse", "chartreuse", 8388352)
    prop._addConstant("chocolate", "chocolate", 13789470)
    prop._addConstant("coral", "coral", 16744272)
    prop._addConstant("cornflower-blue", "cornflower-blue", 6591981)
    prop._addConstant("cornsilk", "cornsilk", 16775388)
    prop._addConstant("crimson", "crimson", 14423100)
    prop._addConstant("cyan", "cyan", 65535)
    prop._addConstant("dark-blue", "dark-blue", 139)
    prop._addConstant("dark-cyan", "dark-cyan", 35723)
    prop._addConstant("dark-goldenrod", "dark-goldenrod", 12092939)
    prop._addConstant("dark-gray", "dark-gray", 11119017)
    prop._addConstant("dark-green", "dark-green", 25600)
    prop._addConstant("dark-khaki", "dark-khaki", 12433259)
    prop._addConstant("dark-magenta", "dark-magenta", 9109643)
    prop._addConstant("dark-olive-green", "dark-olive-green", 5597999)
    prop._addConstant("dark-orange", "dark-orange", 16747520)
    prop._addConstant("dark-orchid", "dark-orchid", 10040012)
    prop._addConstant("dark-red", "dark-red", 9109504)
    prop._addConstant("dark-salmon", "dark-salmon", 15308410)
    prop._addConstant("dark-sea-green", "dark-sea-green", 9419919)
    prop._addConstant("dark-slate-blue", "dark-slate-blue", 4734347)
    prop._addConstant("dark-slate-gray", "dark-slate-gray", 3100495)
    prop._addConstant("dark-turquoise", "dark-turquoise", 52945)
    prop._addConstant("dark-violet", "dark-violet", 9699539)
    prop._addConstant("deep-pink", "deep-pink", 16716947)
    prop._addConstant("deep-sky-blue", "deep-sky-blue", 49151)
    prop._addConstant("dim-gray", "dim-gray", 6908265)
    prop._addConstant("dodger-blue", "dodger-blue", 2003199)
    prop._addConstant("fire-brick", "fire-brick", 11674146)
    prop._addConstant("floral-white", "floral-white", 16775920)
    prop._addConstant("forest-green", "forest-green", 2263842)
    prop._addConstant("fuchsia", "fuchsia", 16711935)
    prop._addConstant("gainsboro", "gainsboro", 14474460)
    prop._addConstant("ghost-white", "ghost-white", 16316671)
    prop._addConstant("gold", "gold", 16766720)
    prop._addConstant("goldenrod", "goldenrod", 14329120)
    prop._addConstant("gray", "gray", 8421504)
    prop._addConstant("green", "green", 32768)
    prop._addConstant("green-yellow", "green-yellow", 11403055)
    prop._addConstant("honeydew", "honeydew", 15794160)
    prop._addConstant("hot-pink", "hot-pink", 16738740)
    prop._addConstant("indian-red", "indian-red", 13458524)
    prop._addConstant("indigo", "indigo", 4915330)
    prop._addConstant("ivory", "ivory", 16777200)
    prop._addConstant("khaki", "khaki", 15787660)
    prop._addConstant("lavender", "lavender", 15132410)
    prop._addConstant("lavender-blush", "lavender-blush", 16773365)
    prop._addConstant("lawn-green", "lawn-green", 8190976)
    prop._addConstant("lemon-chiffon", "lemon-chiffon", 16775885)
    prop._addConstant("light-blue", "light-blue", 11393254)
    prop._addConstant("light-coral", "light-coral", 15761536)
    prop._addConstant("light-cyan", "light-cyan", 14745599)
    prop._addConstant("light-goldenrod-yellow", "light-goldenrod-yellow", 16448210)
    prop._addConstant("light-gray", "light-gray", 13882323)
    prop._addConstant("light-green", "light-green", 9498256)
    prop._addConstant("light-pink", "light-pink", 16758465)
    prop._addConstant("light-salmon", "light-salmon", 16752762)
    prop._addConstant("light-sea-green", "light-sea-green", 2142890)
    prop._addConstant("light-sky-blue", "light-sky-blue", 8900346)
    prop._addConstant("light-slate-gray", "light-slate-gray", 7833753)
    prop._addConstant("light-steel-blue", "light-steel-blue", 11584734)
    prop._addConstant("light-yellow", "light-yellow", 16777184)
    prop._addConstant("lime", "lime", 65280)
    prop._addConstant("lime-green", "lime-green", 3329330)
    prop._addConstant("linen", "linen", 16445670)
    prop._addConstant("magenta", "magenta", 16711935)
    prop._addConstant("maroon", "maroon", 8388608)
    prop._addConstant("medium-aquamarine", "medium-aquamarine", 6737322)
    prop._addConstant("medium-blue", "medium-blue", 205)
    prop._addConstant("medium-orchid", "medium-orchid", 12211667)
    prop._addConstant("medium-purple", "medium-purple", 9662683)
    prop._addConstant("medium-sea-green", "medium-sea-green", 3978097)
    prop._addConstant("medium-slate-blue", "medium-slate-blue", 8087790)
    prop._addConstant("medium-spring-green", "medium-spring-green", 64154)
    prop._addConstant("medium-turquoise", "medium-turquoise", 4772300)
    prop._addConstant("medium-violet-red", "medium-violet-red", 13047173)
    prop._addConstant("midnight-blue", "midnight-blue", 1644912)
    prop._addConstant("mint-cream", "mint-cream", 16121850)
    prop._addConstant("misty-rose", "misty-rose", 16770273)
    prop._addConstant("moccasin", "moccasin", 16770229)
    prop._addConstant("navajo-white", "navajo-white", 16768685)
    prop._addConstant("navy", "navy", 128)
    prop._addConstant("old-lace", "old-lace", 16643558)
    prop._addConstant("olive", "olive", 8421376)
    prop._addConstant("olive-drab", "olive-drab", 7048739)
    prop._addConstant("orange", "orange", 16753920)
    prop._addConstant("orange-red", "orange-red", 16729344)
    prop._addConstant("orchid", "orchid", 14315734)
    prop._addConstant("pale-goldenrod", "pale-goldenrod", 15657130)
    prop._addConstant("pale-green", "pale-green", 10025880)
    prop._addConstant("pale-turquoise", "pale-turquoise", 11529966)
    prop._addConstant("pale-violet-red", "pale-violet-red", 14381203)
    prop._addConstant("papaya-whip", "papaya-whip", 16773077)
    prop._addConstant("peachpuff", "peachpuff", 16767673)
    prop._addConstant("peru", "peru", 13468991)
    prop._addConstant("pink", "pink", 16761035)
    prop._addConstant("plum", "plum", 14524637)
    prop._addConstant("powder-blue", "powder-blue", 11591910)
    prop._addConstant("purple", "purple", 8388736)
    prop._addConstant("red", "red", 16711680)
    prop._addConstant("rosy-brown", "rosy-brown", 12357519)
    prop._addConstant("royal-blue", "royal-blue", 4286945)
    prop._addConstant("saddle-brown", "saddle-brown", 9127187)
    prop._addConstant("salmon", "salmon", 16416882)
    prop._addConstant("sandy-brown", "sandy-brown", 16032864)
    prop._addConstant("sea-green", "sea-green", 3050327)
    prop._addConstant("seashell", "seashell", 16774638)
    prop._addConstant("sienna", "sienna", 10506797)
    prop._addConstant("silver", "silver", 12632256)
    prop._addConstant("sky-blue", "sky-blue", 8900331)
    prop._addConstant("slate-blue", "slate-blue", 6970061)
    prop._addConstant("slate-gray", "slate-gray", 7372944)
    prop._addConstant("snow", "snow", 16775930)
    prop._addConstant("spring-green", "spring-green", 65407)
    prop._addConstant("steel-blue", "steel-blue", 4620980)
    prop._addConstant("tan", "tan", 13808780)
    prop._addConstant("teal", "teal", 32896)
    prop._addConstant("thistle", "thistle", 14204888)
    prop._addConstant("tomato", "tomato", 16737095)
    prop._addConstant("turquoise", "turquoise", 4251856)
    prop._addConstant("violet", "violet", 15631086)
    prop._addConstant("wheat", "wheat", 16113331)
    prop._addConstant("white", "white", 16777215)
    prop._addConstant("white-smoke", "white-smoke", 16119285)
    prop._addConstant("yellow", "yellow", 16776960)
    prop._addConstant("yellow-green", "yellow-green", 10145074)
    meta.props.add("tag", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("VzBrCpToVzFilterViaVzRsFiltAtt", "From contract to vzFilter", "cobra.model.vz.Filter"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("VzBrCpToVzFilterViaVzRsSubjFiltAtt", "From contract to vzFilter", "cobra.model.vz.Filter"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("VzBrCPToConsCloudExtEPg", "From contract to Consumer Ext EPG", "cobra.model.cloud.ExtEPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("VzBrCPToProvCloudExtEPg", "From contract to Provider Ext EPG", "cobra.model.cloud.EPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("VzBrCpToHcloudEndPointCons", "From contract to Consumer end point", "cobra.model.hcloud.EndPoint"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("VzBrCpToHcloudEndPointProv", "From contract to Provider EndPoint", "cobra.model.hcloud.EndPoint"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("VzBrCPToConsCloudEPg", "From contract to Consumer EPG", "cobra.model.cloud.EPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("VzBrCPToProvCloudEPg", "From contract to Provider EPG", "cobra.model.cloud.EPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("VzBrCPToVzSubj", "From contract to Filters which refer to this contract", "cobra.model.vz.Subj"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("VzBrCPToFvRsProv", "From contract to Providers", "cobra.model.fv.RsProv"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("VzBrCPToFvRsCons", "From contract to Consumers", "cobra.model.fv.RsCons"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("VzBrCPToVzRtSubjFiltAtt", "From contract to Filters which refer to this contract", "cobra.model.vz.RtSubjFiltAtt"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CtrctIfToEPgCons", "Contract Interface EPG Consumer", "cobra.model.fv.EPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CtrctIfToEPgConsNwIf", "Contract Interface EPG Consumer Interface", "cobra.model.nw.If"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("ABrCPToAnyProv", "Any To Provider", "cobra.model.nw.If"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("ABrCPToAnyCons", "Any To Consumer", "cobra.model.nw.If"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("ABrCPToEPgProv", "EPG Provider", "cobra.model.nw.If"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("ABrCPToEPgCons", "EPG Consumer", "cobra.model.nw.If"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("GraphInstancesinacontract", "Graph Instances", "cobra.model.vns.GraphInst"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

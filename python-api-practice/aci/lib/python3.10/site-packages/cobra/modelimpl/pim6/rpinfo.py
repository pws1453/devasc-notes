# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class RPInfo(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.pim6.RPInfo")

    meta.moClassName = "pim6RPInfo"
    meta.rnFormat = "rp-[%(addr)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "PIM6 Rendezvous Point"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.pim6.RsRP2Grange")

    meta.childNamesAndRnPrefix.append(("cobra.model.pim6.RsRP2Grange", "rsRP2Grange-"))

    meta.parentClasses.add("cobra.model.pim6.Db")

    meta.superClasses.add("cobra.model.l3.Db")
    meta.superClasses.add("cobra.model.nw.Db")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.GEp")
    meta.superClasses.add("cobra.model.rtdmc.RPInfo")

    meta.rnPrefixes = [
        ('rp-', True),
    ]

    prop = PropMeta("str", "addr", "addr", 47425, PropCategory.REGULAR)
    prop.label = "RP address"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("addr", prop)

    prop = PropMeta("str", "arpExp", "arpExp", 24562, PropCategory.REGULAR)
    prop.label = "Auto RP Expiry timer"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("arpExp", prop)

    prop = PropMeta("str", "bsrAddr", "bsrAddr", 52098, PropCategory.REGULAR)
    prop.label = "Selected BSR Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("bsrAddr", prop)

    prop = PropMeta("str", "bsrExp", "bsrExp", 24563, PropCategory.REGULAR)
    prop.label = "BSR RP Expiry timer"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("bsrExp", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dfOrdinal", "dfOrdinal", 24566, PropCategory.REGULAR)
    prop.label = "Bidir DF Ordinal"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dfOrdinal", prop)

    prop = PropMeta("str", "discType", "discType", 24565, PropCategory.REGULAR)
    prop.label = "RP source type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("autoRP", "auto-rp", 1)
    prop._addConstant("bsr", "bootstrap-router", 2)
    prop._addConstant("staticRP", "static-/-local", 4)
    meta.props.add("discType", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "local", "local", 24560, PropCategory.REGULAR)
    prop.label = "Is RP local"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("local", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 16436, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "priority", "priority", 24564, PropCategory.REGULAR)
    prop.label = "RP Priority"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("priority", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "uptime", "uptime", 24561, PropCategory.REGULAR)
    prop.label = "RP uptime"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uptime", prop)

    meta.namingProps.append(getattr(meta.props, "addr"))
    getattr(meta.props, "addr").needDelimiter = True

    def __init__(self, parentMoOrDn, addr, markDirty=True, **creationProps):
        namingVals = [addr]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

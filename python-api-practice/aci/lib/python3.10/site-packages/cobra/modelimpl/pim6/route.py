# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Route(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.pim6.Route")

    meta.moClassName = "pim6Route"
    meta.rnFormat = "src-[%(src)s]-grp-[%(grp)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "PIM6 Route"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.pim6.Oif")

    meta.childNamesAndRnPrefix.append(("cobra.model.pim6.Oif", "oif-"))

    meta.parentClasses.add("cobra.model.pim6.Db")

    meta.superClasses.add("cobra.model.nw.DbRec")
    meta.superClasses.add("cobra.model.l3.DbRec")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.rtdmc.ARoute")
    meta.superClasses.add("cobra.model.nw.GEp")
    meta.superClasses.add("cobra.model.rtdmc.SGRoute")

    meta.rnPrefixes = [
        ('src-', True),
        ('-grp-', True),
    ]

    prop = PropMeta("str", "assertMetric", "assertMetric", 26423, PropCategory.REGULAR)
    prop.label = "Assert metric"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("assertMetric", prop)

    prop = PropMeta("str", "assertMetricPref", "assertMetricPref", 26424, PropCategory.REGULAR)
    prop.label = "Assert metric preference"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("assertMetricPref", prop)

    prop = PropMeta("str", "assertTime", "assertTime", 26117, PropCategory.REGULAR)
    prop.label = "Assert Timeout"
    prop.isOper = True
    meta.props.add("assertTime", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "createTs", "createTs", 24537, PropCategory.REGULAR)
    prop.label = "Route Uptime"
    prop.isOper = True
    meta.props.add("createTs", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "expiryTs", "expiryTs", 24534, PropCategory.REGULAR)
    prop.label = "Route Expiry Timestamp"
    prop.isOper = True
    meta.props.add("expiryTs", prop)

    prop = PropMeta("str", "grp", "grp", 47426, PropCategory.REGULAR)
    prop.label = "Group"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("grp", prop)

    prop = PropMeta("str", "hwByteCnt", "hwByteCnt", 24542, PropCategory.REGULAR)
    prop.label = "Hardware Byte Count"
    prop.isOper = True
    prop.range = [(1, 4294967295)]
    meta.props.add("hwByteCnt", prop)

    prop = PropMeta("str", "hwPktCnt", "hwPktCnt", 24541, PropCategory.REGULAR)
    prop.label = "Hardware Packet Count"
    prop.isOper = True
    prop.range = [(1, 4294967295)]
    meta.props.add("hwPktCnt", prop)

    prop = PropMeta("str", "iif", "iif", 24533, PropCategory.REGULAR)
    prop.label = "Incoming interface"
    prop.isOper = True
    meta.props.add("iif", prop)

    prop = PropMeta("str", "jpHoldTime", "jpHoldTime", 27061, PropCategory.REGULAR)
    prop.label = "JP Hold time"
    prop.isOper = True
    meta.props.add("jpHoldTime", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 16437, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "routeBits", "routeBits", 26118, PropCategory.REGULAR)
    prop.label = "RP WC Bit"
    prop.isOper = True
    prop._addConstant("rp_bit", "rp-bit", 1)
    prop._addConstant("wc_bit", "wildcard-bit", 2)
    meta.props.add("routeBits", prop)

    prop = PropMeta("str", "rpAddrRoute", "rpAddrRoute", 52173, PropCategory.REGULAR)
    prop.label = "Route RP addr"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("rpAddrRoute", prop)

    prop = PropMeta("str", "rpfNbr", "rpfNbr", 24535, PropCategory.REGULAR)
    prop.label = "RPF Nbr Address"
    prop.isOper = True
    meta.props.add("rpfNbr", prop)

    prop = PropMeta("str", "rpfSrc", "rpfSrc", 24536, PropCategory.REGULAR)
    prop.label = "RPF Source Address"
    prop.isOper = True
    meta.props.add("rpfSrc", prop)

    prop = PropMeta("str", "rtTimeOutInvtl", "rtTimeOutInvtl", 27060, PropCategory.REGULAR)
    prop.label = "Route Timeout Interval"
    prop.isOper = True
    meta.props.add("rtTimeOutInvtl", prop)

    prop = PropMeta("str", "rtType", "rtType", 24538, PropCategory.REGULAR)
    prop.label = "Route Uptime"
    prop.isOper = True
    prop._addConstant("attached", "attached-route", 1)
    prop._addConstant("dataTrig", "data-triggered-route", 4)
    prop._addConstant("fabricFwder", "fabric-forwarder", 16)
    prop._addConstant("rpfOverride", "mfdm-rpf-override", 32)
    prop._addConstant("static", "static-route", 2)
    prop._addConstant("stripeWinner", "stripe-winner", 8)
    meta.props.add("rtType", prop)

    prop = PropMeta("str", "src", "src", 47427, PropCategory.REGULAR)
    prop.label = "Source"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("src", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "swByteCnt", "swByteCnt", 24540, PropCategory.REGULAR)
    prop.label = "Software Byte Count"
    prop.isOper = True
    prop.range = [(1, 4294967295)]
    meta.props.add("swByteCnt", prop)

    prop = PropMeta("str", "swPktCnt", "swPktCnt", 24539, PropCategory.REGULAR)
    prop.label = "Software Packet Count"
    prop.isOper = True
    prop.range = [(1, 4294967295)]
    meta.props.add("swPktCnt", prop)

    prop = PropMeta("str", "ver", "ver", 24530, PropCategory.REGULAR)
    prop.label = "Version"
    prop.isOper = True
    meta.props.add("ver", prop)

    meta.namingProps.append(getattr(meta.props, "src"))
    getattr(meta.props, "src").needDelimiter = True
    meta.namingProps.append(getattr(meta.props, "grp"))
    getattr(meta.props, "grp").needDelimiter = True

    def __init__(self, parentMoOrDn, src, grp, markDirty=True, **creationProps):
        namingVals = [src, grp]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

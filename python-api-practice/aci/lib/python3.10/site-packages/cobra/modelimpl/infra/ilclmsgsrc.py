# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class IlClMsgSrc(Mo):
    """
    The source of illegal cluster messages, which are discarded by LoNode.

    """

    meta = ClassMeta("cobra.model.infra.IlClMsgSrc")

    meta.moClassName = "infraIlClMsgSrc"
    meta.rnFormat = "ilClMsgSrc-%(chassis)s-%(icmsReason)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Controller - Source of Illegal Cluster Messages"
    meta.writeAccessMask = 0x80000000001
    meta.readAccessMask = 0x80000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.infra.LoNode")

    meta.superClasses.add("cobra.model.infra.GeNode")
    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('ilClMsgSrc-', True),
        ('-', True),
    ]

    prop = PropMeta("str", "addr", "addr", 15760, PropCategory.REGULAR)
    prop.label = "In-band IP Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("addr", prop)

    prop = PropMeta("str", "chassis", "chassis", 15761, PropCategory.REGULAR)
    prop.label = "Globally Unique Chassis ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 512)]
    prop.defaultValue = "0"
    prop.defaultValueStr = "0"
    meta.props.add("chassis", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "fbDmNm", "fbDmNm", 15759, PropCategory.REGULAR)
    prop.label = "Fabric Domain Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    prop.defaultValue = "No Name"
    prop.defaultValueStr = "No Name"
    meta.props.add("fbDmNm", prop)

    prop = PropMeta("str", "frstMsgTs", "frstMsgTs", 15762, PropCategory.REGULAR)
    prop.label = "First Message Arrival Timestamp"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "zerotime"
    prop._addConstant("zerotime", "zero-time", 0)
    meta.props.add("frstMsgTs", prop)

    prop = PropMeta("str", "icmsReason", "icmsReason", 16093, PropCategory.REGULAR)
    prop.label = "Cluster Message Rejection Reason"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("apicx_mismatched_serial_number", "apicx-mismatched-serial-number", 27)
    prop._addConstant("apicx_unapproved_serial_number", "apicx-unapproved-serial-number", 26)
    prop._addConstant("expansion_contender_chassis_id_mismatch", "expansion-contender-chassis-id-mismatch", 11)
    prop._addConstant("expansion_contender_fabric_domain_mismatch", "expansion-contender-fabric-domain-mismatch", 10)
    prop._addConstant("expansion_contender_id_is_not_next_to_oper_cluster_size", "expansion-contender-id-is-not-next-to-oper-cluster-size", 9)
    prop._addConstant("expansion_contender_invalid_serial_number", "expansion-contender-invalid-serial-number", 18)
    prop._addConstant("expansion_contender_is_apicx", "expansion-contender-is-apicx", 25)
    prop._addConstant("expansion_contender_is_standby", "expansion-contender-is-standby", 21)
    prop._addConstant("expansion_contender_message_is_not_heartbeat", "expansion-contender-message-is-not-heartbeat", 8)
    prop._addConstant("expansion_contender_mismatched_serial_number", "expansion-contender-mismatched-serial-number", 20)
    prop._addConstant("expansion_contender_operational_cluster_size_difference_larger_than_allowed", "expansion-contender-operational-cluster-size-difference-larger-than-allowed(by-1)", 12)
    prop._addConstant("expansion_contender_tep_address_mismatch", "expansion-contender-tep-address-mismatch", 14)
    prop._addConstant("expansion_contender_tep_address_undetermined", "expansion-contender-tep-address-undetermined", 15)
    prop._addConstant("expansion_contender_unapproved_serial_number", "expansion-contender-unapproved-serial-number", 19)
    prop._addConstant("fabric_domain_mismatch", "fabric-domain-mismatch", 5)
    prop._addConstant("fabric_id_mismatch", "fabric-id-mismatch", 28)
    prop._addConstant("message_incompatibility_between_fabric_nodes", "message-incompatibility-between-fabric-nodes", 13)
    prop._addConstant("operational_cluster_size_difference_larger_than_allowed", "operational-cluster-size-difference-larger-than-allowed(by-1)", 1)
    prop._addConstant("source_chassis_id_mismatch", "source-chassis-id-mismatch", 7)
    prop._addConstant("source_cluster_id_illegal", "source-cluster-id-illegal", 6)
    prop._addConstant("source_doesnt_support_policydistributor", "source-does-not-support-policydistributor-architecture", 24)
    prop._addConstant("source_has_mismatched_target_chassis_id", "source-has-mismatched-target-chassis-id", 2)
    prop._addConstant("source_id_is_outisde_operational_cluster_size", "source-id-is-outisde-operational-cluster-size", 3)
    prop._addConstant("source_is_not_commissioned", "source-is-not-commissioned", 4)
    prop._addConstant("source_tep_address_mismatch", "source-tep-address-mismatch", 16)
    prop._addConstant("source_tep_address_undetermined", "source-tep-address-undetermined", 17)
    prop._addConstant("standby_mismatched_serial_number", "standby-mismatched-serial-number", 23)
    prop._addConstant("standby_unapproved_serial_number", "standby-unapproved-serial-number", 22)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("icmsReason", prop)

    prop = PropMeta("str", "id", "id", 4893, PropCategory.REGULAR)
    prop.label = "Cluster Unique Controller ID"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("local", "local", 255)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("id", prop)

    prop = PropMeta("str", "isFault", "isFault", 16094, PropCategory.REGULAR)
    prop.label = "Is Fault"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("isFault", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "lstMsgTs", "lstMsgTs", 15763, PropCategory.REGULAR)
    prop.label = "Last Message Arrival Timestamp"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "zerotime"
    prop._addConstant("zerotime", "zero-time", 0)
    meta.props.add("lstMsgTs", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 16097, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 15758, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "chassis"))
    meta.namingProps.append(getattr(meta.props, "icmsReason"))

    def __init__(self, parentMoOrDn, chassis, icmsReason, markDirty=True, **creationProps):
        namingVals = [chassis, icmsReason]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

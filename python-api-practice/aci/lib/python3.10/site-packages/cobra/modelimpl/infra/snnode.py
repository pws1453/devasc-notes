# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class SnNode(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.infra.SnNode")

    meta.moClassName = "infraSnNode"
    meta.rnFormat = "serial-%(id)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Serial Number of Cluster Element"
    meta.writeAccessMask = 0x80000000001
    meta.readAccessMask = 0x80080000200041
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))

    meta.parentClasses.add("cobra.model.infra.Cont")

    meta.superClasses.add("cobra.model.infra.GeNode")
    meta.superClasses.add("cobra.model.infra.GeSnNode")
    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('serial-', True),
    ]

    prop = PropMeta("str", "addr", "addr", 22712, PropCategory.REGULAR)
    prop.label = "In-band IP Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("addr", prop)

    prop = PropMeta("str", "adminSt", "adminSt", 44777, PropCategory.REGULAR)
    prop.label = "Administrative State"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "out-of-service"
    prop._addConstant("in-service", "in-service", 2)
    prop._addConstant("out-of-service", "out-of-service", 1)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "annotation", "annotation", 44858, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "apicMode", "apicMode", 28375, PropCategory.REGULAR)
    prop.label = "Apic Mode"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "active"
    prop._addConstant("active", "active-apic", 0)
    prop._addConstant("apicX", "apicx", 2)
    prop._addConstant("standby", "standby-apic", 1)
    meta.props.add("apicMode", prop)

    prop = PropMeta("str", "chassis", "chassis", 22713, PropCategory.REGULAR)
    prop.label = "Globally Unique Chassis ID"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    prop.defaultValue = "0"
    prop.defaultValueStr = "0"
    meta.props.add("chassis", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cntrlSbstState", "cntrlSbstState", 22577, PropCategory.REGULAR)
    prop.label = "Controlled Substance Status"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "undefined"
    prop._addConstant("approved", "approved", 4)
    prop._addConstant("do-something", "do-something", 3)
    prop._addConstant("erased", "erased", 2)
    prop._addConstant("rejected", "rejected", 5)
    prop._addConstant("undefined", "unknown", 1)
    meta.props.add("cntrlSbstState", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 44859, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "id", "id", 22579, PropCategory.REGULAR)
    prop.label = "Cluster Unique Controller ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(0, 64)]
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("local", "local", 255)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("id", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "mbSn", "mbSn", 22576, PropCategory.REGULAR)
    prop.label = "Motherboard Serial Number"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    prop.defaultValue = "0"
    prop.defaultValueStr = "0"
    meta.props.add("mbSn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 22578, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "oobGwIpAddr", "oobGwIpAddr", 33101, PropCategory.REGULAR)
    prop.label = "Out-of-band GW IP Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("oobGwIpAddr", prop)

    prop = PropMeta("str", "oobGwIpv6Addr", "oobGwIpv6Addr", 33103, PropCategory.REGULAR)
    prop.label = "Out-of-band GW IPv6 Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("oobGwIpv6Addr", prop)

    prop = PropMeta("str", "oobIpAddr", "oobIpAddr", 30293, PropCategory.REGULAR)
    prop.label = "Out-of-band IP Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("oobIpAddr", prop)

    prop = PropMeta("str", "oobIpv6Addr", "oobIpv6Addr", 33102, PropCategory.REGULAR)
    prop.label = "Out-of-band IPv6 Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("oobIpv6Addr", prop)

    prop = PropMeta("str", "operSt", "operSt", 44778, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "unregistered"
    prop._addConstant("available", "available", 3)
    prop._addConstant("unavailable", "unavailable", 2)
    prop._addConstant("unregistered", "unregistered", 1)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "podId", "podId", 33100, PropCategory.REGULAR)
    prop.label = "Pod Id"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 255)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("podId", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "routableIpAddr", "routableIpAddr", 45390, PropCategory.REGULAR)
    prop.label = "Routable IP Address"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("routableIpAddr", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    prop = PropMeta("str", "version", "version", 33104, PropCategory.REGULAR)
    prop.label = "Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("version", prop)

    meta.namingProps.append(getattr(meta.props, "id"))

    def __init__(self, parentMoOrDn, id, markDirty=True, **creationProps):
        namingVals = [id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

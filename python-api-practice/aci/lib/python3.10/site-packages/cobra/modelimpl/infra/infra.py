# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Infra(Mo):
    """
    A container for all tenant infra configurations.

    """

    meta = ClassMeta("cobra.model.infra.Infra")

    meta.moClassName = "infraInfra"
    meta.rnFormat = "infra"
    meta.category = MoCategory.REGULAR
    meta.label = "Access Instance"
    meta.writeAccessMask = 0x100000000001
    meta.readAccessMask = 0x69cfbe7000062693
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.childClasses.add("cobra.model.iacl.SpineProfile")
    meta.childClasses.add("cobra.model.poe.InstPol")
    meta.childClasses.add("cobra.model.nws.FwPol")
    meta.childClasses.add("cobra.model.mgmt.NodeGrp")
    meta.childClasses.add("cobra.model.span.FilterGrp")
    meta.childClasses.add("cobra.model.fabric.LinkFlapPol")
    meta.childClasses.add("cobra.model.eqptdiagp.TsOdLeafP")
    meta.childClasses.add("cobra.model.lacp.LagPol")
    meta.childClasses.add("cobra.model.edr.ErrDisRecoverPol")
    meta.childClasses.add("cobra.model.ep.LoopProtectP")
    meta.childClasses.add("cobra.model.infra.NodeCfgCont")
    meta.childClasses.add("cobra.model.infra.OSpineS")
    meta.childClasses.add("cobra.model.topoctrl.FastLinkFailoverInstPol")
    meta.childClasses.add("cobra.model.vns.VmmConfigFile")
    meta.childClasses.add("cobra.model.ep.ControlP")
    meta.childClasses.add("cobra.model.infra.SHPathS")
    meta.childClasses.add("cobra.model.infra.RsResLldpIfPol")
    meta.childClasses.add("cobra.model.qos.SdIfPol")
    meta.childClasses.add("cobra.model.fvns.VlanInstP")
    meta.childClasses.add("cobra.model.stp.EncapInstDef")
    meta.childClasses.add("cobra.model.copp.IfPol")
    meta.childClasses.add("cobra.model.fc.InstPol")
    meta.childClasses.add("cobra.model.span.VSrcGrp")
    meta.childClasses.add("cobra.model.macsec.IfPol")
    meta.childClasses.add("cobra.model.bd.EnforceExceptionCont")
    meta.childClasses.add("cobra.model.infra.RsResLinkFlapPol")
    meta.childClasses.add("cobra.model.mcp.InstPol")
    meta.childClasses.add("cobra.model.iacl.LeafProfile")
    meta.childClasses.add("cobra.model.infra.AccPortP")
    meta.childClasses.add("cobra.model.infra.RsResLacpLagPol")
    meta.childClasses.add("cobra.model.l2.IfPol")
    meta.childClasses.add("cobra.model.l2.PortAuthPol")
    meta.childClasses.add("cobra.model.bfd.Ipv6InstPol")
    meta.childClasses.add("cobra.model.topoctrl.FwdScaleProfilePol")
    meta.childClasses.add("cobra.model.dhcp.PodGrp")
    meta.childClasses.add("cobra.model.mcp.IfPol")
    meta.childClasses.add("cobra.model.fvns.VxlanInstP")
    meta.childClasses.add("cobra.model.fvns.VxlanInstDef")
    meta.childClasses.add("cobra.model.netflow.RecordPol")
    meta.childClasses.add("cobra.model.eqptdiagp.CardHealthPol")
    meta.childClasses.add("cobra.model.ptp.Domain")
    meta.childClasses.add("cobra.model.infra.RsResMcpInstPol")
    meta.childClasses.add("cobra.model.fvns.VsanInstP")
    meta.childClasses.add("cobra.model.eqptdiagp.PortHealthPol")
    meta.childClasses.add("cobra.model.eqptdiagp.BootPol")
    meta.childClasses.add("cobra.model.ptp.Profile")
    meta.childClasses.add("cobra.model.infra.RlPodRedPol")
    meta.childClasses.add("cobra.model.ptp.ProfileTemplate")
    meta.childClasses.add("cobra.model.netflow.ExporterPol")
    meta.childClasses.add("cobra.model.span.CEpDefCont")
    meta.childClasses.add("cobra.model.infra.NodeP")
    meta.childClasses.add("cobra.model.vns.SvcPkgSource")
    meta.childClasses.add("cobra.model.infra.SetPol")
    meta.childClasses.add("cobra.model.infra.RsResMcpIfPol")
    meta.childClasses.add("cobra.model.qos.LlfcIfPol")
    meta.childClasses.add("cobra.model.infra.AccCardP")
    meta.childClasses.add("cobra.model.span.DestGrp")
    meta.childClasses.add("cobra.model.infra.RsResLacpIfPol")
    meta.childClasses.add("cobra.model.bfd.Ipv4InstPol")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.equipment.FlashConfigPol")
    meta.childClasses.add("cobra.model.netflow.NodePol")
    meta.childClasses.add("cobra.model.eqptdiagp.LeTsOdEcc")
    meta.childClasses.add("cobra.model.infra.SpineP")
    meta.childClasses.add("cobra.model.opflexp.Proto")
    meta.childClasses.add("cobra.model.fc.FabricPol")
    meta.childClasses.add("cobra.model.infra.RsResQosInstPol")
    meta.childClasses.add("cobra.model.infra.RsResCdpIfPol")
    meta.childClasses.add("cobra.model.copp.SpineProfile")
    meta.childClasses.add("cobra.model.cdp.IfPol")
    meta.childClasses.add("cobra.model.ep.IpAgingP")
    meta.childClasses.add("cobra.model.infra.RsResNwsFwPol")
    meta.childClasses.add("cobra.model.infra.AttEntityP")
    meta.childClasses.add("cobra.model.infra.PortTrackPol")
    meta.childClasses.add("cobra.model.vns.MDevMgr")
    meta.childClasses.add("cobra.model.fabric.HIfPol")
    meta.childClasses.add("cobra.model.netflow.VmmExporterPol")
    meta.childClasses.add("cobra.model.fc.IfPol")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.dwdm.IfPol")
    meta.childClasses.add("cobra.model.mgmt.PodGrp")
    meta.childClasses.add("cobra.model.infra.OLeafS")
    meta.childClasses.add("cobra.model.infra.IDDef")
    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.netflow.MonitorPol")
    meta.childClasses.add("cobra.model.mon.InfraPol")
    meta.childClasses.add("cobra.model.lldp.IfPol")
    meta.childClasses.add("cobra.model.infra.RsResQoSPol")
    meta.childClasses.add("cobra.model.poe.IfPol")
    meta.childClasses.add("cobra.model.dhcp.RelayP")
    meta.childClasses.add("cobra.model.infra.RsResErrDisRecoverPol")
    meta.childClasses.add("cobra.model.infra.FuncP")
    meta.childClasses.add("cobra.model.qos.PfcIfPol")
    meta.childClasses.add("cobra.model.infrazone.ZoneP")
    meta.childClasses.add("cobra.model.stp.InstPol")
    meta.childClasses.add("cobra.model.fc.VsanAttrP")
    meta.childClasses.add("cobra.model.macsec.PolCont")
    meta.childClasses.add("cobra.model.stp.IfPol")
    meta.childClasses.add("cobra.model.vns.SvcGraphVersion")
    meta.childClasses.add("cobra.model.infra.RsResHIfPol")
    meta.childClasses.add("cobra.model.infra.FexP")
    meta.childClasses.add("cobra.model.qos.InstPol")
    meta.childClasses.add("cobra.model.copp.LeafProfile")
    meta.childClasses.add("cobra.model.fvns.VlanInstDef")
    meta.childClasses.add("cobra.model.infra.PortDirecPol")
    meta.childClasses.add("cobra.model.extdev.DevTypeCont")
    meta.childClasses.add("cobra.model.infra.PodP")
    meta.childClasses.add("cobra.model.qos.DppPol")
    meta.childClasses.add("cobra.model.fmcast.SystemGIPoPol")
    meta.childClasses.add("cobra.model.l2.PortSecurityPol")
    meta.childClasses.add("cobra.model.dhcp.NodeGrp")
    meta.childClasses.add("cobra.model.eqptdiagp.NodeHealthPol")
    meta.childClasses.add("cobra.model.vns.MDev")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.tag.Annotation")
    meta.childClasses.add("cobra.model.infra.RsResDatetimeFormat")
    meta.childClasses.add("cobra.model.vns.MChassis")
    meta.childClasses.add("cobra.model.vtap.NatEntryCont")
    meta.childClasses.add("cobra.model.infra.HPathS")
    meta.childClasses.add("cobra.model.fc.EncapInstDef")
    meta.childClasses.add("cobra.model.stormctrl.IfPol")
    meta.childClasses.add("cobra.model.span.SrcGrp")
    meta.childClasses.add("cobra.model.span.VDestGrp")
    meta.childClasses.add("cobra.model.fvns.McastAddrInstP")
    meta.childClasses.add("cobra.model.lacp.IfPol")
    meta.childClasses.add("cobra.model.infra.RsResMonInfraPol")
    meta.childClasses.add("cobra.model.infra.SpAccPortP")
    meta.childClasses.add("cobra.model.l2.NodeAuthPol")
    meta.childClasses.add("cobra.model.infra.CPMtuPol")
    meta.childClasses.add("cobra.model.infra.RsResLoopProtectPol")
    meta.childClasses.add("cobra.model.infra.SubsDfltPolicy")

    meta.childNamesAndRnPrefix.append(("cobra.model.topoctrl.FastLinkFailoverInstPol", "fastlinkfailoverinstpol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResErrDisRecoverPol", "rsresErrDisRecoverPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.edr.ErrDisRecoverPol", "edrErrDisRecoverPol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.ptp.ProfileTemplate", "ptpprofiletemplate-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResDatetimeFormat", "rsresDatetimeFormat"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResLoopProtectPol", "rsresLoopProtectPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResLinkFlapPol", "rsresLinkFlapPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResMonInfraPol", "rsresMonInfraPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.ep.LoopProtectP", "epLoopProtectP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResLacpLagPol", "rsresLacpLagPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResMcpInstPol", "rsresMcpInstPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.equipment.FlashConfigPol", "flashconfigpol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResQosInstPol", "rsresQosInstPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.netflow.VmmExporterPol", "vmmexporterpol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fc.EncapInstDef", "vsanencapnsdef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.VmmConfigFile", "vmmConfigFile-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResLldpIfPol", "rsresLldpIfPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bd.EnforceExceptionCont", "EnforceExpCont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResLacpIfPol", "rsresLacpIfPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.PortTrackPol", "trackEqptFabP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.PortSecurityPol", "portsecurityP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.SpAccPortP", "spaccportprof-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.SubsDfltPolicy", "subsDfltPolicy"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResMcpIfPol", "rsresMcpIfPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqptdiagp.LeTsOdEcc", "leOdEccDiags-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResCdpIfPol", "rsresCdpIfPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResNwsFwPol", "rsresNwsFwPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fmcast.SystemGIPoPol", "systemgipopol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.stormctrl.IfPol", "stormctrlifp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.mgmt.NodeGrp", "mgmtnodegrp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fabric.LinkFlapPol", "linkflappol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.AccPortP", "accportprof-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.PortAuthPol", "portauthpol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.Ipv6InstPol", "bfdIpv6Inst-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.topoctrl.FwdScaleProfilePol", "fwdscalepol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.netflow.ExporterPol", "exporterpol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.AccCardP", "acccardprof-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bfd.Ipv4InstPol", "bfdIpv4Inst-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.opflexp.Proto", "opflexpproto"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fc.FabricPol", "fcfabricpol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResQoSPol", "rsresQoSPol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.stp.InstPol", "mstpInstPol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vtap.NatEntryCont", "natentrycont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.NodeAuthPol", "nodeauthpol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.iacl.SpineProfile", "iaclspinep-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.NodeCfgCont", "nodecfgcont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.stp.EncapInstDef", "encapnsdef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dhcp.PodGrp", "dhcppodgrp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.ptp.Profile", "ptpprofile-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.SpineProfile", "coppspinep-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.mgmt.PodGrp", "mgmtpodgrp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.netflow.MonitorPol", "monitorpol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.macsec.PolCont", "macsecpcont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RsResHIfPol", "rsresHIfPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.span.FilterGrp", "filtergrp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqptdiagp.TsOdLeafP", "odLpDiags-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.IfPol", "coppifpol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fc.InstPol", "fcinstpol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.macsec.IfPol", "macsecifp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.iacl.LeafProfile", "iaclleafp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.netflow.RecordPol", "recordpol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.ptp.Domain", "ptpdomain-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.span.CEpDefCont", "cepdefcont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dwdm.IfPol", "dwdmifpol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fc.VsanAttrP", "vsanattrp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.copp.LeafProfile", "coppleafp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fvns.VlanInstDef", "vlannsdef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.qos.DppPol", "qosdpppol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dhcp.NodeGrp", "dhcpndgrp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.poe.InstPol", "poeInstP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.lacp.LagPol", "lacplagp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.qos.SdIfPol", "qossdpol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.mcp.InstPol", "mcpInstP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.ep.IpAgingP", "ipAgingP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fabric.HIfPol", "hintfpol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.mon.InfraPol", "moninfra-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.MChassis", "mChassis-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.span.VDestGrp", "vdestgrp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.OSpineS", "ospines-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.ep.ControlP", "epCtrlP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.SHPathS", "shpaths-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.span.VSrcGrp", "vsrcgrp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fvns.VxlanInstP", "vxlanns-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqptdiagp.CardHealthPol", "cardhlth"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqptdiagp.PortHealthPol", "porthlth"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.RlPodRedPol", "rlpodred"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.SetPol", "settings"))
    meta.childNamesAndRnPrefix.append(("cobra.model.span.DestGrp", "destgrp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.netflow.NodePol", "nodepol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.AttEntityP", "attentp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.MDevMgr", "mDevMgr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fc.IfPol", "fcIfPol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.OLeafS", "oleaves-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.lldp.IfPol", "lldpIfP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.FuncP", "funcprof"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.SvcGraphVersion", "svcGraph"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.FexP", "fexprof-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.qos.InstPol", "qosinst-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.PortDirecPol", "prtdirec"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.PodP", "podprof-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqptdiagp.NodeHealthPol", "nodehlth"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fvns.McastAddrInstP", "maddrns-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.lacp.IfPol", "lacpifp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fvns.VlanInstP", "vlanns-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.mcp.IfPol", "mcpIfP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fvns.VsanInstP", "vsanns-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.SpineP", "spprof-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cdp.IfPol", "cdpIfP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.poe.IfPol", "poeIfP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dhcp.RelayP", "relayp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.extdev.DevTypeCont", "devCont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.HPathS", "hpaths-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.span.SrcGrp", "srcgrp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IfPol", "l2IfP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fvns.VxlanInstDef", "nsdef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.NodeP", "nprof-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infrazone.ZoneP", "zonep-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.stp.IfPol", "ifPol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.qos.LlfcIfPol", "llfc-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.IDDef", "iddef"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.MDev", "mDev-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.CPMtuPol", "CPMtu"))
    meta.childNamesAndRnPrefix.append(("cobra.model.nws.FwPol", "fwP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqptdiagp.BootPol", "boot"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.SvcPkgSource", "svc-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.qos.PfcIfPol", "pfc-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.pol.Uni")

    meta.superClasses.add("cobra.model.pol.Dom")
    meta.superClasses.add("cobra.model.pol.Cont")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")

    meta.rnPrefixes = [
        ('infra', False),
    ]

    prop = PropMeta("str", "annotation", "annotation", 37925, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 40064, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14767, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 4940, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    prop.defaultValue = "infra"
    prop.defaultValueStr = "infra"
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15232, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15233, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

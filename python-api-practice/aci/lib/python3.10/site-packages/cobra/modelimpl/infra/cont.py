# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Cont(Mo):
    """
    An APIC cluster is comprised of multiple APIC controllers that provide operators with a unified real time monitoring, diagnostic, and configuration management capability for the ACI fabric.

    """

    meta = ClassMeta("cobra.model.infra.Cont")

    meta.moClassName = "infraCont"
    meta.rnFormat = "av"
    meta.category = MoCategory.REGULAR
    meta.label = "Cluster"
    meta.writeAccessMask = 0x80000000001
    meta.readAccessMask = 0x80080000200041
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.childClasses.add("cobra.model.infra.SnNode")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.infra.WiNode")

    meta.childNamesAndRnPrefix.append(("cobra.model.infra.SnNode", "serial-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.infra.WiNode", "node-"))

    meta.parentClasses.add("cobra.model.fabric.Node")

    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('av', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "drrMd", "drrMd", 41132, PropCategory.REGULAR)
    prop.label = "DRR Mode"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "OFF"
    prop._addConstant("OFF", "drr-disabled", 0)
    prop._addConstant("ON", "drr-active", 1)
    meta.props.add("drrMd", prop)

    prop = PropMeta("str", "dscvMd", "dscvMd", 22523, PropCategory.REGULAR)
    prop.label = "Discovery Mode"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "strict"
    prop._addConstant("permissive", "permissive", 2)
    prop._addConstant("strict", "strict", 1)
    meta.props.add("dscvMd", prop)

    prop = PropMeta("str", "fbDmNm", "fbDmNm", 15655, PropCategory.REGULAR)
    prop.label = "Fabric Domain Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    prop.defaultValue = "No Name"
    prop.defaultValueStr = "No Name"
    meta.props.add("fbDmNm", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14762, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 4901, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "size", "size", 4903, PropCategory.REGULAR)
    prop.label = "Current Size"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("local", "local", 255)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("size", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "strtTs", "strtTs", 4902, PropCategory.REGULAR)
    prop.label = "Start Timestamp"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "zerotime"
    prop._addConstant("zerotime", "zero-time", 0)
    meta.props.add("strtTs", prop)

    prop = PropMeta("str", "uctDiff", "uctDiff", 4904, PropCategory.REGULAR)
    prop.label = "Controller Time Deviation from Unified Cluster Time"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("uctDiff", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class ReplicaStatsHist15min(Mo):
    """
    A class that represents historical statistics for replica in a 15 minute sampling interval.  This class updates every 5 minutes.

    """

    meta = StatsClassMeta("cobra.model.infra.ReplicaStatsHist15min", "replica")

    counter = CounterMeta("persT", CounterCategory.COUNTER, "percentage", "time in persistification")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "persTCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "persTPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "persTMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "persTMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "persTAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "persTSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "persTThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "persTTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "persTRate"
    meta._counters.append(counter)

    counter = CounterMeta("replT", CounterCategory.COUNTER, "percentage", "time in replication")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "replTCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "replTPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "replTMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "replTMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "replTAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "replTSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "replTThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "replTTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "replTRate"
    meta._counters.append(counter)

    meta.moClassName = "infraReplicaStatsHist15min"
    meta.rnFormat = "HDinfraReplicaStats15min-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical replica stats in 15 minute"
    meta.writeAccessMask = 0x80000000001
    meta.readAccessMask = 0x80000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.infra.Replica")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Hist")
    meta.superClasses.add("cobra.model.infra.ReplicaStatsHist")

    meta.rnPrefixes = [
        ('HDinfraReplicaStats15min-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "index", "index", 6663, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "persTAvg", "persTAvg", 9384, PropCategory.IMPLICIT_AVG)
    prop.label = "time in persistification average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("persTAvg", prop)

    prop = PropMeta("str", "persTCum", "persTCum", 9380, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "time in persistification cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("persTCum", prop)

    prop = PropMeta("str", "persTMax", "persTMax", 9383, PropCategory.IMPLICIT_MAX)
    prop.label = "time in persistification maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("persTMax", prop)

    prop = PropMeta("str", "persTMin", "persTMin", 9382, PropCategory.IMPLICIT_MIN)
    prop.label = "time in persistification minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("persTMin", prop)

    prop = PropMeta("str", "persTPer", "persTPer", 9381, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "time in persistification periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("persTPer", prop)

    prop = PropMeta("str", "persTRate", "persTRate", 9388, PropCategory.IMPLICIT_RATE)
    prop.label = "time in persistification rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("persTRate", prop)

    prop = PropMeta("str", "persTSpct", "persTSpct", 9385, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "time in persistification suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("persTSpct", prop)

    prop = PropMeta("str", "persTThr", "persTThr", 9386, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "time in persistification thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("persTThr", prop)

    prop = PropMeta("str", "persTTr", "persTTr", 9387, PropCategory.IMPLICIT_TREND)
    prop.label = "time in persistification trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("persTTr", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "replTAvg", "replTAvg", 9411, PropCategory.IMPLICIT_AVG)
    prop.label = "time in replication average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("replTAvg", prop)

    prop = PropMeta("str", "replTCum", "replTCum", 9407, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "time in replication cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("replTCum", prop)

    prop = PropMeta("str", "replTMax", "replTMax", 9410, PropCategory.IMPLICIT_MAX)
    prop.label = "time in replication maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("replTMax", prop)

    prop = PropMeta("str", "replTMin", "replTMin", 9409, PropCategory.IMPLICIT_MIN)
    prop.label = "time in replication minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("replTMin", prop)

    prop = PropMeta("str", "replTPer", "replTPer", 9408, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "time in replication periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("replTPer", prop)

    prop = PropMeta("str", "replTRate", "replTRate", 9415, PropCategory.IMPLICIT_RATE)
    prop.label = "time in replication rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("replTRate", prop)

    prop = PropMeta("str", "replTSpct", "replTSpct", 9412, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "time in replication suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("replTSpct", prop)

    prop = PropMeta("str", "replTThr", "replTThr", 9413, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "time in replication thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("replTThr", prop)

    prop = PropMeta("str", "replTTr", "replTTr", 9414, PropCategory.IMPLICIT_TREND)
    prop.label = "time in replication trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("replTTr", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

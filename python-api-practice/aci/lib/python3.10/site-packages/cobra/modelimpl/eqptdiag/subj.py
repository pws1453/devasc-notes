# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Subj(Mo):
    """
    

    """

    meta = ClassMeta("cobra.model.eqptdiag.Subj")

    meta.moClassName = "eqptdiagSubj"
    meta.rnFormat = "subj-[%(oDn)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "Equipment Diag Subject"
    meta.writeAccessMask = 0x880080000000001
    meta.readAccessMask = 0x880080000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.eqptdiag.PortTestStats")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.eqptdiag.Rslt")
    meta.childClasses.add("cobra.model.health.Inst")

    meta.childNamesAndRnPrefix.append(("cobra.model.eqptdiag.PortTestStats", "portteststats"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eqptdiag.Rslt", "rslt-"))

    meta.parentClasses.add("cobra.model.eqptdiag.Rule")

    meta.superClasses.add("cobra.model.pol.Compl")
    meta.superClasses.add("cobra.model.eqptdiag.ASubj")
    meta.superClasses.add("cobra.model.test.Subj")

    meta.rnPrefixes = [
        ('subj-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "firstExecFailTs", "firstExecFailTs", 4081, PropCategory.REGULAR)
    prop.label = "First Execution Failure TimeStamp"
    prop.isOper = True
    meta.props.add("firstExecFailTs", prop)

    prop = PropMeta("str", "freq", "freq", 18566, PropCategory.REGULAR)
    prop.label = "Frequency"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "one-shot"
    prop._addConstant("every10mins", "every-10-mins", 600000)
    prop._addConstant("every12hrs", "every-12-hours", 43200000)
    prop._addConstant("every1day", "every-1-day", 86400000)
    prop._addConstant("every1hr", "every-1-hour", 3600000)
    prop._addConstant("every1week", "every-1-week", 604800000)
    prop._addConstant("every2hrs", "every-2-hours", 7200000)
    prop._addConstant("every30mins", "every-30-mins", 1800000)
    prop._addConstant("every4hrs", "every-4-hours", 14400000)
    prop._addConstant("every4weeks", "every-4-weeks", 2419200000)
    prop._addConstant("every5mins", "every-5-mins", 300000)
    prop._addConstant("every8hrs", "every-8-hours", 28800000)
    prop._addConstant("one-shot", "once", 0)
    meta.props.add("freq", prop)

    prop = PropMeta("str", "lastExecFailQual", "lastExecFailQual", 4077, PropCategory.REGULAR)
    prop.label = "Last Execution Failure Qualifier"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("lastExecFailQual", prop)

    prop = PropMeta("str", "lastExecFailTs", "lastExecFailTs", 4082, PropCategory.REGULAR)
    prop.label = "Last Execution Failure TimeStamp"
    prop.isOper = True
    meta.props.add("lastExecFailTs", prop)

    prop = PropMeta("str", "lastExecPassTs", "lastExecPassTs", 4080, PropCategory.REGULAR)
    prop.label = "Last Execution Passed TimeStamp"
    prop.isOper = True
    meta.props.add("lastExecPassTs", prop)

    prop = PropMeta("str", "lastExecTs", "lastExecTs", 4078, PropCategory.REGULAR)
    prop.label = "Last Execution TimeStamp"
    prop.isOper = True
    meta.props.add("lastExecTs", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14501, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "nextExecTs", "nextExecTs", 4079, PropCategory.REGULAR)
    prop.label = "Next Execution TimeStamp"
    prop.isOper = True
    meta.props.add("nextExecTs", prop)

    prop = PropMeta("str", "numExec", "numExec", 4083, PropCategory.REGULAR)
    prop.label = "Execution Count"
    prop.isOper = True
    meta.props.add("numExec", prop)

    prop = PropMeta("str", "numExecConsFail", "numExecConsFail", 4085, PropCategory.REGULAR)
    prop.label = "Consecutive Failed Execution Count"
    prop.isOper = True
    meta.props.add("numExecConsFail", prop)

    prop = PropMeta("str", "numExecFail", "numExecFail", 4084, PropCategory.REGULAR)
    prop.label = "Failed Execution Count"
    prop.isOper = True
    meta.props.add("numExecFail", prop)

    prop = PropMeta("str", "oDn", "oDn", 6387, PropCategory.REGULAR)
    prop.label = "Object DN"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("oDn", prop)

    prop = PropMeta("str", "oPk", "oPk", 4072, PropCategory.REGULAR)
    prop.label = "Object Primary Key"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("oPk", prop)

    prop = PropMeta("str", "oSk", "oSk", 4073, PropCategory.REGULAR)
    prop.label = "Object Secondary Key"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("oSk", prop)

    prop = PropMeta("str", "operSt", "operSt", 4075, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 3
    prop.defaultValueStr = "pending"
    prop._addConstant("fail", "fail", 0)
    prop._addConstant("indeterminate", "indeterminate", 1)
    prop._addConstant("interrupted", "interrupted", 2)
    prop._addConstant("not-acc", "not-accessible", 5)
    prop._addConstant("not-supp", "not-supported", 4)
    prop._addConstant("not-tested", "not-tested", 7)
    prop._addConstant("pass", "pass", 6)
    prop._addConstant("pending", "pending", 3)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 4076, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "oDn"))
    getattr(meta.props, "oDn").needDelimiter = True

    def __init__(self, parentMoOrDn, oDn, markDirty=True, **creationProps):
        namingVals = [oDn]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

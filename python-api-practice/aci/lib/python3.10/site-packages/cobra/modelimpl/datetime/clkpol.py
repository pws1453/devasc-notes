# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class ClkPol(Mo):
    """
    Represents the date/time clock policy information.

    """

    meta = ClassMeta("cobra.model.datetime.ClkPol")

    meta.moClassName = "datetimeClkPol"
    meta.rnFormat = "time"
    meta.category = MoCategory.REGULAR
    meta.label = "Date Time Policy"
    meta.writeAccessMask = 0x10000000001
    meta.readAccessMask = 0x10000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.datetime.NTPIffKey")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.datetime.NtpProvider")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.datetime.NtpAuth")
    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.datetime.NTPIffKey", "secure-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.datetime.NtpProvider", "prov-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.datetime.NtpAuth", "auth-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.top.System")

    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.datetime.APol")
    meta.superClasses.add("cobra.model.pol.Def")

    meta.rnPrefixes = [
        ('time', False),
    ]

    prop = PropMeta("str", "StratumValue", "StratumValue", 34363, PropCategory.REGULAR)
    prop.label = "NTP stratum value, see NTP RFC 5905"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 14)]
    prop.defaultValue = 8
    prop.defaultValueStr = "8"
    prop._addConstant("primary", "primary-server", 1)
    meta.props.add("StratumValue", prop)

    prop = PropMeta("str", "adminSt", "adminSt", 16451, PropCategory.REGULAR)
    prop.label = "Admin State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "authSt", "authSt", 16452, PropCategory.REGULAR)
    prop.label = "Authentication  State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "disabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("authSt", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "clock", "clock", 4397, PropCategory.REGULAR)
    prop.label = "Clock"
    prop.isOper = True
    meta.props.add("clock", prop)

    prop = PropMeta("str", "clockRaw", "clockRaw", 4398, PropCategory.REGULAR)
    prop.label = "ClockRaw"
    prop.isOper = True
    meta.props.add("clockRaw", prop)

    prop = PropMeta("str", "descr", "descr", 28586, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "flags", "flags", 4386, PropCategory.REGULAR)
    prop.label = "Flags"
    prop.isOper = True
    prop._addConstant("synced", "synced", 1)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "leap", "leap", 4387, PropCategory.REGULAR)
    prop.label = "Leap"
    prop.isOper = True
    meta.props.add("leap", prop)

    prop = PropMeta("str", "masterMode", "masterMode", 34362, PropCategory.REGULAR)
    prop.label = "Master clock mode toggle"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "disabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("masterMode", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 19038, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 16450, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ntpdCfgFailedBmp", "ntpdCfgFailedBmp", 15008, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop._addConstant("datetime:ClkPolStratumValue_failed_flag", None, 32)
    prop._addConstant("datetime:ClkPoladminSt_failed_flag", None, 64)
    prop._addConstant("datetime:ClkPolauthSt_failed_flag", None, 128)
    prop._addConstant("datetime:ClkPoldescr_failed_flag", None, 4)
    prop._addConstant("datetime:ClkPollcOwn_failed_flag", None, -9223372036854775808)
    prop._addConstant("datetime:ClkPolmasterMode_failed_flag", None, 256)
    prop._addConstant("datetime:ClkPolmodTs_failed_flag", None, 2305843009213693952)
    prop._addConstant("datetime:ClkPolmonPolDn_failed_flag", None, 16384)
    prop._addConstant("datetime:ClkPolnameAlias_failed_flag", None, 2)
    prop._addConstant("datetime:ClkPolname_failed_flag", None, 1)
    prop._addConstant("datetime:ClkPolownerKey_failed_flag", None, 8)
    prop._addConstant("datetime:ClkPolownerTag_failed_flag", None, 16)
    prop._addConstant("datetime:ClkPolpolDn_failed_flag", None, 524288)
    prop._addConstant("datetime:ClkPolserverState_failed_flag", None, 512)
    meta.props.add("ntpdCfgFailedBmp", prop)

    prop = PropMeta("str", "ntpdCfgFailedTs", "ntpdCfgFailedTs", 15010, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("ntpdCfgFailedTs", prop)

    prop = PropMeta("str", "ntpdCfgState", "ntpdCfgState", 15009, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("ntpdCfgState", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "peer", "peer", 4396, PropCategory.REGULAR)
    prop.label = "Peer"
    prop.isOper = True
    prop.range = [(0, 2147483647)]
    meta.props.add("peer", prop)

    prop = PropMeta("str", "polDn", "polDn", 19056, PropCategory.REGULAR)
    prop.label = "Policy Dn"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("polDn", prop)

    prop = PropMeta("str", "poll", "poll", 4395, PropCategory.REGULAR)
    prop.label = "Poll"
    prop.isOper = True
    prop.range = [(-20, 20)]
    meta.props.add("poll", prop)

    prop = PropMeta("str", "precision", "precision", 4389, PropCategory.REGULAR)
    prop.label = "Precision"
    prop.isOper = True
    meta.props.add("precision", prop)

    prop = PropMeta("str", "refId", "refId", 4392, PropCategory.REGULAR)
    prop.label = "RefId"
    prop.isOper = True
    meta.props.add("refId", prop)

    prop = PropMeta("str", "refName", "refName", 28362, PropCategory.REGULAR)
    prop.label = "RefName"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("refName", prop)

    prop = PropMeta("str", "refTime", "refTime", 4393, PropCategory.REGULAR)
    prop.label = "RefTime"
    prop.isOper = True
    meta.props.add("refTime", prop)

    prop = PropMeta("str", "refTimeRaw", "refTimeRaw", 4394, PropCategory.REGULAR)
    prop.label = "RefTimeRaw"
    prop.isOper = True
    meta.props.add("refTimeRaw", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rootDelay", "rootDelay", 4390, PropCategory.REGULAR)
    prop.label = "RootDelay"
    prop.isOper = True
    meta.props.add("rootDelay", prop)

    prop = PropMeta("str", "rootDispersion", "rootDispersion", 4391, PropCategory.REGULAR)
    prop.label = "RootDispersion"
    prop.isOper = True
    meta.props.add("rootDispersion", prop)

    prop = PropMeta("str", "serverState", "serverState", 34361, PropCategory.REGULAR)
    prop.label = "Server Mode"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "disabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("serverState", prop)

    prop = PropMeta("str", "srvStatus", "srvStatus", 4399, PropCategory.REGULAR)
    prop.label = "SrvStatus"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "unknown"
    prop._addConstant("not_running", "not-running", 2)
    prop._addConstant("not_synchronized", "not-synchronized", 3)
    prop._addConstant("synced_local_clock", "synced-to-local-clock", 4)
    prop._addConstant("synced_local_hw_refclk", "synced-to-local-refclock", 5)
    prop._addConstant("synced_remote_server", "synced-to-remote-ntp-server", 6)
    prop._addConstant("unknown", "unknown", 1)
    meta.props.add("srvStatus", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "stratum", "stratum", 4388, PropCategory.REGULAR)
    prop.label = "Stratum"
    prop.isOper = True
    meta.props.add("stratum", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class IfStatsRx(Mo):
    """
    An object that holds the ARP interface related received statistics.

    """

    meta = ClassMeta("cobra.model.arp.IfStatsRx")

    meta.moClassName = "arpIfStatsRx"
    meta.rnFormat = "ifstatsrx"
    meta.category = MoCategory.REGULAR
    meta.label = "IfStatsRx"
    meta.writeAccessMask = 0x8408020040001
    meta.readAccessMask = 0x8408020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.arp.If")

    meta.rnPrefixes = [
        ('ifstatsrx', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "pktRcvd", "pktRcvd", 2310, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Count"
    prop.isOper = True
    meta.props.add("pktRcvd", prop)

    prop = PropMeta("str", "pktRcvdDrp", "pktRcvdDrp", 2320, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrp", prop)

    prop = PropMeta("str", "pktRcvdDrpArpIfNoMem", "pktRcvdDrpArpIfNoMem", 2333, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Arp if no Mem Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpArpIfNoMem", prop)

    prop = PropMeta("str", "pktRcvdDrpArpRequestIgnore", "pktRcvdDrpArpRequestIgnore", 2345, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Arp Request Ignore Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpArpRequestIgnore", prop)

    prop = PropMeta("str", "pktRcvdDrpBadCtxt", "pktRcvdDrpBadCtxt", 2338, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Bad Context Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpBadCtxt", prop)

    prop = PropMeta("str", "pktRcvdDrpBadIf", "pktRcvdDrpBadIf", 2322, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Bad if Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpBadIf", prop)

    prop = PropMeta("str", "pktRcvdDrpBadL2AddrLen", "pktRcvdDrpBadL2AddrLen", 2325, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Bad L2Addr Len Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpBadL2AddrLen", prop)

    prop = PropMeta("str", "pktRcvdDrpBadL3AddrLen", "pktRcvdDrpBadL3AddrLen", 2326, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Bad L3Addr Len Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpBadL3AddrLen", prop)

    prop = PropMeta("str", "pktRcvdDrpBadLen", "pktRcvdDrpBadLen", 2323, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Bad Len Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpBadLen", prop)

    prop = PropMeta("str", "pktRcvdDrpBadProto", "pktRcvdDrpBadProto", 2324, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Bad Proto Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpBadProto", prop)

    prop = PropMeta("str", "pktRcvdDrpBadSrcMac", "pktRcvdDrpBadSrcMac", 2330, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Bad Src Mac Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpBadSrcMac", prop)

    prop = PropMeta("str", "pktRcvdDrpCtxtNotCreated", "pktRcvdDrpCtxtNotCreated", 2339, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Context not Created Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpCtxtNotCreated", prop)

    prop = PropMeta("str", "pktRcvdDrpDirBcast", "pktRcvdDrpDirBcast", 2328, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Dir Bcast Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpDirBcast", prop)

    prop = PropMeta("str", "pktRcvdDrpGratOnProxyArp", "pktRcvdDrpGratOnProxyArp", 2344, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Grat on Proxy Arp Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpGratOnProxyArp", prop)

    prop = PropMeta("str", "pktRcvdDrpInvalDstIp", "pktRcvdDrpInvalDstIp", 2329, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Inval Dst Ip Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpInvalDstIp", prop)

    prop = PropMeta("str", "pktRcvdDrpInvalSrcIp", "pktRcvdDrpInvalSrcIp", 2327, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Inval Src Ip Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpInvalSrcIp", prop)

    prop = PropMeta("str", "pktRcvdDrpL2FmQueryFail", "pktRcvdDrpL2FmQueryFail", 2346, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop L2Fm Query Fail Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpL2FmQueryFail", prop)

    prop = PropMeta("str", "pktRcvdDrpL2LocalProxyArp", "pktRcvdDrpL2LocalProxyArp", 2340, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop L2 Local Proxy Arp Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpL2LocalProxyArp", prop)

    prop = PropMeta("str", "pktRcvdDrpL2PrtUntrusted", "pktRcvdDrpL2PrtUntrusted", 2342, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop L2 Port Untrusted Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpL2PrtUntrusted", prop)

    prop = PropMeta("str", "pktRcvdDrpL2PureL2Pkt", "pktRcvdDrpL2PureL2Pkt", 2341, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop L2 Pure L2 Pkt Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpL2PureL2Pkt", prop)

    prop = PropMeta("str", "pktRcvdDrpNotForUs", "pktRcvdDrpNotForUs", 2334, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop not for us Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpNotForUs", prop)

    prop = PropMeta("str", "pktRcvdDrpNotInit", "pktRcvdDrpNotInit", 2337, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop not Initialized Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpNotInit", prop)

    prop = PropMeta("str", "pktRcvdDrpOwnSrcIp", "pktRcvdDrpOwnSrcIp", 2332, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop own Src Ip Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpOwnSrcIp", prop)

    prop = PropMeta("str", "pktRcvdDrpOwnSrcMac", "pktRcvdDrpOwnSrcMac", 2331, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop own Src Mac Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpOwnSrcMac", prop)

    prop = PropMeta("str", "pktRcvdDrpStdbyFhrpVip", "pktRcvdDrpStdbyFhrpVip", 2343, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Standby Fhrp Vip Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpStdbyFhrpVip", prop)

    prop = PropMeta("str", "pktRcvdDrpSubnetMismatch", "pktRcvdDrpSubnetMismatch", 2336, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Subnet Mismatch Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpSubnetMismatch", prop)

    prop = PropMeta("str", "pktRcvdDrpTunnelFail", "pktRcvdDrpTunnelFail", 2347, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Drop Tunnel Fail Count"
    prop.isOper = True
    meta.props.add("pktRcvdDrpTunnelFail", prop)

    prop = PropMeta("str", "pktRcvdFastpath", "pktRcvdFastpath", 2318, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Fastpath Count"
    prop.isOper = True
    meta.props.add("pktRcvdFastpath", prop)

    prop = PropMeta("str", "pktRcvdLearnAndDropNotForUs", "pktRcvdLearnAndDropNotForUs", 2335, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Learn and Drop not for us Count"
    prop.isOper = True
    meta.props.add("pktRcvdLearnAndDropNotForUs", prop)

    prop = PropMeta("str", "pktRcvdLocalProxyArp", "pktRcvdLocalProxyArp", 2314, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Local Proxy Arp Count"
    prop.isOper = True
    meta.props.add("pktRcvdLocalProxyArp", prop)

    prop = PropMeta("str", "pktRcvdMbufOp", "pktRcvdMbufOp", 2321, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Mbuf Op Count"
    prop.isOper = True
    meta.props.add("pktRcvdMbufOp", prop)

    prop = PropMeta("str", "pktRcvdProxyArp", "pktRcvdProxyArp", 2313, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Proxy Arp Count"
    prop.isOper = True
    meta.props.add("pktRcvdProxyArp", prop)

    prop = PropMeta("str", "pktRcvdReq", "pktRcvdReq", 2311, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Req Count"
    prop.isOper = True
    meta.props.add("pktRcvdReq", prop)

    prop = PropMeta("str", "pktRcvdReqL2", "pktRcvdReqL2", 2315, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Req Count L2"
    prop.isOper = True
    meta.props.add("pktRcvdReqL2", prop)

    prop = PropMeta("str", "pktRcvdRsp", "pktRcvdRsp", 2312, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Reply Count"
    prop.isOper = True
    meta.props.add("pktRcvdRsp", prop)

    prop = PropMeta("str", "pktRcvdRspL2", "pktRcvdRspL2", 2316, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Reply Count L2"
    prop.isOper = True
    meta.props.add("pktRcvdRspL2", prop)

    prop = PropMeta("str", "pktRcvdSnoop", "pktRcvdSnoop", 2319, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Snoop Count"
    prop.isOper = True
    meta.props.add("pktRcvdSnoop", prop)

    prop = PropMeta("str", "pktRcvdTunnel", "pktRcvdTunnel", 2317, PropCategory.REGULAR)
    prop.label = "Arp Pkt Recv Tunnel Count"
    prop.isOper = True
    meta.props.add("pktRcvdTunnel", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

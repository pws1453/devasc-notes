# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Keepalive(Mo):
    """
    The vPC keepalive definitions.

    """

    meta = ClassMeta("cobra.model.vpc.Keepalive")

    meta.moClassName = "vpcKeepalive"
    meta.rnFormat = "keepalive"
    meta.category = MoCategory.REGULAR
    meta.label = "VPC Keepalive Policy"
    meta.writeAccessMask = 0x200000000001
    meta.readAccessMask = 0x200000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.vpc.Dom")

    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('keepalive', False),
    ]

    prop = PropMeta("str", "avgRecvInterval", "avgRecvInterval", 3646, PropCategory.REGULAR)
    prop.label = "Average Receive Interval"
    prop.isOper = True
    meta.props.add("avgRecvInterval", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "destIp", "destIp", 3627, PropCategory.REGULAR)
    prop.label = "Destination IP"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("destIp", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "firstRecvTime", "firstRecvTime", 3643, PropCategory.REGULAR)
    prop.label = "First Received Time"
    prop.isOper = True
    meta.props.add("firstRecvTime", prop)

    prop = PropMeta("str", "flushTout", "flushTout", 3637, PropCategory.REGULAR)
    prop.label = "Flush Timeout"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(3, 10)]
    prop.defaultValue = 3
    prop.defaultValueStr = "3"
    meta.props.add("flushTout", prop)

    prop = PropMeta("str", "interval", "interval", 3629, PropCategory.REGULAR)
    prop.label = "Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(400, 10000)]
    prop.defaultValue = 1000
    prop.defaultValueStr = "1000"
    meta.props.add("interval", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14549, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 5577, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "operSt", "operSt", 3638, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "not-applicable"
    prop._addConstant("domain-mismatch", "domain-mismatch", 4)
    prop._addConstant("not-applicable", "not-applicable", 0)
    prop._addConstant("operational", "operational", 8)
    prop._addConstant("peer-was-alive", "peer-was-alive", 64)
    prop._addConstant("recv-failed", "recv-failed", 32)
    prop._addConstant("send-failed", "send-failed", 16)
    prop._addConstant("suspended", "suspended", 1)
    prop._addConstant("vrf-invalid", "vrf-invalid", 2)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "peerStateChanges", "peerStateChanges", 3647, PropCategory.REGULAR)
    prop.label = "First Received Time"
    prop.isOper = True
    meta.props.add("peerStateChanges", prop)

    prop = PropMeta("str", "precType", "precType", 3636, PropCategory.REGULAR)
    prop.label = "Precedence Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 7
    prop.defaultValueStr = "routine"
    prop._addConstant("critical", "critical", 2)
    prop._addConstant("flash", "flash", 4)
    prop._addConstant("flash-override", "flash-override", 3)
    prop._addConstant("immediate", "immediate", 5)
    prop._addConstant("internet", "internet", 1)
    prop._addConstant("network", "network", 0)
    prop._addConstant("priority", "priority", 6)
    prop._addConstant("routine", "routine", 7)
    meta.props.add("precType", prop)

    prop = PropMeta("str", "precValue", "precValue", 3635, PropCategory.REGULAR)
    prop.label = "Precedence Value"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 7)]
    prop.defaultValue = 6
    prop.defaultValueStr = "6"
    meta.props.add("precValue", prop)

    prop = PropMeta("str", "rcvdPkts", "rcvdPkts", 3645, PropCategory.REGULAR)
    prop.label = "Received Packets"
    prop.isOper = True
    meta.props.add("rcvdPkts", prop)

    prop = PropMeta("str", "recvIf", "recvIf", 3640, PropCategory.REGULAR)
    prop.label = "Received Interface"
    prop.isOper = True
    meta.props.add("recvIf", prop)

    prop = PropMeta("str", "recvTime", "recvTime", 3642, PropCategory.REGULAR)
    prop.label = "Last Received Time"
    prop.isOper = True
    meta.props.add("recvTime", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "sendIf", "sendIf", 3639, PropCategory.REGULAR)
    prop.label = "Send Interface"
    prop.isOper = True
    meta.props.add("sendIf", prop)

    prop = PropMeta("str", "sendTime", "sendTime", 3641, PropCategory.REGULAR)
    prop.label = "Last Send Time"
    prop.isOper = True
    meta.props.add("sendTime", prop)

    prop = PropMeta("str", "sentPkts", "sentPkts", 3644, PropCategory.REGULAR)
    prop.label = "Sent Packets"
    prop.isOper = True
    meta.props.add("sentPkts", prop)

    prop = PropMeta("str", "srcIp", "srcIp", 3626, PropCategory.REGULAR)
    prop.label = "Source IP"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("srcIp", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "timeout", "timeout", 3630, PropCategory.REGULAR)
    prop.label = "Timeout"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(3, 20)]
    prop.defaultValue = 5
    prop.defaultValueStr = "5"
    meta.props.add("timeout", prop)

    prop = PropMeta("str", "tosByte", "tosByte", 3632, PropCategory.REGULAR)
    prop.label = "TOS Byte"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("tosByte", prop)

    prop = PropMeta("str", "tosCfgType", "tosCfgType", 3631, PropCategory.REGULAR)
    prop.label = "TOS Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "noCfg"
    prop._addConstant("noCfg", "no-configuration", 0)
    prop._addConstant("precedence-type", "precedence-type", 4)
    prop._addConstant("precedence-value", "precedence-value", 5)
    prop._addConstant("tos-byte", "tos-byte", 1)
    prop._addConstant("tos-type", "tos-type", 3)
    prop._addConstant("tos-value", "tos-value", 2)
    meta.props.add("tosCfgType", prop)

    prop = PropMeta("str", "tosType", "tosType", 3634, PropCategory.REGULAR)
    prop.label = "TOS Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 4
    prop.defaultValueStr = "normal"
    prop._addConstant("max-reliability", "max-reliability", 2)
    prop._addConstant("max-throughput", "max-throughput", 1)
    prop._addConstant("min-delay", "min-delay", 0)
    prop._addConstant("min-monetary-cost", "min-monetary-cost", 3)
    prop._addConstant("normal", "normal", 4)
    meta.props.add("tosType", prop)

    prop = PropMeta("str", "tosValue", "tosValue", 3633, PropCategory.REGULAR)
    prop.label = "TOS Value"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 15)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("tosValue", prop)

    prop = PropMeta("str", "udpPort", "udpPort", 3628, PropCategory.REGULAR)
    prop.label = "UDP Port"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    meta.props.add("udpPort", prop)

    prop = PropMeta("str", "vpcCfgFailedBmp", "vpcCfgFailedBmp", 14993, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop._addConstant("vpc:KeepalivedestIp_failed_flag", None, 8)
    prop._addConstant("vpc:KeepaliveflushTout_failed_flag", None, 32)
    prop._addConstant("vpc:Keepaliveinterval_failed_flag", None, 64)
    prop._addConstant("vpc:KeepalivelcOwn_failed_flag", None, -9223372036854775808)
    prop._addConstant("vpc:KeepalivemodTs_failed_flag", None, 2305843009213693952)
    prop._addConstant("vpc:KeepalivemonPolDn_failed_flag", None, 128)
    prop._addConstant("vpc:KeepalivenameAlias_failed_flag", None, 2)
    prop._addConstant("vpc:Keepalivename_failed_flag", None, 1)
    prop._addConstant("vpc:KeepaliveprecType_failed_flag", None, 1024)
    prop._addConstant("vpc:KeepaliveprecValue_failed_flag", None, 2048)
    prop._addConstant("vpc:KeepalivesrcIp_failed_flag", None, 262144)
    prop._addConstant("vpc:Keepalivetimeout_failed_flag", None, 524288)
    prop._addConstant("vpc:KeepalivetosByte_failed_flag", None, 1048576)
    prop._addConstant("vpc:KeepalivetosCfgType_failed_flag", None, 2097152)
    prop._addConstant("vpc:KeepalivetosType_failed_flag", None, 4194304)
    prop._addConstant("vpc:KeepalivetosValue_failed_flag", None, 8388608)
    prop._addConstant("vpc:KeepaliveudpPort_failed_flag", None, 16777216)
    prop._addConstant("vpc:Keepalivevrf_failed_flag", None, 268435456)
    meta.props.add("vpcCfgFailedBmp", prop)

    prop = PropMeta("str", "vpcCfgFailedTs", "vpcCfgFailedTs", 14995, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("vpcCfgFailedTs", prop)

    prop = PropMeta("str", "vpcCfgState", "vpcCfgState", 14994, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("vpcCfgState", prop)

    prop = PropMeta("str", "vrf", "vrf", 3625, PropCategory.REGULAR)
    prop.label = "VRF"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("vrf", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

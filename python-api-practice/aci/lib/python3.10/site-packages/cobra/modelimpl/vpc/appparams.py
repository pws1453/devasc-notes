# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class AppParams(Mo):
    """
    The application parameters.

    """

    meta = ClassMeta("cobra.model.vpc.AppParams")

    meta.moClassName = "vpcAppParams"
    meta.rnFormat = "params-%(appId)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Application Parameters"
    meta.writeAccessMask = 0x200000000001
    meta.readAccessMask = 0x200000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.vpc.AppParamInfo")

    meta.childNamesAndRnPrefix.append(("cobra.model.vpc.AppParamInfo", "param-"))

    meta.parentClasses.add("cobra.model.vpc.Dom")
    meta.parentClasses.add("cobra.model.vpc.If")

    meta.rnPrefixes = [
        ('params-', True),
    ]

    prop = PropMeta("str", "appId", "appId", 3648, PropCategory.REGULAR)
    prop.label = "Application SAP ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("appId", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "locParamLen", "locParamLen", 3650, PropCategory.REGULAR)
    prop.label = "Local Param Length"
    prop.isOper = True
    meta.props.add("locParamLen", prop)

    prop = PropMeta("str", "locParamVal", "locParamVal", 3651, PropCategory.REGULAR)
    prop.label = "Local Param Value"
    prop.isOper = True
    meta.props.add("locParamVal", prop)

    prop = PropMeta("str", "locRsnCode", "locRsnCode", 3649, PropCategory.REGULAR)
    prop.label = "Local Reason Code"
    prop.isOper = True
    meta.props.add("locRsnCode", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "remParamLen", "remParamLen", 3653, PropCategory.REGULAR)
    prop.label = "Remote Param Length"
    prop.isOper = True
    meta.props.add("remParamLen", prop)

    prop = PropMeta("str", "remParamVal", "remParamVal", 3654, PropCategory.REGULAR)
    prop.label = "Remote Param Value"
    prop.isOper = True
    meta.props.add("remParamVal", prop)

    prop = PropMeta("str", "remRsnCode", "remRsnCode", 3652, PropCategory.REGULAR)
    prop.label = "Remoe Reason Code"
    prop.isOper = True
    meta.props.add("remRsnCode", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "appId"))

    def __init__(self, parentMoOrDn, appId, markDirty=True, **creationProps):
        namingVals = [appId]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

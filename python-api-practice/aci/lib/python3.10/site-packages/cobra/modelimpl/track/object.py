# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Object(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.track.Object")

    meta.moClassName = "trackObject"
    meta.rnFormat = "object-%(id)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Placeholder for object which can be of type Interface line protocol state, Interface IPv4/IPv6 routing state, IPv4/IPv6 route reachability, Object track list and Object tracking of IP SLA"
    meta.writeAccessMask = 0x18018020040001
    meta.readAccessMask = 0x18018020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.track.List")
    meta.childClasses.add("cobra.model.track.IpSla")

    meta.childNamesAndRnPrefix.append(("cobra.model.track.IpSla", "ipsla"))
    meta.childNamesAndRnPrefix.append(("cobra.model.track.List", "list"))

    meta.parentClasses.add("cobra.model.track.Inst")

    meta.rnPrefixes = [
        ('object-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "clients", "clients", 45543, PropCategory.REGULAR)
    prop.label = "Number of clients tracking this object"
    prop.isOper = True
    meta.props.add("clients", prop)

    prop = PropMeta("str", "count", "count", 49953, PropCategory.REGULAR)
    prop.label = "count usage"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("count", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "id", "id", 45542, PropCategory.REGULAR)
    prop.label = "Track object ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 2147483647)]
    meta.props.add("id", prop)

    prop = PropMeta("str", "lastStateChgTs", "lastStateChgTs", 45755, PropCategory.REGULAR)
    prop.label = "Last state transition time"
    prop.isOper = True
    meta.props.add("lastStateChgTs", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "operSt", "operSt", 45752, PropCategory.REGULAR)
    prop.label = "Operational State of the group"
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "undefined"
    prop._addConstant("down", "down", 0)
    prop._addConstant("undefined", "undefined", 2)
    prop._addConstant("up", "up", 1)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 45753, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("internal-err", "internal-error", 1)
    prop._addConstant("invalid-member-obj", "invalid-member-object", 5)
    prop._addConstant("invalid-thrshld-percent-cfg", "invalid-threshold-percentage-config", 4)
    prop._addConstant("invalid-thrshld-wt-cfg", "invalid-threshold-weight-config", 3)
    prop._addConstant("invalid-type-change", "modification-of-object-type-not-allowed", 2)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "stateChgs", "stateChgs", 45754, PropCategory.REGULAR)
    prop.label = "No. of state transitions"
    prop.isOper = True
    meta.props.add("stateChgs", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "id"))

    def __init__(self, parentMoOrDn, id, markDirty=True, **creationProps):
        namingVals = [id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class List(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.track.List")

    meta.moClassName = "trackList"
    meta.rnFormat = "list"
    meta.category = MoCategory.REGULAR
    meta.label = "list object allows User to track the combined states of multiple objects"
    meta.writeAccessMask = 0x18018020040001
    meta.readAccessMask = 0x18018020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.track.Member")

    meta.childNamesAndRnPrefix.append(("cobra.model.track.Member", "obj-"))

    meta.parentClasses.add("cobra.model.track.Object")

    meta.rnPrefixes = [
        ('list', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "percentageDown", "percentageDown", 45536, PropCategory.REGULAR)
    prop.label = "Percentage Down"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 100)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("percentageDown", prop)

    prop = PropMeta("str", "percentageUp", "percentageUp", 45535, PropCategory.REGULAR)
    prop.label = "Percentage Up"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 100)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("percentageUp", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "type", "type", 45534, PropCategory.REGULAR)
    prop.label = "Type of list object"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 3
    prop.defaultValueStr = "percentage"
    prop._addConstant("percentage", "threshold-percentage", 3)
    prop._addConstant("weight", "threshold-weight", 4)
    meta.props.add("type", prop)

    prop = PropMeta("str", "weightDown", "weightDown", 45538, PropCategory.REGULAR)
    prop.label = "weight down value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("weightDown", prop)

    prop = PropMeta("str", "weightUp", "weightUp", 45537, PropCategory.REGULAR)
    prop.label = "weight up value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("weightUp", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

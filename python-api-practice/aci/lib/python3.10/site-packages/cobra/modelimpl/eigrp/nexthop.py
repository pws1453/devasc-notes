# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Nexthop(Mo):
    """
    The EIGRP next hop.

    """

    meta = ClassMeta("cobra.model.eigrp.Nexthop")

    meta.moClassName = "eigrpNexthop"
    meta.rnFormat = "nh-[%(informer)s]-[%(if)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "Nexthop"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.eigrp.ExtCommNhRec")
    meta.childClasses.add("cobra.model.eigrp.ExtProtNhRec")

    meta.childNamesAndRnPrefix.append(("cobra.model.eigrp.ExtCommNhRec", "extcomm-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.eigrp.ExtProtNhRec", "extrec"))

    meta.parentClasses.add("cobra.model.eigrp.Route")

    meta.superClasses.add("cobra.model.nw.DbRec")
    meta.superClasses.add("cobra.model.l3.DbRec")
    meta.superClasses.add("cobra.model.eigrp.DbRec")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.GEp")

    meta.rnPrefixes = [
        ('nh-', True),
        ('-', True),
    ]

    prop = PropMeta("str", "addr", "addr", 17391, PropCategory.REGULAR)
    prop.label = "Nexthop Address"
    prop.isOper = True
    meta.props.add("addr", prop)

    prop = PropMeta("str", "chgQual", "chgQual", 17395, PropCategory.REGULAR)
    prop.label = "Change Qualifier"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("chgQual", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "delay", "delay", 17397, PropCategory.REGULAR)
    prop.label = "Total Delay"
    prop.isOper = True
    meta.props.add("delay", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "fDist", "fDist", 17393, PropCategory.REGULAR)
    prop.label = "Feasible Distance"
    prop.isOper = True
    meta.props.add("fDist", prop)

    prop = PropMeta("str", "flags", "flags", 17403, PropCategory.REGULAR)
    prop.label = "Nexthop Flags"
    prop.isOper = True
    prop._addConstant("reply-pend", "pending-reply", 2)
    prop._addConstant("sia-pend", "pending-sia-reply", 4)
    prop._addConstant("successor", "successor", 1)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "hops", "hops", 17399, PropCategory.REGULAR)
    prop.label = "Hop Count"
    prop.isOper = True
    meta.props.add("hops", prop)

    prop = PropMeta("str", "if", "if", 17390, PropCategory.REGULAR)
    prop.label = "Interface"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("if", prop)

    prop = PropMeta("str", "informer", "informer", 17389, PropCategory.REGULAR)
    prop.label = "Informer"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("informer", prop)

    prop = PropMeta("str", "load", "load", 17400, PropCategory.REGULAR)
    prop.label = "Load as a fraction of 255"
    prop.isOper = True
    meta.props.add("load", prop)

    prop = PropMeta("str", "minBw", "minBw", 17396, PropCategory.REGULAR)
    prop.label = "Minimum Bandwidth"
    prop.isOper = True
    meta.props.add("minBw", prop)

    prop = PropMeta("str", "minMTU", "minMTU", 17398, PropCategory.REGULAR)
    prop.label = "Minimum MTU"
    prop.isOper = True
    meta.props.add("minMTU", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 16437, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "origin", "origin", 17392, PropCategory.REGULAR)
    prop.label = "Originator"
    prop.isOper = True
    prop.defaultValue = 7
    prop.defaultValueStr = "eigrp"
    prop._addConstant("bgp-vpnv4", "bgp-vpnv4", 4)
    prop._addConstant("connected", "connected", 0)
    prop._addConstant("eigrp", "eigrp", 7)
    prop._addConstant("external", "external-protocol", 3)
    prop._addConstant("redist-connected", "connected-via-leak", 2)
    prop._addConstant("static", "static", 1)
    prop._addConstant("summary", "summary", 5)
    meta.props.add("origin", prop)

    prop = PropMeta("str", "reliability", "reliability", 17401, PropCategory.REGULAR)
    prop.label = "Reliability as a fraction of 255"
    prop.isOper = True
    meta.props.add("reliability", prop)

    prop = PropMeta("str", "repDist", "repDist", 17394, PropCategory.REGULAR)
    prop.label = "Reported Distance"
    prop.isOper = True
    meta.props.add("repDist", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tag", "tag", 17402, PropCategory.REGULAR)
    prop.label = "Internal Tag"
    prop.isOper = True
    meta.props.add("tag", prop)

    prop = PropMeta("str", "uribSt", "uribSt", 17404, PropCategory.REGULAR)
    prop.label = "URIB state"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "in-rib"
    prop._addConstant("add-pend", "add-pending-state", 4)
    prop._addConstant("best", "best-route-in-rib", 2)
    prop._addConstant("del-pend", "delete-pending-state", 8)
    prop._addConstant("in-rib", "programmed-in-the-rib", 1)
    prop._addConstant("up-to-date", "route-is-uptodate", 16)
    meta.props.add("uribSt", prop)

    meta.namingProps.append(getattr(meta.props, "informer"))
    getattr(meta.props, "informer").needDelimiter = True
    meta.namingProps.append(getattr(meta.props, "if"))
    getattr(meta.props, "if").needDelimiter = True

    def __init__(self, parentMoOrDn, informer, if_, markDirty=True, **creationProps):
        namingVals = [informer, if_]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

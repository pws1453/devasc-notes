# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class AdjEp(Mo):
    """
    The neighbor information.

    """

    meta = ClassMeta("cobra.model.eigrp.AdjEp")

    meta.moClassName = "eigrpAdjEp"
    meta.rnFormat = "adj-[%(addr)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "EIGRP Neighbor"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.eigrp.AdjStats")

    meta.childNamesAndRnPrefix.append(("cobra.model.eigrp.AdjStats", "stats"))

    meta.parentClasses.add("cobra.model.eigrp.IfAf")

    meta.superClasses.add("cobra.model.nw.ConnEp")
    meta.superClasses.add("cobra.model.nw.AdjEp")
    meta.superClasses.add("cobra.model.l3.ProtAdjEp")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.ProtAdjEp")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.Ep")

    meta.rnPrefixes = [
        ('adj-', True),
    ]

    prop = PropMeta("str", "addr", "addr", 17319, PropCategory.REGULAR)
    prop.label = "Neighbor Address"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("addr", prop)

    prop = PropMeta("str", "bfdOperSt", "bfdOperSt", 18019, PropCategory.REGULAR)
    prop.label = "BFD Operational State"
    prop.isOper = True
    prop._addConstant("down", "bfd-session-is-down", 0)
    prop._addConstant("up", "bfd-session-is-established", 1)
    meta.props.add("bfdOperSt", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "eigrpMajVer", "eigrpMajVer", 17323, PropCategory.REGULAR)
    prop.label = "Neighbor Eigrp Major Version"
    prop.isOper = True
    meta.props.add("eigrpMajVer", prop)

    prop = PropMeta("str", "eigrpMinVer", "eigrpMinVer", 17324, PropCategory.REGULAR)
    prop.label = "Neighbor Eigrp Minor Version"
    prop.isOper = True
    meta.props.add("eigrpMinVer", prop)

    prop = PropMeta("str", "holdIntvl", "holdIntvl", 17325, PropCategory.REGULAR)
    prop.label = "Neighbor's Hold Interval"
    prop.isOper = True
    prop.range = [(1, 65535)]
    prop.defaultValue = 15
    prop.defaultValueStr = "15"
    meta.props.add("holdIntvl", prop)

    prop = PropMeta("str", "id", "id", 17320, PropCategory.REGULAR)
    prop.label = "Neighbor ID"
    prop.isOper = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "lastHelloTs", "lastHelloTs", 18501, PropCategory.REGULAR)
    prop.label = "Last Hello Timestamp"
    prop.isOper = True
    meta.props.add("lastHelloTs", prop)

    prop = PropMeta("str", "lastResyncTs", "lastResyncTs", 18500, PropCategory.REGULAR)
    prop.label = "Last Resync Timestamp"
    prop.isOper = True
    meta.props.add("lastResyncTs", prop)

    prop = PropMeta("str", "lastUpTs", "lastUpTs", 17329, PropCategory.REGULAR)
    prop.label = "Last Up Timestamp"
    prop.isOper = True
    meta.props.add("lastUpTs", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 18505, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 16432, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "nsfOperSt", "nsfOperSt", 17327, PropCategory.REGULAR)
    prop.label = "NSF Operational State"
    prop.isOper = True
    prop._addConstant("init-gr", "initiated-gr", 2)
    prop._addConstant("need-convg", "need-eot-from-peer", 16)
    prop._addConstant("nsf-start", "nsf-startup-mode", 8)
    prop._addConstant("peer-nsf-convg", "peer-is-waiting-for-convergence", 4)
    prop._addConstant("peer-restart", "peer-is-nsf-restarting", 1)
    meta.props.add("nsfOperSt", prop)

    prop = PropMeta("str", "operSt", "operSt", 17326, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop._addConstant("cr-mode", "conditional-receive-mode", 8)
    prop._addConstant("down", "neighbor-going-down", 32)
    prop._addConstant("init", "initializing", 1)
    prop._addConstant("up", "up", 16)
    prop._addConstant("wait-init", "waiting-for-initialization", 2)
    prop._addConstant("wait-init-ack", "waiting-for-initializing-ack", 4)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 18502, PropCategory.REGULAR)
    prop.label = "Reason for operSt change"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no-change"
    prop._addConstant("asn-chg", "as-number-changed", 23)
    prop._addConstant("auth-failure", "authentication-failure", 12)
    prop._addConstant("auth-keych-chged", "authentication-keychain-changed", 5)
    prop._addConstant("auth-mode-chged", "authentication-mode-changed", 4)
    prop._addConstant("bfd-tear-down", "bfd-session-state-is-down", 3)
    prop._addConstant("holdtime-exp", "hold-time-expiry", 1)
    prop._addConstant("if-disable", "interface-disabled", 34)
    prop._addConstant("if-down", "interface-status-down", 32)
    prop._addConstant("if-goodbye-recvd", "interface-goodbye-message-received", 8)
    prop._addConstant("if-passive", "interface-in-passive-mode", 35)
    prop._addConstant("insuff-mtu", "insufficent-mtu-size", 11)
    prop._addConstant("ip-deconf", "last-ip-address-deconfigured", 31)
    prop._addConstant("k-val-mismatch", "k-value-mismatched", 9)
    prop._addConstant("kill-all", "all-neighbors-killed", 22)
    prop._addConstant("manual", "manually-cleared", 6)
    prop._addConstant("maxhopcnt-chg", "max-hopcount-changed", 27)
    prop._addConstant("mcast-hello-expected", "multicast-hello-expected", 13)
    prop._addConstant("metric-ver-chg", "metric-version-changed", 26)
    prop._addConstant("metric-wt-chg", "metric-weights-changed", 25)
    prop._addConstant("nh-self-chg", "nh-self-config-changed", 37)
    prop._addConstant("no-change", "no-changes", 0)
    prop._addConstant("out-of-sync", "peer-out-of-sync", 16)
    prop._addConstant("peer-goodbye-recvd", "peer-goodbye-received", 10)
    prop._addConstant("peer-graceful-restart", "peer-requested-gr", 40)
    prop._addConstant("peer-info-chg", "peer-info-changed", 28)
    prop._addConstant("peer-nsf-restart", "peer-also-nsf-restarted", 15)
    prop._addConstant("peer-reset-adj", "peer-resets-adjacency", 17)
    prop._addConstant("peer-restart", "peer-restarted", 18)
    prop._addConstant("prefix-limit-exceed", "prefix-limit-exceeded", 20)
    prop._addConstant("proto-shut", "protocol-shutdown", 33)
    prop._addConstant("retry-limit-exceed", "retry-limit-exceeded", 19)
    prop._addConstant("route-conf-chg", "route-configuration-changed", 29)
    prop._addConstant("soo-chg", "soo-is-changed", 39)
    prop._addConstant("split-horizon-chg", "split-horizon-changed", 36)
    prop._addConstant("static-peer-conf", "static-peer-configured", 38)
    prop._addConstant("stuck-in-active", "stuck-in-active", 2)
    prop._addConstant("stuck-in-init", "stuck-in-init-state", 7)
    prop._addConstant("subnet-mismatch", "subnet-mismatched", 30)
    prop._addConstant("summary-conf", "summary-configured", 24)
    prop._addConstant("summary-up", "summary-up,-remove-external-routes", 21)
    prop._addConstant("ucast-hello-expected", "unicast-hello-expected", 14)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "stubFlags", "stubFlags", 17328, PropCategory.REGULAR)
    prop.label = "Stub options"
    prop.isOper = True
    prop._addConstant("connected", "advertise-connected-routes", 1)
    prop._addConstant("external", "advertise-external-routes", 16)
    prop._addConstant("leak", "adjacency-with-leak-map", 32)
    prop._addConstant("static", "advertise-static-routes", 2)
    prop._addConstant("stub", "adjacency-is-a-stub", 8)
    prop._addConstant("summary", "advertise-summary-routes", 4)
    meta.props.add("stubFlags", prop)

    prop = PropMeta("str", "swMajVer", "swMajVer", 17321, PropCategory.REGULAR)
    prop.label = "Neighbor Software Major Version"
    prop.isOper = True
    meta.props.add("swMajVer", prop)

    prop = PropMeta("str", "swMinVer", "swMinVer", 17322, PropCategory.REGULAR)
    prop.label = "Neighbor Software Minor Version"
    prop.isOper = True
    meta.props.add("swMinVer", prop)

    meta.namingProps.append(getattr(meta.props, "addr"))
    getattr(meta.props, "addr").needDelimiter = True

    def __init__(self, parentMoOrDn, addr, markDirty=True, **creationProps):
        namingVals = [addr]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

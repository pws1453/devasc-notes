# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Route(Mo):
    """
    The EIGRP route information.

    """

    meta = ClassMeta("cobra.model.eigrp.Route")

    meta.moClassName = "eigrpRoute"
    meta.rnFormat = "rt-[%(pfx)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "EIGRP Route"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.eigrp.Nexthop")

    meta.childNamesAndRnPrefix.append(("cobra.model.eigrp.Nexthop", "nh-"))

    meta.parentClasses.add("cobra.model.eigrp.Db")

    meta.superClasses.add("cobra.model.nw.DbRec")
    meta.superClasses.add("cobra.model.l3.DbRec")
    meta.superClasses.add("cobra.model.eigrp.DbRec")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.GEp")

    meta.rnPrefixes = [
        ('rt-', True),
    ]

    prop = PropMeta("str", "actStQual", "actStQual", 17384, PropCategory.REGULAR)
    prop.label = "Query Origin Qualifier"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("actStQual", prop)

    prop = PropMeta("str", "chgQual", "chgQual", 17385, PropCategory.REGULAR)
    prop.label = "Last route state transition Qualifier"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("chgQual", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "fDist", "fDist", 17383, PropCategory.REGULAR)
    prop.label = "Feasible Distance"
    prop.isOper = True
    meta.props.add("fDist", prop)

    prop = PropMeta("str", "flags", "flags", 17388, PropCategory.REGULAR)
    prop.label = "Route Flags"
    prop.isOper = True
    prop._addConstant("stuck-act", "stuck-in-active", 1)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "lastActTs", "lastActTs", 17386, PropCategory.REGULAR)
    prop.label = "Last active state timestamp"
    prop.isOper = True
    meta.props.add("lastActTs", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 16437, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "operSt", "operSt", 17382, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "passive"
    prop._addConstant("active", "active", 1)
    prop._addConstant("passive", "passive", 0)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "pfx", "pfx", 17381, PropCategory.REGULAR)
    prop.label = "Address"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("pfx", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "siaQueryCnt", "siaQueryCnt", 17387, PropCategory.REGULAR)
    prop.label = "Number of Stuck-in-active queries sent for the active route"
    prop.isOper = True
    meta.props.add("siaQueryCnt", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "pfx"))
    getattr(meta.props, "pfx").needDelimiter = True

    def __init__(self, parentMoOrDn, pfx, markDirty=True, **creationProps):
        namingVals = [pfx]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class ACloudBase(Mo):
    meta = ClassMeta("cobra.model.hcloud.ACloudBase")

    meta.isAbstract = True
    meta.moClassName = "hcloudACloudBase"


    meta.moClassName = "hcloudACloudBase"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "None"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x101
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.hcloud.RtSelectorToTagParent")
    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.hcloud.RtSelectorToTagParent", "rtselectorToTagParent-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")

    meta.concreteSubClasses.add("cobra.model.hcloud.FailedStatDiagOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.IpIngressRule")
    meta.concreteSubClasses.add("cobra.model.hcloud.IgwOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.TopicRes")
    meta.concreteSubClasses.add("cobra.model.hcloud.SGRuleGroupOper")
    meta.concreteSubClasses.add("cobra.model.hinventory.Inventory")
    meta.concreteSubClasses.add("cobra.model.hcloud.ConfigTaskError")
    meta.concreteSubClasses.add("cobra.model.hcloud.SgIngressRuleOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.EventTaskError")
    meta.concreteSubClasses.add("cobra.model.hinventory.AzurePublicIP")
    meta.concreteSubClasses.add("cobra.model.hcloud.AzureInventoryTaskError")
    meta.concreteSubClasses.add("cobra.model.hcloud.Csr")
    meta.concreteSubClasses.add("cobra.model.hcloud.AvailabilitySetOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.DiskOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.SecurityGroup")
    meta.concreteSubClasses.add("cobra.model.hinventory.Account")
    meta.concreteSubClasses.add("cobra.model.hcloud.SubnetNsgAttachOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.SecurityGroupOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.RsEpToSecurityGroupOper")
    meta.concreteSubClasses.add("cobra.model.hinventory.AvailZone")
    meta.concreteSubClasses.add("cobra.model.hcloud.CertStore")
    meta.concreteSubClasses.add("cobra.model.hinventory.Done")
    meta.concreteSubClasses.add("cobra.model.hcloud.NativeLBOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.CloudWatchRule")
    meta.concreteSubClasses.add("cobra.model.hinventory.Tag")
    meta.concreteSubClasses.add("cobra.model.hcloud.GarbageCollector")
    meta.concreteSubClasses.add("cobra.model.hcloud.Racl")
    meta.concreteSubClasses.add("cobra.model.hinventory.ApplicationSecurityGroup")
    meta.concreteSubClasses.add("cobra.model.hcloud.RaclRule")
    meta.concreteSubClasses.add("cobra.model.hcloud.ScaleSet")
    meta.concreteSubClasses.add("cobra.model.hcloud.EventTaskDone")
    meta.concreteSubClasses.add("cobra.model.hcloud.RsRFltAttData")
    meta.concreteSubClasses.add("cobra.model.hinventory.TargetGroup")
    meta.concreteSubClasses.add("cobra.model.hcloud.SubnetFlowLogPol")
    meta.concreteSubClasses.add("cobra.model.hcloud.IpOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.IpIngressRuleOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.MsgQ")
    meta.concreteSubClasses.add("cobra.model.hinventory.VpnGateway")
    meta.concreteSubClasses.add("cobra.model.hcloud.EndPointOper")
    meta.concreteSubClasses.add("cobra.model.hinventory.ResourceGrp")
    meta.concreteSubClasses.add("cobra.model.hcloud.Region")
    meta.concreteSubClasses.add("cobra.model.hcloud.ProvAccount")
    meta.concreteSubClasses.add("cobra.model.hcloud.ExtEPSelectorData")
    meta.concreteSubClasses.add("cobra.model.hcloud.RuleAction")
    meta.concreteSubClasses.add("cobra.model.hcloud.Certificate")
    meta.concreteSubClasses.add("cobra.model.hcloud.ConfigTaskDone")
    meta.concreteSubClasses.add("cobra.model.hcloud.ResourceMap")
    meta.concreteSubClasses.add("cobra.model.hcloud.ResourceGroupOper")
    meta.concreteSubClasses.add("cobra.model.hinventory.SqlServer")
    meta.concreteSubClasses.add("cobra.model.hinventory.NetworkInterface")
    meta.concreteSubClasses.add("cobra.model.hcloud.RouteTable")
    meta.concreteSubClasses.add("cobra.model.hinventory.LoadBalancer")
    meta.concreteSubClasses.add("cobra.model.hcloud.ExtEPSelector")
    meta.concreteSubClasses.add("cobra.model.hinventory.RouteTableEntry")
    meta.concreteSubClasses.add("cobra.model.hcloud.IpEgressRuleOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.CertificateOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.S3Error")
    meta.concreteSubClasses.add("cobra.model.hcloud.AvailZoneOper")
    meta.concreteSubClasses.add("cobra.model.hinventory.Provider")
    meta.concreteSubClasses.add("cobra.model.hcloud.EndpointData")
    meta.concreteSubClasses.add("cobra.model.hcloud.EvAlertDeployError")
    meta.concreteSubClasses.add("cobra.model.hcloud.AvailZone")
    meta.concreteSubClasses.add("cobra.model.hcloud.LogGrpOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.EvNsDeployError")
    meta.concreteSubClasses.add("cobra.model.hcloud.SgEgressRule")
    meta.concreteSubClasses.add("cobra.model.hinventory.Subnet")
    meta.concreteSubClasses.add("cobra.model.hcloud.Subnet")
    meta.concreteSubClasses.add("cobra.model.hcloud.EPSelector")
    meta.concreteSubClasses.add("cobra.model.hcloud.ProvAcctGC")
    meta.concreteSubClasses.add("cobra.model.hinventory.VpnConnection")
    meta.concreteSubClasses.add("cobra.model.hinventory.CtxCidr")
    meta.concreteSubClasses.add("cobra.model.hinventory.StorageAcct")
    meta.concreteSubClasses.add("cobra.model.hcloud.NetworkInterface")
    meta.concreteSubClasses.add("cobra.model.hcloud.CsrReconfiguration")
    meta.concreteSubClasses.add("cobra.model.hcloud.ExtSecurityGroup")
    meta.concreteSubClasses.add("cobra.model.hcloud.Listener")
    meta.concreteSubClasses.add("cobra.model.hinventory.Region")
    meta.concreteSubClasses.add("cobra.model.hinventory.CustomerGateway")
    meta.concreteSubClasses.add("cobra.model.hinventory.Ctx")
    meta.concreteSubClasses.add("cobra.model.hcloud.SqsError")
    meta.concreteSubClasses.add("cobra.model.hcloud.ListenerRule")
    meta.concreteSubClasses.add("cobra.model.hcloud.ScaleSetNicGroup")
    meta.concreteSubClasses.add("cobra.model.hcloud.AccountOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.ProvMaxEpSecGrp")
    meta.concreteSubClasses.add("cobra.model.hcloud.FailedOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.CsrSummaryOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.VgwOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.StorageBucket")
    meta.concreteSubClasses.add("cobra.model.hcloud.ListenerCertificateOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.CidrOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.SubnetOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.EvAppDeployError")
    meta.concreteSubClasses.add("cobra.model.hinventory.InternetGateway")
    meta.concreteSubClasses.add("cobra.model.hcloud.ListenerOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.InstanceOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.VpcFlowLogPol")
    meta.concreteSubClasses.add("cobra.model.hcloud.EndPoint")
    meta.concreteSubClasses.add("cobra.model.hcloud.RsVpnConnToCgwOper")
    meta.concreteSubClasses.add("cobra.model.hinventory.SecurityGroup")
    meta.concreteSubClasses.add("cobra.model.hcloud.CtxPeeringOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.Instance")
    meta.concreteSubClasses.add("cobra.model.hcloud.ALbStats")
    meta.concreteSubClasses.add("cobra.model.hcloud.Cidr")
    meta.concreteSubClasses.add("cobra.model.hcloud.RuleCondition")
    meta.concreteSubClasses.add("cobra.model.hinventory.PrivateIP")
    meta.concreteSubClasses.add("cobra.model.hcloud.ZoneMappingOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.Cgw")
    meta.concreteSubClasses.add("cobra.model.hcloud.CsrSummary")
    meta.concreteSubClasses.add("cobra.model.hcloud.NativeLB")
    meta.concreteSubClasses.add("cobra.model.hcloud.ListenerRulePriorityOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.SgEgressRuleOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.Account")
    meta.concreteSubClasses.add("cobra.model.hinventory.SqlDb")
    meta.concreteSubClasses.add("cobra.model.hcloud.ProvRegion")
    meta.concreteSubClasses.add("cobra.model.hcloud.RegionOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.ToEPgData")
    meta.concreteSubClasses.add("cobra.model.hcloud.CgwOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.Igw")
    meta.concreteSubClasses.add("cobra.model.hinventory.ComputeInstanceScaleSet")
    meta.concreteSubClasses.add("cobra.model.hcloud.FilterEntryData")
    meta.concreteSubClasses.add("cobra.model.hcloud.TnRegionOwnerDone")
    meta.concreteSubClasses.add("cobra.model.hcloud.TargetGroupOper")
    meta.concreteSubClasses.add("cobra.model.hinventory.RouteTable")
    meta.concreteSubClasses.add("cobra.model.hcloud.RouteTableOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.EvRGDeployError")
    meta.concreteSubClasses.add("cobra.model.hcloud.CloudTrail")
    meta.concreteSubClasses.add("cobra.model.hcloud.Topic")
    meta.concreteSubClasses.add("cobra.model.hcloud.LogGrpPol")
    meta.concreteSubClasses.add("cobra.model.hcloud.ConfigRecorder")
    meta.concreteSubClasses.add("cobra.model.hcloud.Vgw")
    meta.concreteSubClasses.add("cobra.model.hcloud.RouteTableEntry")
    meta.concreteSubClasses.add("cobra.model.hcloud.IpEgressRule")
    meta.concreteSubClasses.add("cobra.model.hcloud.FlowLogOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.TargetOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.Ctx")
    meta.concreteSubClasses.add("cobra.model.hcloud.SgIngressRule")
    meta.concreteSubClasses.add("cobra.model.hcloud.CweError")
    meta.concreteSubClasses.add("cobra.model.hcloud.InventoryTaskError")
    meta.concreteSubClasses.add("cobra.model.hcloud.TargetGroup")
    meta.concreteSubClasses.add("cobra.model.hinventory.EgressRule")
    meta.concreteSubClasses.add("cobra.model.hcloud.ListenerRuleOper")
    meta.concreteSubClasses.add("cobra.model.hinventory.IngressRule")
    meta.concreteSubClasses.add("cobra.model.hinventory.PublicIP")
    meta.concreteSubClasses.add("cobra.model.hcloud.InfraRes")
    meta.concreteSubClasses.add("cobra.model.hcloud.RouteTableEntryOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.CtError")
    meta.concreteSubClasses.add("cobra.model.hcloud.Prov")
    meta.concreteSubClasses.add("cobra.model.hcloud.GenericError")
    meta.concreteSubClasses.add("cobra.model.hcloud.RsSubnetToRTOper")
    meta.concreteSubClasses.add("cobra.model.hinventory.StaleResource")
    meta.concreteSubClasses.add("cobra.model.hinventory.Listener")
    meta.concreteSubClasses.add("cobra.model.hinventory.ComputeInstance")
    meta.concreteSubClasses.add("cobra.model.hcloud.CtxOper")
    meta.concreteSubClasses.add("cobra.model.hcloud.FailedOperHolder")
    meta.concreteSubClasses.add("cobra.model.hcloud.GarbageCollectorError")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "name", "name", 50278, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 50279, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

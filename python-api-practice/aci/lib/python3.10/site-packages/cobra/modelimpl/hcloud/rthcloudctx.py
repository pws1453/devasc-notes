# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class RtHcloudCtx(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = TargetRelationMeta("cobra.model.hcloud.RtHcloudCtx", "cobra.model.cloud.Bookeeping")

    meta.moClassName = "hcloudRtHcloudCtx"
    meta.rnFormat = "rtcloudHcloudCtx-[%(tDn)s]"
    meta.category = MoCategory.RELATIONSHIP_FROM_LOCAL
    meta.label = "Placeholder for bookeeping operation under cloudEpP"
    meta.writeAccessMask = 0x1002001
    meta.readAccessMask = 0x708421002701
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.hcloud.Ctx")

    meta.superClasses.add("cobra.model.reln.From")
    meta.superClasses.add("cobra.model.reln.Inst")

    meta.rnPrefixes = [
        ('rtcloudHcloudCtx-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tCl", "tCl", 51251, PropCategory.REGULAR)
    prop.label = "Target-class"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 14618
    prop.defaultValueStr = "cloudBookeeping"
    prop._addConstant("cloudBookeeping", None, 14618)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("tCl", prop)

    prop = PropMeta("str", "tDn", "tDn", 51250, PropCategory.REGULAR)
    prop.label = "Target-dn"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("tDn", prop)

    meta.namingProps.append(getattr(meta.props, "tDn"))
    getattr(meta.props, "tDn").needDelimiter = True

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("HCloudCtxToHcloudInstance", "hcloudCtx To hcloudInstance", "cobra.model.hcloud.Instance"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("HCloudCtxToHcloudSecurityGroup", "hcloudCtx To hcloudSecurityGroup", "cobra.model.hcloud.SecurityGroup"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("HCloudCtxToCloudExtEPg", "From hcloudCtx (VPC) to cloudExtEPg", "cobra.model.cloud.ExtEPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("HCloudCtxToHcloudIgw", "hcloudCtx To hcloudIgw", "cobra.model.hcloud.Igw"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("HCloudCtxToHcloudVgw", "hcloudCtx To hcloudVgw", "cobra.model.hcloud.Vgw"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("HCloudCtxToHcloudCsr", "hcloudCtx To hcloudCsr", "cobra.model.hcloud.Csr"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("HCloudCtxToCloudZone", "hcloudCtx To cloudZone", "cobra.model.cloud.Zone"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("HCloudCtxToCloudEpg", "From hcloudCtx (VPC) to cloudEPg", "cobra.model.cloud.EPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("HCloudCtxToCloudCtxProfile", "From hcloudCtx (VPC) to cloudCtxProfile", "cobra.model.cloud.CtxProfile"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("HCloudCtxToFvCtx", "From hcloudCtx (VPC) to fvCtx (VRF)", "cobra.model.fv.Ctx"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("HCloudCtxToHCloudEndPoint", "hcloudCtx To hcloudEndPoint", "cobra.model.hcloud.EndPoint"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("HCloudCtxToHCloudCidr", "From hcloudCtx (VPC) to hcloudCidr", "cobra.model.hcloud.Cidr"))

    def __init__(self, parentMoOrDn, tDn, markDirty=True, **creationProps):
        namingVals = [tDn]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

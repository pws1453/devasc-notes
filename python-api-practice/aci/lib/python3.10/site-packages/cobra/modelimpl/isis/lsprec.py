# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class LspRec(Mo):
    """
    The link state packet information records lists the device's neighbors and prefix reachability information.

    """

    meta = ClassMeta("cobra.model.isis.LspRec")

    meta.moClassName = "isisLspRec"
    meta.rnFormat = "lsp-%(sysId)s-%(lanId)s-%(frag)s"
    meta.category = MoCategory.REGULAR
    meta.label = "LSP Record"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.isis.ExtIsRec")
    meta.childClasses.add("cobra.model.isis.IpRec")
    meta.childClasses.add("cobra.model.isis.TlvRec")

    meta.childNamesAndRnPrefix.append(("cobra.model.isis.ExtIsRec", "extisrec-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.isis.TlvRec", "tlvRec-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.isis.IpRec", "iprec-"))

    meta.parentClasses.add("cobra.model.isis.Db")

    meta.superClasses.add("cobra.model.nw.DbRec")
    meta.superClasses.add("cobra.model.l3.DbRec")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.GEp")
    meta.superClasses.add("cobra.model.isis.DbRec")

    meta.rnPrefixes = [
        ('lsp-', True),
        ('-', True),
        ('-', True),
    ]

    prop = PropMeta("str", "areaAddr", "areaAddr", 3243, PropCategory.REGULAR)
    prop.label = "Area Address"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("areaAddr", prop)

    prop = PropMeta("str", "attached", "attached", 3239, PropCategory.REGULAR)
    prop.label = "Attached"
    prop.isOper = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("attached", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "ckSum", "ckSum", 3238, PropCategory.REGULAR)
    prop.label = "Checksum"
    prop.isOper = True
    meta.props.add("ckSum", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "frag", "frag", 3233, PropCategory.REGULAR)
    prop.label = "Fragment Number"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("frag", prop)

    prop = PropMeta("str", "hostName", "hostName", 3246, PropCategory.REGULAR)
    prop.label = "Host Name"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("hostName", prop)

    prop = PropMeta("str", "lanId", "lanId", 3232, PropCategory.REGULAR)
    prop.label = "LAN ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("lanId", prop)

    prop = PropMeta("str", "lifeTime", "lifeTime", 3235, PropCategory.REGULAR)
    prop.label = "Remaining Lifetime"
    prop.isOper = True
    meta.props.add("lifeTime", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 16437, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "nlpId", "nlpId", 3244, PropCategory.REGULAR)
    prop.label = "NLPID"
    prop.isOper = True
    meta.props.add("nlpId", prop)

    prop = PropMeta("str", "overload", "overload", 3241, PropCategory.REGULAR)
    prop.label = "Overload"
    prop.isOper = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("overload", prop)

    prop = PropMeta("str", "partition", "partition", 3240, PropCategory.REGULAR)
    prop.label = "Partition"
    prop.isOper = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("partition", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "routerId", "routerId", 3245, PropCategory.REGULAR)
    prop.label = "Router ID"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("routerId", prop)

    prop = PropMeta("str", "rrmBitMaps", "rrmBitMaps", 3248, PropCategory.REGULAR)
    prop.label = "RRM Bitmaps"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("rrmBitMaps", prop)

    prop = PropMeta("str", "seqNum", "seqNum", 3234, PropCategory.REGULAR)
    prop.label = "Sequence Number"
    prop.isOper = True
    meta.props.add("seqNum", prop)

    prop = PropMeta("str", "srmBitMaps", "srmBitMaps", 3247, PropCategory.REGULAR)
    prop.label = "SRM Bitmaps"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("srmBitMaps", prop)

    prop = PropMeta("str", "ssnBitMaps", "ssnBitMaps", 3249, PropCategory.REGULAR)
    prop.label = "SSN Bitmaps"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("ssnBitMaps", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "sysId", "sysId", 3231, PropCategory.REGULAR)
    prop.label = "System ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("sysId", prop)

    prop = PropMeta("str", "timerExpiryTS", "timerExpiryTS", 3237, PropCategory.REGULAR)
    prop.label = "LSP Timer Expiry Time Stamp"
    prop.isOper = True
    meta.props.add("timerExpiryTS", prop)

    prop = PropMeta("str", "timerType", "timerType", 3236, PropCategory.REGULAR)
    prop.label = "Timer Type"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "invalid"
    prop._addConstant("delete", "delete-timer", 5)
    prop._addConstant("hold", "hold-timer", 3)
    prop._addConstant("invalid", "invalid-timer", 1)
    prop._addConstant("refresh", "refresh-timer", 2)
    prop._addConstant("seqWrap", "sequence-wrap-wait-timer", 6)
    prop._addConstant("zeroAge", "zero-age-timer", 4)
    meta.props.add("timerType", prop)

    prop = PropMeta("str", "type", "type", 3242, PropCategory.REGULAR)
    prop.label = "Level Type"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "l1"
    prop._addConstant("l1", "level1", 1)
    prop._addConstant("l2", "level2", 2)
    meta.props.add("type", prop)

    meta.namingProps.append(getattr(meta.props, "sysId"))
    meta.namingProps.append(getattr(meta.props, "lanId"))
    meta.namingProps.append(getattr(meta.props, "frag"))

    def __init__(self, parentMoOrDn, sysId, lanId, frag, markDirty=True, **creationProps):
        namingVals = [sysId, lanId, frag]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

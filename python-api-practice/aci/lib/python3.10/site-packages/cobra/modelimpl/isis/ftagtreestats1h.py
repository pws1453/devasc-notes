# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class FtagTreeStats1h(Mo):
    """
    A class that represents the most current statistics for FTAG in a 1 hour sampling interval.  This class updates every 15 minutes.

    """

    meta = StatsClassMeta("cobra.model.isis.FtagTreeStats1h", "FTAG")

    counter = CounterMeta("avgAvgPenalty", CounterCategory.COUNTER, "count", "average average penalty")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "avgAvgPenaltyLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "avgAvgPenaltyCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "avgAvgPenaltyPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "avgAvgPenaltyMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "avgAvgPenaltyMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "avgAvgPenaltyAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "avgAvgPenaltySpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "avgAvgPenaltyBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "avgAvgPenaltyThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "avgAvgPenaltyTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "avgAvgPenaltyTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "avgAvgPenaltyRate"
    meta._counters.append(counter)

    counter = CounterMeta("avgMaxPenalty", CounterCategory.COUNTER, "count", "average maximum penalty")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "avgMaxPenaltyLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "avgMaxPenaltyCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "avgMaxPenaltyPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "avgMaxPenaltyMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "avgMaxPenaltyMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "avgMaxPenaltyAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "avgMaxPenaltySpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "avgMaxPenaltyBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "avgMaxPenaltyThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "avgMaxPenaltyTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "avgMaxPenaltyTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "avgMaxPenaltyRate"
    meta._counters.append(counter)

    counter = CounterMeta("curAvgPenalty", CounterCategory.COUNTER, "count", "current average penalty")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "curAvgPenaltyLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "curAvgPenaltyCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "curAvgPenaltyPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "curAvgPenaltyMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "curAvgPenaltyMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "curAvgPenaltyAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "curAvgPenaltySpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "curAvgPenaltyBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "curAvgPenaltyThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "curAvgPenaltyTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "curAvgPenaltyTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "curAvgPenaltyRate"
    meta._counters.append(counter)

    counter = CounterMeta("curMaxPenalty", CounterCategory.COUNTER, "count", "current maximum penalty")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "curMaxPenaltyLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "curMaxPenaltyCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "curMaxPenaltyPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "curMaxPenaltyMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "curMaxPenaltyMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "curMaxPenaltyAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "curMaxPenaltySpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "curMaxPenaltyBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "curMaxPenaltyThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "curMaxPenaltyTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "curMaxPenaltyTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "curMaxPenaltyRate"
    meta._counters.append(counter)

    meta.moClassName = "isisFtagTreeStats1h"
    meta.rnFormat = "CDisisFtagTreeStats1h"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current FTAG stats in 1 hour"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.isis.FmcastTree")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.isis.FtagTreeStats")

    meta.rnPrefixes = [
        ('CDisisFtagTreeStats1h', False),
    ]

    prop = PropMeta("str", "avgAvgPenaltyAvg", "avgAvgPenaltyAvg", 9428, PropCategory.IMPLICIT_AVG)
    prop.label = "average average penalty average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgAvgPenaltyAvg", prop)

    prop = PropMeta("str", "avgAvgPenaltyBase", "avgAvgPenaltyBase", 9423, PropCategory.IMPLICIT_BASELINE)
    prop.label = "average average penalty baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgAvgPenaltyBase", prop)

    prop = PropMeta("str", "avgAvgPenaltyCum", "avgAvgPenaltyCum", 9424, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "average average penalty cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgAvgPenaltyCum", prop)

    prop = PropMeta("str", "avgAvgPenaltyLast", "avgAvgPenaltyLast", 9422, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "average average penalty current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgAvgPenaltyLast", prop)

    prop = PropMeta("str", "avgAvgPenaltyMax", "avgAvgPenaltyMax", 9427, PropCategory.IMPLICIT_MAX)
    prop.label = "average average penalty maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgAvgPenaltyMax", prop)

    prop = PropMeta("str", "avgAvgPenaltyMin", "avgAvgPenaltyMin", 9426, PropCategory.IMPLICIT_MIN)
    prop.label = "average average penalty minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgAvgPenaltyMin", prop)

    prop = PropMeta("str", "avgAvgPenaltyPer", "avgAvgPenaltyPer", 9425, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "average average penalty periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgAvgPenaltyPer", prop)

    prop = PropMeta("str", "avgAvgPenaltyRate", "avgAvgPenaltyRate", 9433, PropCategory.IMPLICIT_RATE)
    prop.label = "average average penalty rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgAvgPenaltyRate", prop)

    prop = PropMeta("str", "avgAvgPenaltySpct", "avgAvgPenaltySpct", 9429, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "average average penalty suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgAvgPenaltySpct", prop)

    prop = PropMeta("str", "avgAvgPenaltyThr", "avgAvgPenaltyThr", 9430, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "average average penalty thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("avgAvgPenaltyThr", prop)

    prop = PropMeta("str", "avgAvgPenaltyTr", "avgAvgPenaltyTr", 9432, PropCategory.IMPLICIT_TREND)
    prop.label = "average average penalty trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgAvgPenaltyTr", prop)

    prop = PropMeta("str", "avgAvgPenaltyTrBase", "avgAvgPenaltyTrBase", 9431, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "average average penalty trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgAvgPenaltyTrBase", prop)

    prop = PropMeta("str", "avgMaxPenaltyAvg", "avgMaxPenaltyAvg", 9455, PropCategory.IMPLICIT_AVG)
    prop.label = "average maximum penalty average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgMaxPenaltyAvg", prop)

    prop = PropMeta("str", "avgMaxPenaltyBase", "avgMaxPenaltyBase", 9450, PropCategory.IMPLICIT_BASELINE)
    prop.label = "average maximum penalty baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgMaxPenaltyBase", prop)

    prop = PropMeta("str", "avgMaxPenaltyCum", "avgMaxPenaltyCum", 9451, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "average maximum penalty cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgMaxPenaltyCum", prop)

    prop = PropMeta("str", "avgMaxPenaltyLast", "avgMaxPenaltyLast", 9449, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "average maximum penalty current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgMaxPenaltyLast", prop)

    prop = PropMeta("str", "avgMaxPenaltyMax", "avgMaxPenaltyMax", 9454, PropCategory.IMPLICIT_MAX)
    prop.label = "average maximum penalty maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgMaxPenaltyMax", prop)

    prop = PropMeta("str", "avgMaxPenaltyMin", "avgMaxPenaltyMin", 9453, PropCategory.IMPLICIT_MIN)
    prop.label = "average maximum penalty minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgMaxPenaltyMin", prop)

    prop = PropMeta("str", "avgMaxPenaltyPer", "avgMaxPenaltyPer", 9452, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "average maximum penalty periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgMaxPenaltyPer", prop)

    prop = PropMeta("str", "avgMaxPenaltyRate", "avgMaxPenaltyRate", 9460, PropCategory.IMPLICIT_RATE)
    prop.label = "average maximum penalty rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgMaxPenaltyRate", prop)

    prop = PropMeta("str", "avgMaxPenaltySpct", "avgMaxPenaltySpct", 9456, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "average maximum penalty suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgMaxPenaltySpct", prop)

    prop = PropMeta("str", "avgMaxPenaltyThr", "avgMaxPenaltyThr", 9457, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "average maximum penalty thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("avgMaxPenaltyThr", prop)

    prop = PropMeta("str", "avgMaxPenaltyTr", "avgMaxPenaltyTr", 9459, PropCategory.IMPLICIT_TREND)
    prop.label = "average maximum penalty trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgMaxPenaltyTr", prop)

    prop = PropMeta("str", "avgMaxPenaltyTrBase", "avgMaxPenaltyTrBase", 9458, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "average maximum penalty trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgMaxPenaltyTrBase", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "curAvgPenaltyAvg", "curAvgPenaltyAvg", 9482, PropCategory.IMPLICIT_AVG)
    prop.label = "current average penalty average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curAvgPenaltyAvg", prop)

    prop = PropMeta("str", "curAvgPenaltyBase", "curAvgPenaltyBase", 9477, PropCategory.IMPLICIT_BASELINE)
    prop.label = "current average penalty baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curAvgPenaltyBase", prop)

    prop = PropMeta("str", "curAvgPenaltyCum", "curAvgPenaltyCum", 9478, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "current average penalty cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curAvgPenaltyCum", prop)

    prop = PropMeta("str", "curAvgPenaltyLast", "curAvgPenaltyLast", 9476, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "current average penalty current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curAvgPenaltyLast", prop)

    prop = PropMeta("str", "curAvgPenaltyMax", "curAvgPenaltyMax", 9481, PropCategory.IMPLICIT_MAX)
    prop.label = "current average penalty maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curAvgPenaltyMax", prop)

    prop = PropMeta("str", "curAvgPenaltyMin", "curAvgPenaltyMin", 9480, PropCategory.IMPLICIT_MIN)
    prop.label = "current average penalty minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curAvgPenaltyMin", prop)

    prop = PropMeta("str", "curAvgPenaltyPer", "curAvgPenaltyPer", 9479, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "current average penalty periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curAvgPenaltyPer", prop)

    prop = PropMeta("str", "curAvgPenaltyRate", "curAvgPenaltyRate", 9487, PropCategory.IMPLICIT_RATE)
    prop.label = "current average penalty rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curAvgPenaltyRate", prop)

    prop = PropMeta("str", "curAvgPenaltySpct", "curAvgPenaltySpct", 9483, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "current average penalty suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curAvgPenaltySpct", prop)

    prop = PropMeta("str", "curAvgPenaltyThr", "curAvgPenaltyThr", 9484, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "current average penalty thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("curAvgPenaltyThr", prop)

    prop = PropMeta("str", "curAvgPenaltyTr", "curAvgPenaltyTr", 9486, PropCategory.IMPLICIT_TREND)
    prop.label = "current average penalty trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curAvgPenaltyTr", prop)

    prop = PropMeta("str", "curAvgPenaltyTrBase", "curAvgPenaltyTrBase", 9485, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "current average penalty trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curAvgPenaltyTrBase", prop)

    prop = PropMeta("str", "curMaxPenaltyAvg", "curMaxPenaltyAvg", 9509, PropCategory.IMPLICIT_AVG)
    prop.label = "current maximum penalty average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curMaxPenaltyAvg", prop)

    prop = PropMeta("str", "curMaxPenaltyBase", "curMaxPenaltyBase", 9504, PropCategory.IMPLICIT_BASELINE)
    prop.label = "current maximum penalty baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curMaxPenaltyBase", prop)

    prop = PropMeta("str", "curMaxPenaltyCum", "curMaxPenaltyCum", 9505, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "current maximum penalty cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curMaxPenaltyCum", prop)

    prop = PropMeta("str", "curMaxPenaltyLast", "curMaxPenaltyLast", 9503, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "current maximum penalty current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curMaxPenaltyLast", prop)

    prop = PropMeta("str", "curMaxPenaltyMax", "curMaxPenaltyMax", 9508, PropCategory.IMPLICIT_MAX)
    prop.label = "current maximum penalty maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curMaxPenaltyMax", prop)

    prop = PropMeta("str", "curMaxPenaltyMin", "curMaxPenaltyMin", 9507, PropCategory.IMPLICIT_MIN)
    prop.label = "current maximum penalty minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curMaxPenaltyMin", prop)

    prop = PropMeta("str", "curMaxPenaltyPer", "curMaxPenaltyPer", 9506, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "current maximum penalty periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curMaxPenaltyPer", prop)

    prop = PropMeta("str", "curMaxPenaltyRate", "curMaxPenaltyRate", 9514, PropCategory.IMPLICIT_RATE)
    prop.label = "current maximum penalty rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curMaxPenaltyRate", prop)

    prop = PropMeta("str", "curMaxPenaltySpct", "curMaxPenaltySpct", 9510, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "current maximum penalty suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curMaxPenaltySpct", prop)

    prop = PropMeta("str", "curMaxPenaltyThr", "curMaxPenaltyThr", 9511, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "current maximum penalty thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("curMaxPenaltyThr", prop)

    prop = PropMeta("str", "curMaxPenaltyTr", "curMaxPenaltyTr", 9513, PropCategory.IMPLICIT_TREND)
    prop.label = "current maximum penalty trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curMaxPenaltyTr", prop)

    prop = PropMeta("str", "curMaxPenaltyTrBase", "curMaxPenaltyTrBase", 9512, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "current maximum penalty trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("curMaxPenaltyTrBase", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class PeerOpen15min(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.bgp.PeerOpen15min", "BGP Peer Open")

    counter = CounterMeta("updateRcvd", CounterCategory.COUNTER, "packets", "Number of Update Messages Received")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "updateRcvdLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "updateRcvdCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "updateRcvdPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "updateRcvdMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "updateRcvdMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "updateRcvdAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "updateRcvdSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "updateRcvdBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "updateRcvdThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "updateRcvdTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "updateRcvdTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "updateRcvdRate"
    meta._counters.append(counter)

    counter = CounterMeta("updateSent", CounterCategory.COUNTER, "packets", "Number of Update Messages Sent")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "updateSentLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "updateSentCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "updateSentPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "updateSentMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "updateSentMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "updateSentAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "updateSentSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "updateSentBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "updateSentThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "updateSentTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "updateSentTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "updateSentRate"
    meta._counters.append(counter)

    counter = CounterMeta("openRcvd", CounterCategory.COUNTER, "packets", "Number of Open Messages Received")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "openRcvdLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "openRcvdCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "openRcvdPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "openRcvdMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "openRcvdMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "openRcvdAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "openRcvdSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "openRcvdBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "openRcvdThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "openRcvdTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "openRcvdTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "openRcvdRate"
    meta._counters.append(counter)

    counter = CounterMeta("openSent", CounterCategory.COUNTER, "packets", "Number of Open Messages Sent")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "openSentLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "openSentCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "openSentPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "openSentMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "openSentMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "openSentAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "openSentSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "openSentBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "openSentThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "openSentTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "openSentTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "openSentRate"
    meta._counters.append(counter)

    meta.moClassName = "bgpPeerOpen15min"
    meta.rnFormat = "CDbgpPeerOpen15min"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current BGP Peer Open stats in 15 minute"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.bgp.Peer")

    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.bgp.PeerOpen")
    meta.superClasses.add("cobra.model.stats.Item")

    meta.rnPrefixes = [
        ('CDbgpPeerOpen15min', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "openRcvdAvg", "openRcvdAvg", 48113, PropCategory.IMPLICIT_AVG)
    prop.label = "Number of Open Messages Received average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openRcvdAvg", prop)

    prop = PropMeta("str", "openRcvdBase", "openRcvdBase", 48108, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Number of Open Messages Received baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openRcvdBase", prop)

    prop = PropMeta("str", "openRcvdCum", "openRcvdCum", 48109, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Number of Open Messages Received cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openRcvdCum", prop)

    prop = PropMeta("str", "openRcvdLast", "openRcvdLast", 48107, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Number of Open Messages Received current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openRcvdLast", prop)

    prop = PropMeta("str", "openRcvdMax", "openRcvdMax", 48112, PropCategory.IMPLICIT_MAX)
    prop.label = "Number of Open Messages Received maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openRcvdMax", prop)

    prop = PropMeta("str", "openRcvdMin", "openRcvdMin", 48111, PropCategory.IMPLICIT_MIN)
    prop.label = "Number of Open Messages Received minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openRcvdMin", prop)

    prop = PropMeta("str", "openRcvdPer", "openRcvdPer", 48110, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Number of Open Messages Received periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openRcvdPer", prop)

    prop = PropMeta("str", "openRcvdRate", "openRcvdRate", 48118, PropCategory.IMPLICIT_RATE)
    prop.label = "Number of Open Messages Received rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openRcvdRate", prop)

    prop = PropMeta("str", "openRcvdSpct", "openRcvdSpct", 48114, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Number of Open Messages Received suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openRcvdSpct", prop)

    prop = PropMeta("str", "openRcvdThr", "openRcvdThr", 48115, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Number of Open Messages Received thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("openRcvdThr", prop)

    prop = PropMeta("str", "openRcvdTr", "openRcvdTr", 48117, PropCategory.IMPLICIT_TREND)
    prop.label = "Number of Open Messages Received trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openRcvdTr", prop)

    prop = PropMeta("str", "openRcvdTrBase", "openRcvdTrBase", 48116, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Number of Open Messages Received trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openRcvdTrBase", prop)

    prop = PropMeta("str", "openSentAvg", "openSentAvg", 48134, PropCategory.IMPLICIT_AVG)
    prop.label = "Number of Open Messages Sent average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openSentAvg", prop)

    prop = PropMeta("str", "openSentBase", "openSentBase", 48129, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Number of Open Messages Sent baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openSentBase", prop)

    prop = PropMeta("str", "openSentCum", "openSentCum", 48130, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Number of Open Messages Sent cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openSentCum", prop)

    prop = PropMeta("str", "openSentLast", "openSentLast", 48128, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Number of Open Messages Sent current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openSentLast", prop)

    prop = PropMeta("str", "openSentMax", "openSentMax", 48133, PropCategory.IMPLICIT_MAX)
    prop.label = "Number of Open Messages Sent maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openSentMax", prop)

    prop = PropMeta("str", "openSentMin", "openSentMin", 48132, PropCategory.IMPLICIT_MIN)
    prop.label = "Number of Open Messages Sent minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openSentMin", prop)

    prop = PropMeta("str", "openSentPer", "openSentPer", 48131, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Number of Open Messages Sent periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openSentPer", prop)

    prop = PropMeta("str", "openSentRate", "openSentRate", 48139, PropCategory.IMPLICIT_RATE)
    prop.label = "Number of Open Messages Sent rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openSentRate", prop)

    prop = PropMeta("str", "openSentSpct", "openSentSpct", 48135, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Number of Open Messages Sent suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openSentSpct", prop)

    prop = PropMeta("str", "openSentThr", "openSentThr", 48136, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Number of Open Messages Sent thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("openSentThr", prop)

    prop = PropMeta("str", "openSentTr", "openSentTr", 48138, PropCategory.IMPLICIT_TREND)
    prop.label = "Number of Open Messages Sent trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openSentTr", prop)

    prop = PropMeta("str", "openSentTrBase", "openSentTrBase", 48137, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Number of Open Messages Sent trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("openSentTrBase", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "updateRcvdAvg", "updateRcvdAvg", 48155, PropCategory.IMPLICIT_AVG)
    prop.label = "Number of Update Messages Received average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateRcvdAvg", prop)

    prop = PropMeta("str", "updateRcvdBase", "updateRcvdBase", 48150, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Number of Update Messages Received baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateRcvdBase", prop)

    prop = PropMeta("str", "updateRcvdCum", "updateRcvdCum", 48151, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Number of Update Messages Received cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateRcvdCum", prop)

    prop = PropMeta("str", "updateRcvdLast", "updateRcvdLast", 48149, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Number of Update Messages Received current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateRcvdLast", prop)

    prop = PropMeta("str", "updateRcvdMax", "updateRcvdMax", 48154, PropCategory.IMPLICIT_MAX)
    prop.label = "Number of Update Messages Received maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateRcvdMax", prop)

    prop = PropMeta("str", "updateRcvdMin", "updateRcvdMin", 48153, PropCategory.IMPLICIT_MIN)
    prop.label = "Number of Update Messages Received minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateRcvdMin", prop)

    prop = PropMeta("str", "updateRcvdPer", "updateRcvdPer", 48152, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Number of Update Messages Received periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateRcvdPer", prop)

    prop = PropMeta("str", "updateRcvdRate", "updateRcvdRate", 48160, PropCategory.IMPLICIT_RATE)
    prop.label = "Number of Update Messages Received rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateRcvdRate", prop)

    prop = PropMeta("str", "updateRcvdSpct", "updateRcvdSpct", 48156, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Number of Update Messages Received suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateRcvdSpct", prop)

    prop = PropMeta("str", "updateRcvdThr", "updateRcvdThr", 48157, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Number of Update Messages Received thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("updateRcvdThr", prop)

    prop = PropMeta("str", "updateRcvdTr", "updateRcvdTr", 48159, PropCategory.IMPLICIT_TREND)
    prop.label = "Number of Update Messages Received trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateRcvdTr", prop)

    prop = PropMeta("str", "updateRcvdTrBase", "updateRcvdTrBase", 48158, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Number of Update Messages Received trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateRcvdTrBase", prop)

    prop = PropMeta("str", "updateSentAvg", "updateSentAvg", 48176, PropCategory.IMPLICIT_AVG)
    prop.label = "Number of Update Messages Sent average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateSentAvg", prop)

    prop = PropMeta("str", "updateSentBase", "updateSentBase", 48171, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Number of Update Messages Sent baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateSentBase", prop)

    prop = PropMeta("str", "updateSentCum", "updateSentCum", 48172, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Number of Update Messages Sent cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateSentCum", prop)

    prop = PropMeta("str", "updateSentLast", "updateSentLast", 48170, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Number of Update Messages Sent current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateSentLast", prop)

    prop = PropMeta("str", "updateSentMax", "updateSentMax", 48175, PropCategory.IMPLICIT_MAX)
    prop.label = "Number of Update Messages Sent maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateSentMax", prop)

    prop = PropMeta("str", "updateSentMin", "updateSentMin", 48174, PropCategory.IMPLICIT_MIN)
    prop.label = "Number of Update Messages Sent minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateSentMin", prop)

    prop = PropMeta("str", "updateSentPer", "updateSentPer", 48173, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Number of Update Messages Sent periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateSentPer", prop)

    prop = PropMeta("str", "updateSentRate", "updateSentRate", 48181, PropCategory.IMPLICIT_RATE)
    prop.label = "Number of Update Messages Sent rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateSentRate", prop)

    prop = PropMeta("str", "updateSentSpct", "updateSentSpct", 48177, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Number of Update Messages Sent suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateSentSpct", prop)

    prop = PropMeta("str", "updateSentThr", "updateSentThr", 48178, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Number of Update Messages Sent thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("updateSentThr", prop)

    prop = PropMeta("str", "updateSentTr", "updateSentTr", 48180, PropCategory.IMPLICIT_TREND)
    prop.label = "Number of Update Messages Sent trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateSentTr", prop)

    prop = PropMeta("str", "updateSentTrBase", "updateSentTrBase", 48179, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Number of Update Messages Sent trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("updateSentTrBase", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

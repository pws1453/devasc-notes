# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class NextHop(Mo):
    """
    The BGP route information for the next hop.

    """

    meta = ClassMeta("cobra.model.bgp.NextHop")

    meta.moClassName = "bgpNextHop"
    meta.rnFormat = "nh-[%(addr)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "Nexthop"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.bgp.AttNextHop")

    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.AttNextHop", "attnh-"))

    meta.parentClasses.add("cobra.model.bgp.DomAf")

    meta.superClasses.add("cobra.model.l3.Db")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.Db")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.GEp")

    meta.rnPrefixes = [
        ('nh-', True),
    ]

    prop = PropMeta("str", "activeRnhEpoch", "activeRnhEpoch", 2660, PropCategory.REGULAR)
    prop.label = "Active RNH Epoch"
    prop.isOper = True
    meta.props.add("activeRnhEpoch", prop)

    prop = PropMeta("str", "addr", "addr", 2651, PropCategory.REGULAR)
    prop.label = "Address"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("addr", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "flags", "flags", 2654, PropCategory.REGULAR)
    prop.label = "Flags"
    prop.isOper = True
    prop._addConstant("attached", "attached", 1)
    prop._addConstant("filtered", "filtered", 8)
    prop._addConstant("local", "local", 2)
    prop._addConstant("reachable", "reachable", 4)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "igpMetric", "igpMetric", 2653, PropCategory.REGULAR)
    prop.label = "IGP Metric"
    prop.isOper = True
    meta.props.add("igpMetric", prop)

    prop = PropMeta("str", "igpPref", "igpPref", 2657, PropCategory.REGULAR)
    prop.label = "IGP Preference"
    prop.isOper = True
    meta.props.add("igpPref", prop)

    prop = PropMeta("str", "igpRtType", "igpRtType", 2658, PropCategory.REGULAR)
    prop.label = "IGP Route Type"
    prop.isOper = True
    meta.props.add("igpRtType", prop)

    prop = PropMeta("str", "lastResolv", "lastResolv", 2655, PropCategory.REGULAR)
    prop.label = "Last Resolved Timestamp"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("lastResolv", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 16436, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "nextAdv", "nextAdv", 2659, PropCategory.REGULAR)
    prop.label = "Next Advertised Timestamp"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("nextAdv", prop)

    prop = PropMeta("str", "pendingRnhEpoch", "pendingRnhEpoch", 2661, PropCategory.REGULAR)
    prop.label = "Pending RNH Epoch"
    prop.isOper = True
    meta.props.add("pendingRnhEpoch", prop)

    prop = PropMeta("str", "resolvedRt", "resolvedRt", 2656, PropCategory.REGULAR)
    prop.label = "Resolved Route Prefix"
    prop.isOper = True
    meta.props.add("resolvedRt", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rtRefCount", "rtRefCount", 2652, PropCategory.REGULAR)
    prop.label = "Refernce Count"
    prop.isOper = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("rtRefCount", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "addr"))
    getattr(meta.props, "addr").needDelimiter = True

    def __init__(self, parentMoOrDn, addr, markDirty=True, **creationProps):
        namingVals = [addr]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

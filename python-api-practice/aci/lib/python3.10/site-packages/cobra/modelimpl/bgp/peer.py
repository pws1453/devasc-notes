# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Peer(Mo):
    """
    The BGP information pertaining to a peer.

    """

    meta = ClassMeta("cobra.model.bgp.Peer")

    meta.moClassName = "bgpPeer"
    meta.rnFormat = "peer-[%(addr)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "BGP Peer"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.bgp.PeerRoute1h")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.bgp.PeerBytes5min")
    meta.childClasses.add("cobra.model.bgp.PeerRoute5min")
    meta.childClasses.add("cobra.model.bgp.PeerBytes1year")
    meta.childClasses.add("cobra.model.bgp.PeerBytes1h")
    meta.childClasses.add("cobra.model.bgp.PeerRouteHist1w")
    meta.childClasses.add("cobra.model.bgp.PeerBytes1d")
    meta.childClasses.add("cobra.model.bgp.PeerRouteHist1d")
    meta.childClasses.add("cobra.model.bgp.PeerMsgHist1qtr")
    meta.childClasses.add("cobra.model.bgp.PeerRouteHist1h")
    meta.childClasses.add("cobra.model.bgp.PeerBytes1w")
    meta.childClasses.add("cobra.model.bgp.PeerBytesHist15min")
    meta.childClasses.add("cobra.model.bgp.PeerMsg1d")
    meta.childClasses.add("cobra.model.bgp.PeerMsg1h")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAlive15min")
    meta.childClasses.add("cobra.model.bgp.PeerMsg1w")
    meta.childClasses.add("cobra.model.bgp.PeerRoute1mo")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAliveHist1qtr")
    meta.childClasses.add("cobra.model.bgp.PeerBytes15min")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAliveHist1year")
    meta.childClasses.add("cobra.model.bgp.PeerOpenHist1d")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAliveHist1h")
    meta.childClasses.add("cobra.model.bgp.PeerMsg5min")
    meta.childClasses.add("cobra.model.bgp.PeerOpenHist1qtr")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAliveHist5min")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAliveHist1d")
    meta.childClasses.add("cobra.model.bgp.PeerMsgHist1d")
    meta.childClasses.add("cobra.model.bgp.PeerBytesHist1mo")
    meta.childClasses.add("cobra.model.bgp.LocalAsn")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAliveHist1w")
    meta.childClasses.add("cobra.model.bgp.PeerMsg1mo")
    meta.childClasses.add("cobra.model.bgp.PeerMsg15min")
    meta.childClasses.add("cobra.model.bgp.PeerRoute1qtr")
    meta.childClasses.add("cobra.model.bgp.PeerBytesHist1qtr")
    meta.childClasses.add("cobra.model.bgp.PeerRouteHist1year")
    meta.childClasses.add("cobra.model.bgp.PeerOpen1qtr")
    meta.childClasses.add("cobra.model.bgp.PeerBytes1mo")
    meta.childClasses.add("cobra.model.bgp.PeerBytes1qtr")
    meta.childClasses.add("cobra.model.bgp.PeerMsgHist1year")
    meta.childClasses.add("cobra.model.bgp.PeerRouteHist15min")
    meta.childClasses.add("cobra.model.bgp.PeerOpenHist5min")
    meta.childClasses.add("cobra.model.bgp.PeerOpen5min")
    meta.childClasses.add("cobra.model.bgp.PeerMsg1year")
    meta.childClasses.add("cobra.model.bgp.PeerMsgHist5min")
    meta.childClasses.add("cobra.model.bgp.PeerFallOver")
    meta.childClasses.add("cobra.model.bgp.PeerMsgHist15min")
    meta.childClasses.add("cobra.model.bgp.PeerOpenHist1w")
    meta.childClasses.add("cobra.model.bgp.PeerOpenHist1year")
    meta.childClasses.add("cobra.model.bgp.PeerAf")
    meta.childClasses.add("cobra.model.bgp.PeerIntervals")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAlive5min")
    meta.childClasses.add("cobra.model.bgp.PeerRoute1d")
    meta.childClasses.add("cobra.model.bgp.PeerRoute1year")
    meta.childClasses.add("cobra.model.bgp.PeerMsgHist1w")
    meta.childClasses.add("cobra.model.bgp.PeerRoute1w")
    meta.childClasses.add("cobra.model.bgp.PeerOpenHist1h")
    meta.childClasses.add("cobra.model.bgp.PeerRouteHist5min")
    meta.childClasses.add("cobra.model.bgp.PeerOpen1w")
    meta.childClasses.add("cobra.model.bgp.PeerOpenHist1mo")
    meta.childClasses.add("cobra.model.bgp.PeerBytesHist5min")
    meta.childClasses.add("cobra.model.bgp.PeerRoute15min")
    meta.childClasses.add("cobra.model.bgp.PeerOpen1d")
    meta.childClasses.add("cobra.model.bgp.PeerOpen1h")
    meta.childClasses.add("cobra.model.bgp.PeerBytesHist1d")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.bgp.PeerMsg1qtr")
    meta.childClasses.add("cobra.model.bgp.PeerBytesHist1year")
    meta.childClasses.add("cobra.model.bgp.PeerBytesHist1h")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAlive1mo")
    meta.childClasses.add("cobra.model.bgp.PeerBytesHist1w")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAliveHist15min")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAlive1d")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAliveHist1mo")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAlive1h")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAlive1w")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAlive1year")
    meta.childClasses.add("cobra.model.bgp.PeerKeepAlive1qtr")
    meta.childClasses.add("cobra.model.bgp.PeerOpen1year")
    meta.childClasses.add("cobra.model.bgp.PeerMsgHist1h")
    meta.childClasses.add("cobra.model.bgp.PeerOpen1mo")
    meta.childClasses.add("cobra.model.bgp.PeerOpen15min")
    meta.childClasses.add("cobra.model.bgp.PeerRouteHist1qtr")
    meta.childClasses.add("cobra.model.bgp.PeerEntry")
    meta.childClasses.add("cobra.model.bgp.PeerOpenHist15min")
    meta.childClasses.add("cobra.model.bgp.PeerMsgHist1mo")
    meta.childClasses.add("cobra.model.bgp.PeerRouteHist1mo")

    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAliveHist1year", "HDbgpPeerKeepAlive1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAliveHist15min", "HDbgpPeerKeepAlive15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAlive15min", "CDbgpPeerKeepAlive15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAliveHist1qtr", "HDbgpPeerKeepAlive1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAliveHist5min", "HDbgpPeerKeepAlive5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAlive1year", "CDbgpPeerKeepAlive1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAlive5min", "CDbgpPeerKeepAlive5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAliveHist1mo", "HDbgpPeerKeepAlive1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAlive1qtr", "CDbgpPeerKeepAlive1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAliveHist1h", "HDbgpPeerKeepAlive1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAliveHist1d", "HDbgpPeerKeepAlive1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAliveHist1w", "HDbgpPeerKeepAlive1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAlive1mo", "CDbgpPeerKeepAlive1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytesHist15min", "HDbgpPeerBytes15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRouteHist1year", "HDbgpPeerRoute1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRouteHist15min", "HDbgpPeerRoute15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytesHist1year", "HDbgpPeerBytes1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAlive1d", "CDbgpPeerKeepAlive1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAlive1h", "CDbgpPeerKeepAlive1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerKeepAlive1w", "CDbgpPeerKeepAlive1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytes1year", "CDbgpPeerBytes1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytes15min", "CDbgpPeerBytes15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytesHist1qtr", "HDbgpPeerBytes1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpenHist1year", "HDbgpPeerOpen1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRoute1year", "CDbgpPeerRoute1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRouteHist5min", "HDbgpPeerRoute5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytesHist5min", "HDbgpPeerBytes5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRoute15min", "CDbgpPeerRoute15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRouteHist1qtr", "HDbgpPeerRoute1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpenHist15min", "HDbgpPeerOpen15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytes5min", "CDbgpPeerBytes5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRoute5min", "CDbgpPeerRoute5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpenHist1qtr", "HDbgpPeerOpen1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytesHist1mo", "HDbgpPeerBytes1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRoute1qtr", "CDbgpPeerRoute1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytes1qtr", "CDbgpPeerBytes1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsgHist1year", "HDbgpPeerMsg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpenHist5min", "HDbgpPeerOpen5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsgHist15min", "HDbgpPeerMsg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpen1year", "CDbgpPeerOpen1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpen15min", "CDbgpPeerOpen15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRouteHist1mo", "HDbgpPeerRoute1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRouteHist1w", "HDbgpPeerRoute1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRouteHist1d", "HDbgpPeerRoute1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsgHist1qtr", "HDbgpPeerMsg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRouteHist1h", "HDbgpPeerRoute1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRoute1mo", "CDbgpPeerRoute1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsg15min", "CDbgpPeerMsg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpen1qtr", "CDbgpPeerOpen1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytes1mo", "CDbgpPeerBytes1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpen5min", "CDbgpPeerOpen5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsg1year", "CDbgpPeerMsg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsgHist5min", "HDbgpPeerMsg5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpenHist1mo", "HDbgpPeerOpen1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytesHist1d", "HDbgpPeerBytes1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytesHist1h", "HDbgpPeerBytes1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytesHist1w", "HDbgpPeerBytes1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRoute1h", "CDbgpPeerRoute1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytes1h", "CDbgpPeerBytes1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytes1d", "CDbgpPeerBytes1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerBytes1w", "CDbgpPeerBytes1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpenHist1d", "HDbgpPeerOpen1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsg5min", "CDbgpPeerMsg5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpenHist1w", "HDbgpPeerOpen1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRoute1d", "CDbgpPeerRoute1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerRoute1w", "CDbgpPeerRoute1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpenHist1h", "HDbgpPeerOpen1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsg1qtr", "CDbgpPeerMsg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpen1mo", "CDbgpPeerOpen1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsgHist1mo", "HDbgpPeerMsg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsgHist1d", "HDbgpPeerMsg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsg1mo", "CDbgpPeerMsg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsgHist1w", "HDbgpPeerMsg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpen1w", "CDbgpPeerOpen1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpen1d", "CDbgpPeerOpen1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerOpen1h", "CDbgpPeerOpen1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsgHist1h", "HDbgpPeerMsg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsg1d", "CDbgpPeerMsg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsg1h", "CDbgpPeerMsg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerMsg1w", "CDbgpPeerMsg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerIntervals", "peerintervals"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerFallOver", "peerfallover"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.LocalAsn", "localasn"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerEntry", "ent-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.PeerAf", "af-"))

    meta.parentClasses.add("cobra.model.bgp.Dom")

    meta.superClasses.add("cobra.model.nw.ConnEp")
    meta.superClasses.add("cobra.model.nw.AdjEp")
    meta.superClasses.add("cobra.model.l3.ProtAdjEp")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.ProtAdjEp")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.Ep")

    meta.rnPrefixes = [
        ('peer-', True),
    ]

    prop = PropMeta("str", "activePfxPeers", "activePfxPeers", 2583, PropCategory.REGULAR)
    prop.label = "Active Prefix Peers"
    prop.isOper = True
    meta.props.add("activePfxPeers", prop)

    prop = PropMeta("str", "addr", "addr", 2576, PropCategory.REGULAR)
    prop.label = "Address"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("addr", prop)

    prop = PropMeta("str", "adminSt", "adminSt", 2577, PropCategory.REGULAR)
    prop.label = "Administrative State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "asn", "asn", 2578, PropCategory.REGULAR)
    prop.label = "Autonomous System Number"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 4294967295)]
    meta.props.add("asn", prop)

    prop = PropMeta("str", "bgpCfgFailedBmp", "bgpCfgFailedBmp", 14984, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop._addConstant("bgp:Peeraddr_failed_flag", None, 4)
    prop._addConstant("bgp:PeeradminSt_failed_flag", None, 8)
    prop._addConstant("bgp:Peerasn_failed_flag", None, 16)
    prop._addConstant("bgp:Peerctrl_failed_flag", None, 256)
    prop._addConstant("bgp:PeerlcOwn_failed_flag", None, -9223372036854775808)
    prop._addConstant("bgp:PeermodTs_failed_flag", None, 2305843009213693952)
    prop._addConstant("bgp:PeermonPolDn_failed_flag", None, 4096)
    prop._addConstant("bgp:Peername_failed_flag", None, 1)
    prop._addConstant("bgp:PeerpasswdSet_failed_flag", None, 8192)
    prop._addConstant("bgp:Peerpassword_failed_flag", None, 16384)
    prop._addConstant("bgp:PeerpeerRole_failed_flag", None, 32768)
    prop._addConstant("bgp:PeerprivateASctrl_failed_flag", None, 65536)
    prop._addConstant("bgp:PeersrcIf_failed_flag", None, 131072)
    prop._addConstant("bgp:Peerttl_failed_flag", None, 524288)
    prop._addConstant("bgp:Peertype_failed_flag", None, 1048576)
    meta.props.add("bgpCfgFailedBmp", prop)

    prop = PropMeta("str", "bgpCfgFailedTs", "bgpCfgFailedTs", 14986, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("bgpCfgFailedTs", prop)

    prop = PropMeta("str", "bgpCfgState", "bgpCfgState", 14985, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("bgpCfgState", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "ctrl", "ctrl", 16995, PropCategory.REGULAR)
    prop.label = "Control"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("bfd", "bfd", 1)
    prop._addConstant("dis-conn-check", "disable-connected-check", 2)
    meta.props.add("ctrl", prop)

    prop = PropMeta("str", "curPfxPeers", "curPfxPeers", 2582, PropCategory.REGULAR)
    prop.label = "Current Prefix Peers"
    prop.isOper = True
    meta.props.add("curPfxPeers", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "maxCurPeers", "maxCurPeers", 2584, PropCategory.REGULAR)
    prop.label = "Maximum Current Peers"
    prop.isOper = True
    meta.props.add("maxCurPeers", prop)

    prop = PropMeta("str", "maxPfxPeers", "maxPfxPeers", 2581, PropCategory.REGULAR)
    prop.label = "Maximum Prefix Peers"
    prop.isOper = True
    meta.props.add("maxPfxPeers", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14449, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 16432, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "passwdSet", "passwdSet", 43408, PropCategory.REGULAR)
    prop.label = "TCP MD5 Authentication"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "disabled"
    prop._addConstant("disabled", None, 0)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("passwdSet", prop)

    prop = PropMeta("str", "password", "password", 2580, PropCategory.REGULAR)
    prop.label = "Password"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isPassword = True
    meta.props.add("password", prop)

    prop = PropMeta("str", "peerRole", "peerRole", 28831, PropCategory.REGULAR)
    prop.label = "Peer's Role"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("inter-pod", "inter-pod-spine", 2)
    prop._addConstant("msite-forwarder", "multi-site-forwarder", 8)
    prop._addConstant("msite-speaker", "multi-site-speaker", 4)
    prop._addConstant("unspecified", "unspecified", 0)
    prop._addConstant("wan", "wan-spine", 1)
    meta.props.add("peerRole", prop)

    prop = PropMeta("str", "privateASctrl", "privateASctrl", 22637, PropCategory.REGULAR)
    prop.label = "Private AS Control"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop._addConstant("remove-all", "remove-all-private-as", 2)
    prop._addConstant("remove-exclusive", "remove-private-as", 1)
    prop._addConstant("replace-as", "replace-private-as-with-local-as", 4)
    meta.props.add("privateASctrl", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "srcIf", "srcIf", 2579, PropCategory.REGULAR)
    prop.label = "Source Interface"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("srcIf", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "totalPfxPeers", "totalPfxPeers", 2585, PropCategory.REGULAR)
    prop.label = "Total Prefix Peers"
    prop.isOper = True
    meta.props.add("totalPfxPeers", prop)

    prop = PropMeta("str", "ttl", "ttl", 16996, PropCategory.REGULAR)
    prop.label = "eBGP Multihop"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 255)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("ttl", prop)

    prop = PropMeta("str", "type", "type", 20642, PropCategory.REGULAR)
    prop.label = "Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 4
    prop.defaultValueStr = "local"
    prop._addConstant("inter-pod-rl", "peer-for-inter-pod-rl-connectivity-from-ext-rr-spine", 128)
    prop._addConstant("inter-site", "peer-for-inter-site-connectivity", 32)
    prop._addConstant("intra-pod", "peer-for-intra-pod-connectivity-in-case-of-multi-site", 64)
    prop._addConstant("intra-site", "peer-for-intra-site-connectivity", 1)
    prop._addConstant("local", "peer-for-local-pod-connectivity", 4)
    prop._addConstant("manual", "peer-configured-manually", 8)
    prop._addConstant("trusted-cloud", "peer-for-trusted-cloud-avs-connectivity", 16)
    prop._addConstant("wan", "peer-for-wan-connectivity", 2)
    meta.props.add("type", prop)

    meta.namingProps.append(getattr(meta.props, "addr"))
    getattr(meta.props, "addr").needDelimiter = True

    def __init__(self, parentMoOrDn, addr, markDirty=True, **creationProps):
        namingVals = [addr]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class DampeningCtrl(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.bgp.DampeningCtrl")

    meta.moClassName = "bgpDampeningCtrl"
    meta.rnFormat = "dampening"
    meta.category = MoCategory.REGULAR
    meta.label = "Dampening Control"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.bgp.DomAf")

    meta.rnPrefixes = [
        ('dampening', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "halfLife", "halfLife", 22641, PropCategory.REGULAR)
    prop.label = "Half Life"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 60)]
    prop.defaultValue = 15
    prop.defaultValueStr = "15"
    meta.props.add("halfLife", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "maxSuppressTime", "maxSuppressTime", 22644, PropCategory.REGULAR)
    prop.label = "Max Suppress Time"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 255)]
    prop.defaultValue = 60
    prop.defaultValueStr = "60"
    meta.props.add("maxSuppressTime", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "reuse", "reuse", 22642, PropCategory.REGULAR)
    prop.label = "Reuse Limit"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 20000)]
    prop.defaultValue = 750
    prop.defaultValueStr = "750"
    meta.props.add("reuse", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rtMap", "rtMap", 22640, PropCategory.REGULAR)
    prop.label = "Route Map"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("rtMap", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "suppress", "suppress", 22643, PropCategory.REGULAR)
    prop.label = "Suppress Limit"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 20000)]
    prop.defaultValue = 2000
    prop.defaultValueStr = "2000"
    meta.props.add("suppress", prop)

    prop = PropMeta("str", "type", "type", 22639, PropCategory.REGULAR)
    prop.label = "Config Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "global"
    prop._addConstant("global", "global-config", 1)
    prop._addConstant("route-map", "route-map-config", 2)
    meta.props.add("type", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Inst(Mo):
    """
    The per BGP instance information. There is only instance supported in BGP.

    """

    meta = ClassMeta("cobra.model.bgp.Inst")

    meta.moClassName = "bgpInst"
    meta.rnFormat = "inst"
    meta.category = MoCategory.REGULAR
    meta.label = "BGP Instance"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.bgp.EncapGroupEvi")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.bgp.Dom")

    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.EncapGroupEvi", "encapgroupevi-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.Dom", "dom-"))

    meta.parentClasses.add("cobra.model.bgp.Entity")

    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.l3.ProtInst")
    meta.superClasses.add("cobra.model.nw.CpInst")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.ProtInst")
    meta.superClasses.add("cobra.model.nw.GEp")

    meta.rnPrefixes = [
        ('inst', False),
    ]

    prop = PropMeta("str", "activateTs", "activateTs", 2697, PropCategory.REGULAR)
    prop.label = "Activation Timestamp"
    prop.isOper = True
    meta.props.add("activateTs", prop)

    prop = PropMeta("str", "adminSt", "adminSt", 3679, PropCategory.REGULAR)
    prop.label = "Admin State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "asPathDbSz", "asPathDbSz", 2703, PropCategory.REGULAR)
    prop.label = "AS Path Database Size"
    prop.isOper = True
    meta.props.add("asPathDbSz", prop)

    prop = PropMeta("str", "asn", "asn", 2692, PropCategory.REGULAR)
    prop.label = "Autonomous System Number"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 4294967295)]
    meta.props.add("asn", prop)

    prop = PropMeta("str", "attribDbSz", "attribDbSz", 2701, PropCategory.REGULAR)
    prop.label = "Attribute Database Size"
    prop.isOper = True
    meta.props.add("attribDbSz", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "createTs", "createTs", 2696, PropCategory.REGULAR)
    prop.label = "Creation Timestamp"
    prop.isOper = True
    meta.props.add("createTs", prop)

    prop = PropMeta("str", "ctrl", "ctrl", 16999, PropCategory.REGULAR)
    prop.label = "Controls"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 64
    prop.defaultValueStr = "fastExtFallover"
    prop._addConstant("fastExtFallover", "enable-fast-external-fallover", 64)
    prop._addConstant("stateful-ha", "stateful-ha", 1)
    meta.props.add("ctrl", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "fabricSoO", "fabricSoO", 27140, PropCategory.REGULAR)
    prop.label = "Fabric Site of Origin"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("fabricSoO", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "mSiteSoO", "mSiteSoO", 33143, PropCategory.REGULAR)
    prop.label = "Multisite Site of Origin"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("mSiteSoO", prop)

    prop = PropMeta("str", "memAlert", "memAlert", 2699, PropCategory.REGULAR)
    prop.label = "Memory Alert Level"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "normal"
    prop._addConstant("critical", "critical", 3)
    prop._addConstant("major", "major", 2)
    prop._addConstant("minor", "minor", 1)
    prop._addConstant("normal", "normal", 0)
    meta.props.add("memAlert", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14453, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 3678, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "numAsPath", "numAsPath", 2702, PropCategory.REGULAR)
    prop.label = "AS Paths"
    prop.isOper = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("numAsPath", prop)

    prop = PropMeta("str", "numRtAttrib", "numRtAttrib", 2700, PropCategory.REGULAR)
    prop.label = "Route Attributes"
    prop.isOper = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("numRtAttrib", prop)

    prop = PropMeta("str", "operErr", "operErr", 3681, PropCategory.REGULAR)
    prop.label = "Operational Errors Qualifier"
    prop.isOper = True
    prop._addConstant("feature-unsupported", "feature-unsupported", 64)
    prop._addConstant("init-err", "initialization-error", 1)
    prop._addConstant("int-err", "internal-error", 8)
    prop._addConstant("ipc-err", "ipc-error", 4)
    prop._addConstant("mem-err", "memory-error", 2)
    prop._addConstant("proto-err", "protocol-error", 32)
    prop._addConstant("sock-err", "socket-error", 16)
    meta.props.add("operErr", prop)

    prop = PropMeta("str", "podSoO", "podSoO", 54117, PropCategory.REGULAR)
    prop.label = "Pod Site of Origin"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("podSoO", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "snmpTrapSt", "snmpTrapSt", 2695, PropCategory.REGULAR)
    prop.label = "Snmp Trap State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "disable"
    prop._addConstant("disable", "disable", 1)
    prop._addConstant("enable", "enable", 1)
    meta.props.add("snmpTrapSt", prop)

    prop = PropMeta("str", "spineRole", "spineRole", 28832, PropCategory.REGULAR)
    prop.label = "Spine Role"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("inter-pod", "inter-pod-spine", 2)
    prop._addConstant("msite-forwarder", "multi-site-forwarder", 8)
    prop._addConstant("msite-speaker", "multi-site-speaker", 4)
    prop._addConstant("unspecified", "unspecified", 0)
    prop._addConstant("wan", "wan-spine", 1)
    meta.props.add("spineRole", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "supprRt", "supprRt", 47344, PropCategory.REGULAR)
    prop.label = "Fib Suppress Pending: Advertise only routes                                   that are programmed in hardware to peers"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("supprRt", prop)

    prop = PropMeta("str", "syslogLvl", "syslogLvl", 2694, PropCategory.REGULAR)
    prop.label = "Syslog Level"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 3
    prop.defaultValueStr = "err"
    prop._addConstant("alert", "alert", 1)
    prop._addConstant("crit", "critical", 2)
    prop._addConstant("debug", "debug", 7)
    prop._addConstant("emerg", "emergency", 0)
    prop._addConstant("err", "error", 3)
    prop._addConstant("inform", "informational", 6)
    prop._addConstant("notif", "notification", 5)
    prop._addConstant("warn", "warning", 4)
    meta.props.add("syslogLvl", prop)

    prop = PropMeta("str", "ver", "ver", 2693, PropCategory.REGULAR)
    prop.label = "BGP Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 4
    prop.defaultValueStr = "v4"
    prop._addConstant("v4", "bgp-version-4", 4)
    meta.props.add("ver", prop)

    prop = PropMeta("str", "waitDoneTs", "waitDoneTs", 2698, PropCategory.REGULAR)
    prop.label = "Wait Done Timestamp"
    prop.isOper = True
    meta.props.add("waitDoneTs", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class If(Mo):
    meta = ClassMeta("cobra.model.l1.If")

    meta.isAbstract = True
    meta.moClassName = "l1If"


    meta.moClassName = "l1If"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "Interface"
    meta.writeAccessMask = 0x100000000001
    meta.readAccessMask = 0x100000020001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.l1.RtSpanSrcToL1IfAtt")
    meta.childClasses.add("cobra.model.nw.RtPathToIf")

    meta.childNamesAndRnPrefix.append(("cobra.model.l1.RtSpanSrcToL1IfAtt", "rtspanSpanSrcToL1IfAtt-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.nw.RtPathToIf", "rtpathToIf-"))

    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.ConnEp")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.If")
    meta.superClasses.add("cobra.model.nw.Ep")

    meta.concreteSubClasses.add("cobra.model.mgmt.MgmtIf")
    meta.concreteSubClasses.add("cobra.model.cnw.AggrIf")
    meta.concreteSubClasses.add("cobra.model.l1.FcPhysIf")
    meta.concreteSubClasses.add("cobra.model.l1.VethIf")
    meta.concreteSubClasses.add("cobra.model.pc.AggrIf")
    meta.concreteSubClasses.add("cobra.model.l1.PhysIf")
    meta.concreteSubClasses.add("cobra.model.pc.FcAggrIf")
    meta.concreteSubClasses.add("cobra.model.cnw.PhysIf")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "adminSt", "adminSt", 3711, PropCategory.REGULAR)
    prop.label = "Administrative State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "down"
    prop._addConstant("down", "down", 1)
    prop._addConstant("up", "up", 2)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "autoNeg", "autoNeg", 3713, PropCategory.REGULAR)
    prop.label = "Auto Negotiation"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "on"
    prop._addConstant("off", "off", 2)
    prop._addConstant("on", "on", 1)
    meta.props.add("autoNeg", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5585, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "fcotChannelNumber", "fcotChannelNumber", 35489, PropCategory.REGULAR)
    prop.label = "Fcot Channel Number"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 96)]
    prop.defaultValue = 32
    prop.defaultValueStr = "Channel32"
    prop._addConstant("Channel1", "freq-191.35-wavelength-1566.72", 1)
    prop._addConstant("Channel10", "freq-191.80-wavelength-1563.05", 10)
    prop._addConstant("Channel11", "freq-191.85-wavelength-1562.64", 11)
    prop._addConstant("Channel12", "freq-191.90-wavelength-1562.23", 12)
    prop._addConstant("Channel13", "freq-191.95-wavelength-1561.83", 13)
    prop._addConstant("Channel14", "freq-192.00-wavelength-1561.42", 14)
    prop._addConstant("Channel15", "freq-192.05-wavelength-1561.01", 15)
    prop._addConstant("Channel16", "freq-192.10-wavelength-1560.61", 16)
    prop._addConstant("Channel17", "freq-192.15-wavelength-1560.20", 17)
    prop._addConstant("Channel18", "freq-192.20-wavelength-1559.79", 18)
    prop._addConstant("Channel19", "freq-192.25-wavelength-1559.39", 19)
    prop._addConstant("Channel2", "freq-191.40-wavelength-1566.31", 2)
    prop._addConstant("Channel20", "freq-192.30-wavelength-1558.98", 20)
    prop._addConstant("Channel21", "freq-192.35-wavelength-1558.58", 21)
    prop._addConstant("Channel22", "freq-192.40-wavelength-1558.17", 22)
    prop._addConstant("Channel23", "freq-192.45-wavelength-1557.77", 23)
    prop._addConstant("Channel24", "freq-192.50-wavelength-1557.36", 24)
    prop._addConstant("Channel25", "freq-192.55-wavelength-1556.96", 25)
    prop._addConstant("Channel26", "freq-192.60-wavelength-1556.55", 26)
    prop._addConstant("Channel27", "freq-192.65-wavelength-1556.15", 27)
    prop._addConstant("Channel28", "freq-192.70-wavelength-1555.75", 28)
    prop._addConstant("Channel29", "freq-192.75-wavelength-1555.34", 29)
    prop._addConstant("Channel3", "freq-191.45-wavelength-1565.90", 3)
    prop._addConstant("Channel30", "freq-192.80-wavelength-1554.94", 30)
    prop._addConstant("Channel31", "freq-192.85-wavelength-1554.54", 31)
    prop._addConstant("Channel32", "freq-192.90-wavelength-1554.13", 32)
    prop._addConstant("Channel33", "freq-192.95-wavelength-1553.73", 33)
    prop._addConstant("Channel34", "freq-193.00-wavelength-1553.33", 34)
    prop._addConstant("Channel35", "freq-193.05-wavelength-1552.93", 35)
    prop._addConstant("Channel36", "freq-193.10-wavelength-1552.52", 36)
    prop._addConstant("Channel37", "freq-193.15-wavelength-1552.12", 37)
    prop._addConstant("Channel38", "freq-193.20-wavelength-1551.72", 38)
    prop._addConstant("Channel39", "freq-193.25-wavelength-1551.32", 39)
    prop._addConstant("Channel4", "freq-191.50-wavelength-1565.50", 4)
    prop._addConstant("Channel40", "freq-193.30-wavelength-1550.92", 40)
    prop._addConstant("Channel41", "freq-193.35-wavelength-1550.52", 41)
    prop._addConstant("Channel42", "freq-193.40-wavelength-1550.12", 42)
    prop._addConstant("Channel43", "freq-193.45-wavelength-1549.72", 43)
    prop._addConstant("Channel44", "freq-193.50-wavelength-1549.32", 44)
    prop._addConstant("Channel45", "freq-193.55-wavelength-1548.91", 45)
    prop._addConstant("Channel46", "freq-193.60-wavelength-1548.51", 46)
    prop._addConstant("Channel47", "freq-193.65-wavelength-1548.11", 47)
    prop._addConstant("Channel48", "freq-193.70-wavelength-1547.72", 48)
    prop._addConstant("Channel49", "freq-193.75-wavelength-1547.32", 49)
    prop._addConstant("Channel5", "freq-191.55-wavelength-1565.09", 5)
    prop._addConstant("Channel50", "freq-193.80-wavelength-1546.92", 50)
    prop._addConstant("Channel51", "freq-193.85-wavelength-1546.52", 51)
    prop._addConstant("Channel52", "freq-193.90-wavelength-1546.12", 52)
    prop._addConstant("Channel53", "freq-193.95-wavelength-1545.72", 53)
    prop._addConstant("Channel54", "freq-194.00-wavelength-1545.32", 54)
    prop._addConstant("Channel55", "freq-194.05-wavelength-1544.92", 55)
    prop._addConstant("Channel56", "freq-194.10-wavelength-1544.53", 56)
    prop._addConstant("Channel57", "freq-194.15-wavelength-1544.13", 57)
    prop._addConstant("Channel58", "freq-194.20-wavelength-1543.73", 58)
    prop._addConstant("Channel59", "freq-194.25-wavelength-1543.33", 59)
    prop._addConstant("Channel6", "freq-191.60-wavelength-1564.68", 6)
    prop._addConstant("Channel60", "freq-194.30-wavelength-1542.94", 60)
    prop._addConstant("Channel61", "freq-194.35-wavelength-1542.54", 61)
    prop._addConstant("Channel62", "freq-194.40-wavelength-1542.14", 62)
    prop._addConstant("Channel63", "freq-194.45-wavelength-1541.75", 63)
    prop._addConstant("Channel64", "freq-194.50-wavelength-1541.35", 64)
    prop._addConstant("Channel65", "freq-194.55-wavelength-1540.95", 65)
    prop._addConstant("Channel66", "freq-194.60-wavelength-1540.56", 66)
    prop._addConstant("Channel67", "freq-194.65-wavelength-1540.16", 67)
    prop._addConstant("Channel68", "freq-194.70-wavelength-1539.77", 68)
    prop._addConstant("Channel69", "freq-194.75-wavelength-1539.37", 69)
    prop._addConstant("Channel7", "freq-191.65-wavelength-1564.27", 7)
    prop._addConstant("Channel70", "freq-194.80-wavelength-1538.98", 70)
    prop._addConstant("Channel71", "freq-194.85-wavelength-1538.58", 71)
    prop._addConstant("Channel72", "freq-194.90-wavelength-1538.19", 72)
    prop._addConstant("Channel73", "freq-194.95-wavelength-1537.79", 73)
    prop._addConstant("Channel74", "freq-195.00-wavelength-1537.40", 74)
    prop._addConstant("Channel75", "freq-195.05-wavelength-1537.00", 75)
    prop._addConstant("Channel76", "freq-195.10-wavelength-1536.61", 76)
    prop._addConstant("Channel77", "freq-195.15-wavelength-1536.22", 77)
    prop._addConstant("Channel78", "freq-195.20-wavelength-1535.82", 78)
    prop._addConstant("Channel79", "freq-195.25-wavelength-1535.43", 79)
    prop._addConstant("Channel8", "freq-191.70-wavelength-1563.86", 8)
    prop._addConstant("Channel80", "freq-195.30-wavelength-1535.04", 80)
    prop._addConstant("Channel81", "freq-195.35-wavelength-1534.64", 81)
    prop._addConstant("Channel82", "freq-195.40-wavelength-1534.25", 82)
    prop._addConstant("Channel83", "freq-195.45-wavelength-1533.86", 83)
    prop._addConstant("Channel84", "freq-195.50-wavelength-1533.47", 84)
    prop._addConstant("Channel85", "freq-195.55-wavelength-1533.07", 85)
    prop._addConstant("Channel86", "freq-195.60-wavelength-1532.68", 86)
    prop._addConstant("Channel87", "freq-195.65-wavelength-1532.29", 87)
    prop._addConstant("Channel88", "freq-195.70-wavelength-1531.90", 88)
    prop._addConstant("Channel89", "freq-195.75-wavelength-1531.51", 89)
    prop._addConstant("Channel9", "freq-191.75-wavelength-1563.45", 9)
    prop._addConstant("Channel90", "freq-195.80-wavelength-1531.12", 90)
    prop._addConstant("Channel91", "freq-195.85-wavelength-1530.72", 91)
    prop._addConstant("Channel92", "freq-195.90-wavelength-1530.33", 92)
    prop._addConstant("Channel93", "freq-195.95-wavelength-1529.94", 93)
    prop._addConstant("Channel94", "freq-196.00-wavelength-1529.55", 94)
    prop._addConstant("Channel95", "freq-196.05-wavelength-1529.16", 95)
    prop._addConstant("Channel96", "freq-196.10-wavelength-1528.77", 96)
    meta.props.add("fcotChannelNumber", prop)

    prop = PropMeta("str", "id", "id", 3673, PropCategory.REGULAR)
    prop.label = "Interface ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "mtu", "mtu", 3714, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(576, 9216)]
    prop.defaultValue = 9000
    prop.defaultValueStr = "9000"
    meta.props.add("mtu", prop)

    prop = PropMeta("str", "name", "name", 16432, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "snmpTrapSt", "snmpTrapSt", 3715, PropCategory.REGULAR)
    prop.label = "Snmp Trap State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enable"
    prop._addConstant("disable", "disable", 2)
    prop._addConstant("enable", "enable", 1)
    meta.props.add("snmpTrapSt", prop)

    prop = PropMeta("str", "speed", "speed", 3712, PropCategory.REGULAR)
    prop.label = "Speed"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 10
    prop.defaultValueStr = "inherit"
    prop._addConstant("100G", "100-gbps", 7)
    prop._addConstant("100M", "100-mbps", 1)
    prop._addConstant("10G", "10-gbps", 3)
    prop._addConstant("1G", "1-gbps", 2)
    prop._addConstant("200G", "200-gbps", 8)
    prop._addConstant("25G", "25-gbps", 4)
    prop._addConstant("400G", "400-gbps", 9)
    prop._addConstant("40G", "40-gbps", 5)
    prop._addConstant("50G", "50-gbps", 6)
    prop._addConstant("inherit", "inherit", 10)
    prop._addConstant("unknown", "unspecified", 0)
    meta.props.add("speed", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "switchingSt", "switchingSt", 3710, PropCategory.REGULAR)
    prop.label = "Switching State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "disabled"
    prop._addConstant("disabled", "disabled", 0)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("switchingSt", prop)

    meta.deploymentCategory = DeploymentCategory("interface", "Interface")
    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

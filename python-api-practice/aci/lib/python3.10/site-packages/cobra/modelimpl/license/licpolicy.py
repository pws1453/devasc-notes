# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class LicPolicy(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.license.LicPolicy")

    meta.moClassName = "licenseLicPolicy"
    meta.rnFormat = "licensepol"
    meta.category = MoCategory.REGULAR
    meta.label = "License Policy"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))

    meta.parentClasses.add("cobra.model.fabric.Inst")

    meta.rnPrefixes = [
        ('licensepol', False),
    ]

    prop = PropMeta("str", "annotation", "annotation", 38815, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "authCode", "authCode", 36864, PropCategory.REGULAR)
    prop.label = "Authorization Code"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("authCode", prop)

    prop = PropMeta("str", "cert", "cert", 41009, PropCategory.REGULAR)
    prop.label = "Certificate"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("cert", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 40954, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "forceRegister", "forceRegister", 41040, PropCategory.REGULAR)
    prop.label = "Force Re-register"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("forceRegister", prop)

    prop = PropMeta("str", "hostnamePrivacy", "hostnamePrivacy", 42441, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("hostnamePrivacy", prop)

    prop = PropMeta("str", "ipAddr", "ipAddr", 42280, PropCategory.REGULAR)
    prop.label = "IP address for SA proxy server when license mode is proxy"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("ipAddr", prop)

    prop = PropMeta("str", "isNewCustomer", "isNewCustomer", 42400, PropCategory.REGULAR)
    prop.label = "New Customer"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("isNewCustomer", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "licenseAction", "licenseAction", 37127, PropCategory.REGULAR)
    prop.label = "Smart Licensing Action"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("device-led-conversion", "device-led-conversion", 11)
    prop._addConstant("disable-dev-cert", "disable-dev-cert", 101)
    prop._addConstant("enable-dev-cert", "enable-dev-cert", 100)
    prop._addConstant("import-private-certificate", "import-private-certificate", 9)
    prop._addConstant("none", "n/a", 0)
    prop._addConstant("remove-private-certificate", "remove-private-certificate", 10)
    prop._addConstant("renew-id-cert", "renew-id-certificate", 1)
    prop._addConstant("renew-license-auth", "renew-license-authorization", 2)
    prop._addConstant("show-license-all", "show-license-all", 7)
    prop._addConstant("show-license-status", "show-license-status", 3)
    prop._addConstant("show-license-summary", "show-license-summary", 4)
    prop._addConstant("show-license-tech-support", "show-license-tech-support", 8)
    prop._addConstant("show-license-udi", "show-license-udi", 5)
    prop._addConstant("show-license-usage", "show-license-usage", 6)
    prop._addConstant("test-expire-auth", "expire-the-authorization-period", 103)
    prop._addConstant("test-expire-auth-renew", "expire-auth-renewal-timer", 106)
    prop._addConstant("test-expire-eval", "expire-the-evaluation-period", 102)
    prop._addConstant("test-expire-eval-warn", "expire-eval-period-warning-timer", 105)
    prop._addConstant("test-expire-idcert", "expire-the-id-cert-timer", 104)
    prop._addConstant("test-expire-idcert-renew", "expire-id-cert-renewal-timer", 107)
    prop._addConstant("test-expire-registration", "expire-registration-retry-timer", 112)
    prop._addConstant("test-expire-reservation", "expire-plr-reservation-inprogress-timer", 113)
    prop._addConstant("test-plr-auth-failed", "plr-auth-code-validation-failed", 109)
    prop._addConstant("test-plr-cancel", "plr-canceled", 111)
    prop._addConstant("test-plr-install", "plr-installed", 108)
    prop._addConstant("test-plr-return", "plr-returned", 110)
    meta.props.add("licenseAction", prop)

    prop = PropMeta("str", "licenseSyncFreq", "licenseSyncFreq", 53050, PropCategory.REGULAR)
    prop.label = "cAPIC license sync up frequency (in minute)"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 60
    prop.defaultValueStr = "60"
    meta.props.add("licenseSyncFreq", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "mode", "mode", 36819, PropCategory.REGULAR)
    prop.label = "Smart License Mode"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "smart-licensing"
    prop._addConstant("plr", "permanent-license-reservation", 3)
    prop._addConstant("proxy", "http/https-proxy", 2)
    prop._addConstant("satellite", "transport-gateway/smart-software-manager-satellite", 1)
    prop._addConstant("smart-licensing", "direct-connect-to-cisco-smart-software-manager-(cssm)", 0)
    meta.props.add("mode", prop)

    prop = PropMeta("str", "plrAdminState", "plrAdminState", 36865, PropCategory.REGULAR)
    prop.label = "PLR Admin State"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("cancel", "cancel", 2)
    prop._addConstant("install", "install", 3)
    prop._addConstant("none", "n/a", 0)
    prop._addConstant("request", "request", 1)
    prop._addConstant("return", "return", 4)
    prop._addConstant("return-auth", "return-authorization", 5)
    meta.props.add("plrAdminState", prop)

    prop = PropMeta("str", "port", "port", 36860, PropCategory.REGULAR)
    prop.label = "Procy Server Port."
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 443
    prop.defaultValueStr = "443"
    meta.props.add("port", prop)

    prop = PropMeta("str", "regAdminState", "regAdminState", 36862, PropCategory.REGULAR)
    prop.label = "Smart Licensing Admin State"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("deregister", "unregister", 2)
    prop._addConstant("none", "n/a", 0)
    prop._addConstant("register", "register", 1)
    meta.props.add("regAdminState", prop)

    prop = PropMeta("str", "regTokenId", "regTokenId", 36861, PropCategory.REGULAR)
    prop.label = "Registration Token ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("regTokenId", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    prop = PropMeta("str", "url", "url", 36859, PropCategory.REGULAR)
    prop.label = "Address of CSSM, Satellite Manager or Smart Call Home Gateway."
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    prop.defaultValue = "https://tools.cisco.com/its/service/oddce/services/DDCEService"
    prop.defaultValueStr = "https://tools.cisco.com/its/service/oddce/services/DDCEService"
    meta.props.add("url", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class PermitL3Pkt(Mo):
    """
    \**\**\**\**\**\**\**\**\**\**ACL Packet MO \**\**\**\**\**\*** 

    """

    meta = ClassMeta("cobra.model.acllog.PermitL3Pkt")

    meta.moClassName = "acllogPermitL3Pkt"
    meta.rnFormat = "permitl3pkt-%(recordId)s-smac-%(srcMacAddr)s-dmac-%(dstMacAddr)s-time-%(timeStamp)s"
    meta.category = MoCategory.REGULAR
    meta.label = "L3 Permit Pkt Record"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.acllog.FlowCounterHist1year")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.acllog.FlowCounterAgHist1year")
    meta.childClasses.add("cobra.model.acllog.FlowCounterAg1qtr")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.acllog.FlowCounter1w")
    meta.childClasses.add("cobra.model.acllog.FlowCounter1h")
    meta.childClasses.add("cobra.model.acllog.FlowCounter1year")
    meta.childClasses.add("cobra.model.acllog.FlowCounter1d")
    meta.childClasses.add("cobra.model.acllog.FlowCounterAgHist1mo")
    meta.childClasses.add("cobra.model.acllog.FlowCounterAg1year")
    meta.childClasses.add("cobra.model.acllog.FlowCounterHist1w")
    meta.childClasses.add("cobra.model.acllog.FlowCounterAg1mo")
    meta.childClasses.add("cobra.model.acllog.FlowCounterHist15min")
    meta.childClasses.add("cobra.model.acllog.FlowCounterHist1d")
    meta.childClasses.add("cobra.model.acllog.FlowCounterHist1h")
    meta.childClasses.add("cobra.model.acllog.FlowCounterAgHist15min")
    meta.childClasses.add("cobra.model.acllog.FlowCounterHist5min")
    meta.childClasses.add("cobra.model.acllog.FlowCounterAg1w")
    meta.childClasses.add("cobra.model.acllog.FlowCounterAg15min")
    meta.childClasses.add("cobra.model.acllog.FlowCounterAgHist1qtr")
    meta.childClasses.add("cobra.model.acllog.FlowCounterAg1h")
    meta.childClasses.add("cobra.model.acllog.FlowCounterAg1d")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.acllog.FlowCounterAgHist1d")
    meta.childClasses.add("cobra.model.acllog.FlowCounterHist1qtr")
    meta.childClasses.add("cobra.model.acllog.FlowCounterHist1mo")
    meta.childClasses.add("cobra.model.acllog.FlowCounterAgHist1h")
    meta.childClasses.add("cobra.model.acllog.FlowCounter1qtr")
    meta.childClasses.add("cobra.model.acllog.FlowCounter5min")
    meta.childClasses.add("cobra.model.acllog.FlowCounterAgHist1w")
    meta.childClasses.add("cobra.model.acllog.FlowCounter15min")
    meta.childClasses.add("cobra.model.acllog.FlowCounter1mo")

    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterAgHist1year", "HDacllogFlowCounterAg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterAgHist15min", "HDacllogFlowCounterAg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterAg1year", "CDacllogFlowCounterAg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterAg15min", "CDacllogFlowCounterAg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterAgHist1qtr", "HDacllogFlowCounterAg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterHist1year", "HDacllogFlowCounter1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterAg1qtr", "CDacllogFlowCounterAg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterAgHist1mo", "HDacllogFlowCounterAg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterHist15min", "HDacllogFlowCounter15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounter1year", "CDacllogFlowCounter1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterAg1mo", "CDacllogFlowCounterAg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterHist5min", "HDacllogFlowCounter5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterAgHist1d", "HDacllogFlowCounterAg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterHist1qtr", "HDacllogFlowCounter1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterAgHist1h", "HDacllogFlowCounterAg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterAgHist1w", "HDacllogFlowCounterAg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounter15min", "CDacllogFlowCounter15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterAg1w", "CDacllogFlowCounterAg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterAg1h", "CDacllogFlowCounterAg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterAg1d", "CDacllogFlowCounterAg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterHist1mo", "HDacllogFlowCounter1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounter1qtr", "CDacllogFlowCounter1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounter5min", "CDacllogFlowCounter5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterHist1w", "HDacllogFlowCounter1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterHist1d", "HDacllogFlowCounter1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounterHist1h", "HDacllogFlowCounter1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounter1mo", "CDacllogFlowCounter1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounter1w", "CDacllogFlowCounter1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounter1h", "CDacllogFlowCounter1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.acllog.FlowCounter1d", "CDacllogFlowCounter1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.acllog.Ctx")

    meta.superClasses.add("cobra.model.acllog.PermitL3Record")
    meta.superClasses.add("cobra.model.acllog.Record")
    meta.superClasses.add("cobra.model.acllog.PermitRecord")

    meta.rnPrefixes = [
        ('permitl3pkt-', True),
        ('-smac-', True),
        ('-dmac-', True),
        ('-time-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dstEpgName", "dstEpgName", 37082, PropCategory.REGULAR)
    prop.label = "Destination EPG>"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.regex = ['[a-zA-Z0-9:|._-]+']
    meta.props.add("dstEpgName", prop)

    prop = PropMeta("str", "dstIp", "dstIp", 25035, PropCategory.REGULAR)
    prop.label = "Destination IP address"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dstIp", prop)

    prop = PropMeta("str", "dstMacAddr", "dstMacAddr", 25096, PropCategory.REGULAR)
    prop.label = "Destination MAC address"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("dstMacAddr", prop)

    prop = PropMeta("str", "dstPcTag", "dstPcTag", 37080, PropCategory.REGULAR)
    prop.label = "Destination PcTag"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop._addConstant("any", "any", 0)
    meta.props.add("dstPcTag", prop)

    prop = PropMeta("str", "dstPort", "dstPort", 25038, PropCategory.REGULAR)
    prop.label = "L4 destination port"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dns", "dns", 53)
    prop._addConstant("ftpData", "ftp-data", 20)
    prop._addConstant("http", "http", 80)
    prop._addConstant("https", "https", 443)
    prop._addConstant("pop3", "pop3", 110)
    prop._addConstant("rtsp", "rtsp", 554)
    prop._addConstant("smtp", "smtp", 25)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("dstPort", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 25155, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "pktLen", "pktLen", 25040, PropCategory.REGULAR)
    prop.label = "Packet Length"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("pktLen", prop)

    prop = PropMeta("str", "protocol", "protocol", 25039, PropCategory.REGULAR)
    prop.label = "Protocol"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("egp", "egp", 8)
    prop._addConstant("eigrp", "eigrp", 88)
    prop._addConstant("icmp", "icmp", 1)
    prop._addConstant("icmpv6", "icmpv6", 58)
    prop._addConstant("igmp", "igmp", 2)
    prop._addConstant("igp", "igp", 9)
    prop._addConstant("l2tp", "l2tp", 115)
    prop._addConstant("ospfigp", "ospf", 89)
    prop._addConstant("pim", "pim", 103)
    prop._addConstant("tcp", "tcp", 6)
    prop._addConstant("udp", "udp", 17)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("protocol", prop)

    prop = PropMeta("str", "recordId", "recordId", 27663, PropCategory.REGULAR)
    prop.label = "Record id"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(0, 8189)]
    prop.defaultValue = 0
    prop.defaultValueStr = "invalid"
    prop._addConstant("invalid", "invalid", 0)
    meta.props.add("recordId", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "srcEpgName", "srcEpgName", 37081, PropCategory.REGULAR)
    prop.label = "Srouce EPG"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.regex = ['[a-zA-Z0-9:|._-]+']
    meta.props.add("srcEpgName", prop)

    prop = PropMeta("str", "srcIntf", "srcIntf", 25023, PropCategory.REGULAR)
    prop.label = "Source interface"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.range = [(0, 256)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("srcIntf", prop)

    prop = PropMeta("str", "srcIp", "srcIp", 25034, PropCategory.REGULAR)
    prop.label = "Source IP address"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("srcIp", prop)

    prop = PropMeta("str", "srcMacAddr", "srcMacAddr", 25097, PropCategory.REGULAR)
    prop.label = "Source MAC address"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("srcMacAddr", prop)

    prop = PropMeta("str", "srcPcTag", "srcPcTag", 37079, PropCategory.REGULAR)
    prop.label = "Source PC Tag"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop._addConstant("any", "any", 0)
    meta.props.add("srcPcTag", prop)

    prop = PropMeta("str", "srcPort", "srcPort", 25037, PropCategory.REGULAR)
    prop.label = "L4 source port"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dns", "dns", 53)
    prop._addConstant("ftpData", "ftp-data", 20)
    prop._addConstant("http", "http", 80)
    prop._addConstant("https", "https", 443)
    prop._addConstant("pop3", "pop3", 110)
    prop._addConstant("rtsp", "rtsp", 554)
    prop._addConstant("smtp", "smtp", 25)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("srcPort", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "timeStamp", "timeStamp", 25041, PropCategory.REGULAR)
    prop.label = "Time Stamp"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("timeStamp", prop)

    prop = PropMeta("str", "vrfEncap", "vrfEncap", 25036, PropCategory.REGULAR)
    prop.label = "VRF Encap"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.range = [(0, 512)]
    meta.props.add("vrfEncap", prop)

    meta.namingProps.append(getattr(meta.props, "recordId"))
    meta.namingProps.append(getattr(meta.props, "srcMacAddr"))
    meta.namingProps.append(getattr(meta.props, "dstMacAddr"))
    meta.namingProps.append(getattr(meta.props, "timeStamp"))

    def __init__(self, parentMoOrDn, recordId, srcMacAddr, dstMacAddr, timeStamp, markDirty=True, **creationProps):
        namingVals = [recordId, srcMacAddr, dstMacAddr, timeStamp]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

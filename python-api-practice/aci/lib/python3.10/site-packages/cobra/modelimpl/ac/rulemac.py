# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class RuleMac(Mo):
    """
    Represents media access control (MAC) address-based rules for the atomic counters.

    """

    meta = ClassMeta("cobra.model.ac.RuleMac")

    meta.moClassName = "acRuleMac"
    meta.rnFormat = "ruleMac-%(ruleId)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Mac Rule"
    meta.writeAccessMask = 0x800001800000001
    meta.readAccessMask = 0x800001800000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.ac.Bank")
    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.ac.Bank", "bank-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.ac.Entity")

    meta.superClasses.add("cobra.model.pol.Instr")
    meta.superClasses.add("cobra.model.nw.FltRule")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.ac.Rule")
    meta.superClasses.add("cobra.model.pol.Obj")

    meta.rnPrefixes = [
        ('ruleMac-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "ctrl", "ctrl", 2205, PropCategory.REGULAR)
    prop.label = "Control"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("fabric", "is-part-of-fabric", 4)
    prop._addConstant("l2-tag", "layer2-tagged", 512)
    prop._addConstant("local-ep", "local-endpoint", 8)
    prop._addConstant("local-mac", "local-mac", 32)
    prop._addConstant("local-rtrip", "local-router-ip", 64)
    prop._addConstant("local-tep", "local-tunnel-endpoint", 128)
    prop._addConstant("multi-dest", "multi-destination-frame", 16)
    prop._addConstant("overlay", "overlay-tunnelled-frame", 16)
    prop._addConstant("routeable", "routeable", 1)
    prop._addConstant("seg-routing", "segment-routing", 256)
    prop._addConstant("snap-encap", "snap-encapsulated", 1024)
    prop._addConstant("vxlan", "vxlan-encapsulated", 2)
    meta.props.add("ctrl", prop)

    prop = PropMeta("str", "ctrlMask", "ctrlMask", 2206, PropCategory.REGULAR)
    prop.label = "Control Mask"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("fabric", "is-part-of-fabric", 4)
    prop._addConstant("l2-tag", "layer2-tagged", 512)
    prop._addConstant("local-ep", "local-endpoint", 8)
    prop._addConstant("local-mac", "local-mac", 32)
    prop._addConstant("local-rtrip", "local-router-ip", 64)
    prop._addConstant("local-tep", "local-tunnel-endpoint", 128)
    prop._addConstant("multi-dest", "multi-destination-frame", 16)
    prop._addConstant("overlay", "overlay-tunnelled-frame", 16)
    prop._addConstant("routeable", "routeable", 1)
    prop._addConstant("seg-routing", "segment-routing", 256)
    prop._addConstant("snap-encap", "snap-encapsulated", 1024)
    prop._addConstant("vxlan", "vxlan-encapsulated", 2)
    meta.props.add("ctrlMask", prop)

    prop = PropMeta("str", "dPcTag", "dPcTag", 2240, PropCategory.REGULAR)
    prop.label = "Destination PC Tag"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("any", "any", 0)
    meta.props.add("dPcTag", prop)

    prop = PropMeta("str", "descr", "descr", 5581, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dot1p", "dot1p", 2212, PropCategory.REGULAR)
    prop.label = "Dot1p"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 8)]
    prop.defaultValue = 8
    prop.defaultValueStr = "unspecified"
    prop._addConstant("0", "background", 0)
    prop._addConstant("1", "best-effort", 1)
    prop._addConstant("2", "excellent-effort", 2)
    prop._addConstant("3", "critical-applications", 3)
    prop._addConstant("4", "video,-<-100-ms-latency-and-jitter", 4)
    prop._addConstant("5", "voice,-<-10-ms-latency-and-jitter", 5)
    prop._addConstant("6", "internetwork-control", 6)
    prop._addConstant("7", "network-control", 7)
    prop._addConstant("unspecified", "unspecified", 8)
    meta.props.add("dot1p", prop)

    prop = PropMeta("str", "dot1pMask", "dot1pMask", 2213, PropCategory.REGULAR)
    prop.label = "Dot1p Mask"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 8)]
    prop.defaultValue = 8
    prop.defaultValueStr = "unspecified"
    prop._addConstant("0", "background", 0)
    prop._addConstant("1", "best-effort", 1)
    prop._addConstant("2", "excellent-effort", 2)
    prop._addConstant("3", "critical-applications", 3)
    prop._addConstant("4", "video,-<-100-ms-latency-and-jitter", 4)
    prop._addConstant("5", "voice,-<-10-ms-latency-and-jitter", 5)
    prop._addConstant("6", "internetwork-control", 6)
    prop._addConstant("7", "network-control", 7)
    prop._addConstant("unspecified", "unspecified", 8)
    meta.props.add("dot1pMask", prop)

    prop = PropMeta("str", "dstMac", "dstMac", 2211, PropCategory.REGULAR)
    prop.label = "Destination MAC"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("dont-care", "wildcard-mac", 0)
    meta.props.add("dstMac", prop)

    prop = PropMeta("str", "fabricEncap", "fabricEncap", 2208, PropCategory.REGULAR)
    prop.label = "Fabric Encapsulation"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("fabricEncap", prop)

    prop = PropMeta("str", "fabricPort", "fabricPort", 2207, PropCategory.REGULAR)
    prop.label = "Fabric Port"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("fabricPort", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 3682, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "operState", "operState", 21280, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "pending"
    prop._addConstant("failed", "failed", 3)
    prop._addConstant("installed", "installed", 2)
    prop._addConstant("pending", "pending", 1)
    meta.props.add("operState", prop)

    prop = PropMeta("str", "operStateQual", "operStateQual", 21281, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("operStateQual", prop)

    prop = PropMeta("str", "order", "order", 2204, PropCategory.REGULAR)
    prop.label = "Order"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 1024)]
    meta.props.add("order", prop)

    prop = PropMeta("str", "payload", "payload", 2238, PropCategory.REGULAR)
    prop.label = "Payload"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("payload", prop)

    prop = PropMeta("str", "payloadSz", "payloadSz", 2237, PropCategory.REGULAR)
    prop.label = "Payload Size"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("dont-care", "wildcard-payload-size", 255)
    meta.props.add("payloadSz", prop)

    prop = PropMeta("str", "policyDn", "policyDn", 19917, PropCategory.REGULAR)
    prop.label = "Atomic Counter Policy Dn"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("policyDn", prop)

    prop = PropMeta("str", "policyName", "policyName", 15397, PropCategory.REGULAR)
    prop.label = "Atomic Policy Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("policyName", prop)

    prop = PropMeta("str", "remoteTep", "remoteTep", 2209, PropCategory.REGULAR)
    prop.label = "Remote TEP"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("remoteTep", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "ruleId", "ruleId", 5782, PropCategory.REGULAR)
    prop.label = "ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("ruleId", prop)

    prop = PropMeta("str", "sPcTag", "sPcTag", 2239, PropCategory.REGULAR)
    prop.label = "Source PC Tag"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("any", "any", 0)
    meta.props.add("sPcTag", prop)

    prop = PropMeta("str", "srcMac", "srcMac", 2210, PropCategory.REGULAR)
    prop.label = "Source MAC"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("dont-care", "wildcard-mac", 0)
    meta.props.add("srcMac", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tenantName", "tenantName", 15398, PropCategory.REGULAR)
    prop.label = "Tenant Name for this Atomic Counter Rule"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("tenantName", prop)

    prop = PropMeta("str", "type", "type", 2236, PropCategory.REGULAR)
    prop.label = "Ether Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("dont-care", "wildcard-ether-type", 0)
    meta.props.add("type", prop)

    prop = PropMeta("str", "vrfName", "vrfName", 15862, PropCategory.REGULAR)
    prop.label = "VRF Name for this Atomic Counter Rule"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("vrfName", prop)

    meta.namingProps.append(getattr(meta.props, "ruleId"))

    def __init__(self, parentMoOrDn, ruleId, markDirty=True, **creationProps):
        namingVals = [ruleId]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

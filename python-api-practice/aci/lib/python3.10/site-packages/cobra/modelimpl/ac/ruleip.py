# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class RuleIp(Mo):
    """
    Specifies the IP entry.

    """

    meta = ClassMeta("cobra.model.ac.RuleIp")

    meta.moClassName = "acRuleIp"
    meta.rnFormat = "ruleIp-%(ruleId)s"
    meta.category = MoCategory.REGULAR
    meta.label = "IP Rule"
    meta.writeAccessMask = 0x800001800000001
    meta.readAccessMask = 0x800081800000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.ac.Bank")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.ac.LatencyAvg")
    meta.childClasses.add("cobra.model.ac.LatencyHist")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.ac.LatencyHist", "latencyhist"))
    meta.childNamesAndRnPrefix.append(("cobra.model.ac.LatencyAvg", "latencyavg"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.ac.Bank", "bank-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.ac.Entity")

    meta.superClasses.add("cobra.model.pol.Instr")
    meta.superClasses.add("cobra.model.nw.FltRule")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.ac.Rule")
    meta.superClasses.add("cobra.model.pol.Obj")

    meta.rnPrefixes = [
        ('ruleIp-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "ctrl", "ctrl", 2205, PropCategory.REGULAR)
    prop.label = "Control"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("fabric", "is-part-of-fabric", 4)
    prop._addConstant("l2-tag", "layer2-tagged", 512)
    prop._addConstant("local-ep", "local-endpoint", 8)
    prop._addConstant("local-mac", "local-mac", 32)
    prop._addConstant("local-rtrip", "local-router-ip", 64)
    prop._addConstant("local-tep", "local-tunnel-endpoint", 128)
    prop._addConstant("multi-dest", "multi-destination-frame", 16)
    prop._addConstant("overlay", "overlay-tunnelled-frame", 16)
    prop._addConstant("routeable", "routeable", 1)
    prop._addConstant("seg-routing", "segment-routing", 256)
    prop._addConstant("snap-encap", "snap-encapsulated", 1024)
    prop._addConstant("vxlan", "vxlan-encapsulated", 2)
    meta.props.add("ctrl", prop)

    prop = PropMeta("str", "ctrlMask", "ctrlMask", 2206, PropCategory.REGULAR)
    prop.label = "Control Mask"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("fabric", "is-part-of-fabric", 4)
    prop._addConstant("l2-tag", "layer2-tagged", 512)
    prop._addConstant("local-ep", "local-endpoint", 8)
    prop._addConstant("local-mac", "local-mac", 32)
    prop._addConstant("local-rtrip", "local-router-ip", 64)
    prop._addConstant("local-tep", "local-tunnel-endpoint", 128)
    prop._addConstant("multi-dest", "multi-destination-frame", 16)
    prop._addConstant("overlay", "overlay-tunnelled-frame", 16)
    prop._addConstant("routeable", "routeable", 1)
    prop._addConstant("seg-routing", "segment-routing", 256)
    prop._addConstant("snap-encap", "snap-encapsulated", 1024)
    prop._addConstant("vxlan", "vxlan-encapsulated", 2)
    meta.props.add("ctrlMask", prop)

    prop = PropMeta("str", "dPcTag", "dPcTag", 2226, PropCategory.REGULAR)
    prop.label = "Destination PC Tag"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("any", "any", 0)
    meta.props.add("dPcTag", prop)

    prop = PropMeta("str", "descr", "descr", 5581, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dot1p", "dot1p", 2212, PropCategory.REGULAR)
    prop.label = "Dot1p"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 8)]
    prop.defaultValue = 8
    prop.defaultValueStr = "unspecified"
    prop._addConstant("0", "background", 0)
    prop._addConstant("1", "best-effort", 1)
    prop._addConstant("2", "excellent-effort", 2)
    prop._addConstant("3", "critical-applications", 3)
    prop._addConstant("4", "video,-<-100-ms-latency-and-jitter", 4)
    prop._addConstant("5", "voice,-<-10-ms-latency-and-jitter", 5)
    prop._addConstant("6", "internetwork-control", 6)
    prop._addConstant("7", "network-control", 7)
    prop._addConstant("unspecified", "unspecified", 8)
    meta.props.add("dot1p", prop)

    prop = PropMeta("str", "dot1pMask", "dot1pMask", 2213, PropCategory.REGULAR)
    prop.label = "Dot1p Mask"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 8)]
    prop.defaultValue = 8
    prop.defaultValueStr = "unspecified"
    prop._addConstant("0", "background", 0)
    prop._addConstant("1", "best-effort", 1)
    prop._addConstant("2", "excellent-effort", 2)
    prop._addConstant("3", "critical-applications", 3)
    prop._addConstant("4", "video,-<-100-ms-latency-and-jitter", 4)
    prop._addConstant("5", "voice,-<-10-ms-latency-and-jitter", 5)
    prop._addConstant("6", "internetwork-control", 6)
    prop._addConstant("7", "network-control", 7)
    prop._addConstant("unspecified", "unspecified", 8)
    meta.props.add("dot1pMask", prop)

    prop = PropMeta("str", "dscp", "dscp", 2220, PropCategory.REGULAR)
    prop.label = "Dscp"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.defaultValue = 64
    prop.defaultValueStr = "unspecified"
    prop._addConstant("AF11", "af11-low-drop", 10)
    prop._addConstant("AF12", "af12-medium-drop", 12)
    prop._addConstant("AF13", "af13-high-drop", 14)
    prop._addConstant("AF21", "af21-low-drop", 18)
    prop._addConstant("AF22", "af22-medium-drop", 20)
    prop._addConstant("AF23", "af23-high-drop", 22)
    prop._addConstant("AF31", "af31-low-drop", 26)
    prop._addConstant("AF32", "af32-medium-drop", 28)
    prop._addConstant("AF33", "af33-high-drop", 30)
    prop._addConstant("AF41", "af41-low-drop", 34)
    prop._addConstant("AF42", "af42-medium-drop", 36)
    prop._addConstant("AF43", "af43-high-drop", 38)
    prop._addConstant("CS0", "cs0", 0)
    prop._addConstant("CS1", "cs1", 8)
    prop._addConstant("CS2", "cs2", 16)
    prop._addConstant("CS3", "cs3", 24)
    prop._addConstant("CS4", "cs4", 32)
    prop._addConstant("CS5", "cs5", 40)
    prop._addConstant("CS6", "cs6", 48)
    prop._addConstant("CS7", "cs7", 56)
    prop._addConstant("EF", "expedited-forwarding", 46)
    prop._addConstant("VA", "voice-admit", 44)
    prop._addConstant("unspecified", "unspecified", 64)
    meta.props.add("dscp", prop)

    prop = PropMeta("str", "dscpMask", "dscpMask", 2221, PropCategory.REGULAR)
    prop.label = "Dscp Mask"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.defaultValue = 64
    prop.defaultValueStr = "unspecified"
    prop._addConstant("AF11", "af11-low-drop", 10)
    prop._addConstant("AF12", "af12-medium-drop", 12)
    prop._addConstant("AF13", "af13-high-drop", 14)
    prop._addConstant("AF21", "af21-low-drop", 18)
    prop._addConstant("AF22", "af22-medium-drop", 20)
    prop._addConstant("AF23", "af23-high-drop", 22)
    prop._addConstant("AF31", "af31-low-drop", 26)
    prop._addConstant("AF32", "af32-medium-drop", 28)
    prop._addConstant("AF33", "af33-high-drop", 30)
    prop._addConstant("AF41", "af41-low-drop", 34)
    prop._addConstant("AF42", "af42-medium-drop", 36)
    prop._addConstant("AF43", "af43-high-drop", 38)
    prop._addConstant("CS0", "cs0", 0)
    prop._addConstant("CS1", "cs1", 8)
    prop._addConstant("CS2", "cs2", 16)
    prop._addConstant("CS3", "cs3", 24)
    prop._addConstant("CS4", "cs4", 32)
    prop._addConstant("CS5", "cs5", 40)
    prop._addConstant("CS6", "cs6", 48)
    prop._addConstant("CS7", "cs7", 56)
    prop._addConstant("EF", "expedited-forwarding", 46)
    prop._addConstant("VA", "voice-admit", 44)
    prop._addConstant("unspecified", "unspecified", 64)
    meta.props.add("dscpMask", prop)

    prop = PropMeta("str", "dst", "dst", 2215, PropCategory.REGULAR)
    prop.label = "Destination Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dst", prop)

    prop = PropMeta("str", "dstMac", "dstMac", 2211, PropCategory.REGULAR)
    prop.label = "Destination MAC"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("dont-care", "wildcard-mac", 0)
    meta.props.add("dstMac", prop)

    prop = PropMeta("str", "dstPort", "dstPort", 2233, PropCategory.REGULAR)
    prop.label = "Destination Port"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dns", "dns", 53)
    prop._addConstant("ftpData", "ftp-data", 20)
    prop._addConstant("http", "http", 80)
    prop._addConstant("https", "https", 443)
    prop._addConstant("pop3", "pop3", 110)
    prop._addConstant("rtsp", "rtsp", 554)
    prop._addConstant("smtp", "smtp", 25)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("dstPort", prop)

    prop = PropMeta("str", "ecn", "ecn", 2222, PropCategory.REGULAR)
    prop.label = "ECN"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 2)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("ecn", prop)

    prop = PropMeta("str", "ecnMask", "ecnMask", 2223, PropCategory.REGULAR)
    prop.label = "ECN Mask"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 2)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("ecnMask", prop)

    prop = PropMeta("str", "fabricEncap", "fabricEncap", 2208, PropCategory.REGULAR)
    prop.label = "Fabric Encapsulation"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("fabricEncap", prop)

    prop = PropMeta("str", "fabricPort", "fabricPort", 2207, PropCategory.REGULAR)
    prop.label = "Fabric Port"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("fabricPort", prop)

    prop = PropMeta("str", "flags", "flags", 2217, PropCategory.REGULAR)
    prop.label = "IP Flags"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("df", "do-not-fragment", 1)
    prop._addConstant("frag-offset", "fragment-offset", 4)
    prop._addConstant("mf", "more-fragment", 2)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "flagsMask", "flagsMask", 2218, PropCategory.REGULAR)
    prop.label = "IP Flags Mask"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("df", "do-not-fragment", 1)
    prop._addConstant("frag-offset", "fragment-offset", 4)
    prop._addConstant("mf", "more-fragment", 2)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("flagsMask", prop)

    prop = PropMeta("str", "icmpCode", "icmpCode", 2230, PropCategory.REGULAR)
    prop.label = "ICMP Code"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    prop._addConstant("unspecified", "unspecified", 65535)
    meta.props.add("icmpCode", prop)

    prop = PropMeta("str", "icmpFlags", "icmpFlags", 2229, PropCategory.REGULAR)
    prop.label = "ICMP Flags"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    prop._addConstant("unspecified", "unspecified", 255)
    meta.props.add("icmpFlags", prop)

    prop = PropMeta("str", "icmpType", "icmpType", 2231, PropCategory.REGULAR)
    prop.label = "ICMP Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    prop._addConstant("unspecified", "unspecified", 255)
    meta.props.add("icmpType", prop)

    prop = PropMeta("str", "isExt", "isExt", 15802, PropCategory.REGULAR)
    prop.label = "Indicates IP Destination is External"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("isExt", prop)

    prop = PropMeta("str", "lastOperState", "lastOperState", 16496, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "pending"
    prop._addConstant("failed", "failed", 3)
    prop._addConstant("installed", "installed", 2)
    prop._addConstant("pending", "pending", 1)
    meta.props.add("lastOperState", prop)

    prop = PropMeta("str", "latencyCollect", "latencyCollect", 28826, PropCategory.REGULAR)
    prop.label = "Latency Collection"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "avg"
    prop._addConstant("avg", "avg", 1)
    prop._addConstant("histogram", "histogram", 2)
    meta.props.add("latencyCollect", prop)

    prop = PropMeta("str", "latencyOperSt", "latencyOperSt", 33576, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "pending"
    prop._addConstant("failed", "failed", 3)
    prop._addConstant("installed", "installed", 2)
    prop._addConstant("pending", "pending", 1)
    meta.props.add("latencyOperSt", prop)

    prop = PropMeta("str", "latencyOperStQual", "latencyOperStQual", 33577, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("latencyOperStQual", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 18592, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 3682, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "operState", "operState", 16495, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "pending"
    prop._addConstant("failed", "failed", 3)
    prop._addConstant("installed", "installed", 2)
    prop._addConstant("pending", "pending", 1)
    meta.props.add("operState", prop)

    prop = PropMeta("str", "operStateQual", "operStateQual", 19935, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("operStateQual", prop)

    prop = PropMeta("str", "options", "options", 2227, PropCategory.REGULAR)
    prop.label = "IP Options"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("frag-hdr", "fragment-header", 2)
    prop._addConstant("hop-by-hop", "hop-by-hop-header", 1)
    prop._addConstant("v4-opt", "ipv4-options", 4)
    meta.props.add("options", prop)

    prop = PropMeta("str", "optionsMask", "optionsMask", 2228, PropCategory.REGULAR)
    prop.label = "IP Options Mask"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("frag-hdr", "fragment-header", 2)
    prop._addConstant("hop-by-hop", "hop-by-hop-header", 1)
    prop._addConstant("v4-opt", "ipv4-options", 4)
    meta.props.add("optionsMask", prop)

    prop = PropMeta("str", "order", "order", 2204, PropCategory.REGULAR)
    prop.label = "Order"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 1024)]
    meta.props.add("order", prop)

    prop = PropMeta("str", "payloadSz", "payloadSz", 2224, PropCategory.REGULAR)
    prop.label = "Payload Size"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("dont-care", "wildcard-payload-size", 255)
    meta.props.add("payloadSz", prop)

    prop = PropMeta("str", "policyDn", "policyDn", 19917, PropCategory.REGULAR)
    prop.label = "Atomic Counter Policy Dn"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("policyDn", prop)

    prop = PropMeta("str", "policyName", "policyName", 15397, PropCategory.REGULAR)
    prop.label = "Atomic Policy Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("policyName", prop)

    prop = PropMeta("str", "prot", "prot", 2216, PropCategory.REGULAR)
    prop.label = "Protocol"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("egp", "egp", 8)
    prop._addConstant("eigrp", "eigrp", 88)
    prop._addConstant("icmp", "icmp", 1)
    prop._addConstant("icmpv6", "icmpv6", 58)
    prop._addConstant("igmp", "igmp", 2)
    prop._addConstant("igp", "igp", 9)
    prop._addConstant("l2tp", "l2tp", 115)
    prop._addConstant("ospfigp", "ospf", 89)
    prop._addConstant("pim", "pim", 103)
    prop._addConstant("tcp", "tcp", 6)
    prop._addConstant("udp", "udp", 17)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("prot", prop)

    prop = PropMeta("str", "remoteTep", "remoteTep", 2209, PropCategory.REGULAR)
    prop.label = "Remote TEP"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("remoteTep", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "ruleId", "ruleId", 5781, PropCategory.REGULAR)
    prop.label = "ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("ruleId", prop)

    prop = PropMeta("str", "sPcTag", "sPcTag", 2225, PropCategory.REGULAR)
    prop.label = "Source PC Tag"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("any", "any", 0)
    meta.props.add("sPcTag", prop)

    prop = PropMeta("str", "src", "src", 2214, PropCategory.REGULAR)
    prop.label = "Source Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("src", prop)

    prop = PropMeta("str", "srcMac", "srcMac", 2210, PropCategory.REGULAR)
    prop.label = "Source MAC"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("dont-care", "wildcard-mac", 0)
    meta.props.add("srcMac", prop)

    prop = PropMeta("str", "srcPort", "srcPort", 2232, PropCategory.REGULAR)
    prop.label = "Source Port"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dns", "dns", 53)
    prop._addConstant("ftpData", "ftp-data", 20)
    prop._addConstant("http", "http", 80)
    prop._addConstant("https", "https", 443)
    prop._addConstant("pop3", "pop3", 110)
    prop._addConstant("rtsp", "rtsp", 554)
    prop._addConstant("smtp", "smtp", 25)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("srcPort", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tcpFlags", "tcpFlags", 2234, PropCategory.REGULAR)
    prop.label = "TCP Flags"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("ack", "acknowledgment", 2)
    prop._addConstant("est", "established", 16)
    prop._addConstant("fin", "finish", 4)
    prop._addConstant("rst", "reset", 8)
    prop._addConstant("syn", "synchronize", 1)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("tcpFlags", prop)

    prop = PropMeta("str", "tcpFlagsMask", "tcpFlagsMask", 2235, PropCategory.REGULAR)
    prop.label = "TCP Flags Mask"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("ack", "acknowledgment", 2)
    prop._addConstant("est", "established", 16)
    prop._addConstant("fin", "finish", 4)
    prop._addConstant("rst", "reset", 8)
    prop._addConstant("syn", "synchronize", 1)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("tcpFlagsMask", prop)

    prop = PropMeta("str", "tenantName", "tenantName", 15398, PropCategory.REGULAR)
    prop.label = "Tenant Name for this Atomic Counter Rule"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("tenantName", prop)

    prop = PropMeta("str", "ttl", "ttl", 2219, PropCategory.REGULAR)
    prop.label = "TTL"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("ttl", prop)

    prop = PropMeta("str", "type", "type", 19057, PropCategory.REGULAR)
    prop.label = "IP Protocol Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("ipv4", "ipv4", 1)
    prop._addConstant("ipv6", "ipv6", 2)
    meta.props.add("type", prop)

    prop = PropMeta("str", "usage", "usage", 27784, PropCategory.REGULAR)
    prop.label = "Usage"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "atomic-counter"
    prop._addConstant("atomic-counter", "atomic-counter", 1)
    prop._addConstant("latency-stats", "latency-statistics", 2)
    meta.props.add("usage", prop)

    prop = PropMeta("str", "vrfName", "vrfName", 15862, PropCategory.REGULAR)
    prop.label = "VRF Name for this Atomic Counter Rule"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("vrfName", prop)

    meta.namingProps.append(getattr(meta.props, "ruleId"))

    def __init__(self, parentMoOrDn, ruleId, markDirty=True, **creationProps):
        namingVals = [ruleId]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class DomMbrIf(Mo):
    """
    The runtime/operational state for interfaces maintained by VRF management processes. This is an internal object that tracks the state used by the nxos process for the operations.

    """

    meta = ClassMeta("cobra.model.l3.DomMbrIf")

    meta.moClassName = "l3DomMbrIf"
    meta.rnFormat = "dommbr-[%(id)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "Domain Member Interface"
    meta.writeAccessMask = 0x400401002001
    meta.readAccessMask = 0x400401002001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.l3vm.Inst")

    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('dommbr-', True),
    ]

    prop = PropMeta("str", "bgpExtCommVal", "bgpExtCommVal", 4278, PropCategory.REGULAR)
    prop.label = "BGP Extended Community Value"
    prop.isOper = True
    meta.props.add("bgpExtCommVal", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "gsdbCtx", "gsdbCtx", 4276, PropCategory.REGULAR)
    prop.label = "GSDB Context"
    prop.isOper = True
    meta.props.add("gsdbCtx", prop)

    prop = PropMeta("str", "gsdbCtxType", "gsdbCtxType", 4277, PropCategory.REGULAR)
    prop.label = "GSDB Context Type"
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "if"
    prop._addConstant("if", "if", 2)
    prop._addConstant("if-list", "if-list", 5)
    prop._addConstant("if-table", "if-table", 4)
    prop._addConstant("purge", "purge", 6)
    prop._addConstant("route-limits", "route-limits", 9)
    prop._addConstant("source-of-origin", "source-of-origin", 8)
    prop._addConstant("table", "table", 3)
    prop._addConstant("vpnid", "vpnid", 7)
    prop._addConstant("vrf", "vrf", 1)
    meta.props.add("gsdbCtxType", prop)

    prop = PropMeta("str", "id", "id", 4270, PropCategory.REGULAR)
    prop.label = "Interface ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "iod", "iod", 4271, PropCategory.REGULAR)
    prop.label = "IOD"
    prop.isOper = True
    meta.props.add("iod", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 5577, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "oldVrfId", "oldVrfId", 4273, PropCategory.REGULAR)
    prop.label = "Old VRF ID"
    prop.isOper = True
    prop.range = [(1, 65535)]
    meta.props.add("oldVrfId", prop)

    prop = PropMeta("str", "oldVrfName", "oldVrfName", 4275, PropCategory.REGULAR)
    prop.label = "Old VRF Name"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("oldVrfName", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "vrfId", "vrfId", 4272, PropCategory.REGULAR)
    prop.label = "VRF ID"
    prop.isOper = True
    prop.range = [(1, 65535)]
    meta.props.add("vrfId", prop)

    prop = PropMeta("str", "vrfName", "vrfName", 4274, PropCategory.REGULAR)
    prop.label = "VRF Name"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("vrfName", prop)

    meta.namingProps.append(getattr(meta.props, "id"))
    getattr(meta.props, "id").needDelimiter = True

    def __init__(self, parentMoOrDn, id, markDirty=True, **creationProps):
        namingVals = [id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class GroupStats(Mo):
    """
     Object representing HSRP Groups stats data 

    """

    meta = ClassMeta("cobra.model.hsrp.GroupStats")

    meta.moClassName = "hsrpGroupStats"
    meta.rnFormat = "stats"
    meta.category = MoCategory.REGULAR
    meta.label = "HSRP Group Statistics"
    meta.writeAccessMask = 0x20000001
    meta.readAccessMask = 0x20000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.hsrp.GroupV1")
    meta.parentClasses.add("cobra.model.hsrp.GroupV2")

    meta.rnPrefixes = [
        ('stats', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "helloRx", "helloRx", 24617, PropCategory.REGULAR)
    prop.label = "No of Hello received"
    prop.isOper = True
    meta.props.add("helloRx", prop)

    prop = PropMeta("str", "helloRxErr", "helloRxErr", 24618, PropCategory.REGULAR)
    prop.label = "No of Hello Rx error"
    prop.isOper = True
    meta.props.add("helloRxErr", prop)

    prop = PropMeta("str", "helloTx", "helloTx", 24616, PropCategory.REGULAR)
    prop.label = "No of Hello transmitted"
    prop.isOper = True
    meta.props.add("helloTx", prop)

    prop = PropMeta("str", "helloTxErr", "helloTxErr", 24619, PropCategory.REGULAR)
    prop.label = "No of packets failed to transmit"
    prop.isOper = True
    meta.props.add("helloTxErr", prop)

    prop = PropMeta("str", "invldPkts", "invldPkts", 24620, PropCategory.REGULAR)
    prop.label = "Invalid hello packets"
    prop.isOper = True
    meta.props.add("invldPkts", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

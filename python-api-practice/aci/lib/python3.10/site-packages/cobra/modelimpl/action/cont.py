# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Cont(Mo):
    """
    The action container.

    """

    meta = ClassMeta("cobra.model.action.Cont")

    meta.moClassName = "actionCont"
    meta.rnFormat = "action"
    meta.category = MoCategory.REGULAR
    meta.label = "None"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x79ffffffffffffff
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.action.LicensemgrSubj")
    meta.childClasses.add("cobra.model.action.StreamelemSubj")
    meta.childClasses.add("cobra.model.action.ObserverSubj")
    meta.childClasses.add("cobra.model.action.SnmpdSubj")
    meta.childClasses.add("cobra.model.action.VmmmgrSubj")
    meta.childClasses.add("cobra.model.action.VtapSubj")
    meta.childClasses.add("cobra.model.action.AnalyticsSubj")
    meta.childClasses.add("cobra.model.action.ScripthandlerSubj")
    meta.childClasses.add("cobra.model.action.ConfelemSubj")
    meta.childClasses.add("cobra.model.action.GoobserverelemSubj")
    meta.childClasses.add("cobra.model.action.EventmgrSubj")
    meta.childClasses.add("cobra.model.action.OspaelemSubj")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.action.GohealthelemSubj")
    meta.childClasses.add("cobra.model.action.OshSubj")
    meta.childClasses.add("cobra.model.action.DhcpdSubj")
    meta.childClasses.add("cobra.model.action.OpflexelemSubj")
    meta.childClasses.add("cobra.model.tag.Annotation")
    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.action.DomainmgrSubj")
    meta.childClasses.add("cobra.model.action.DbgrelemSubj")
    meta.childClasses.add("cobra.model.action.CloudpeSubj")
    meta.childClasses.add("cobra.model.action.PlgnhandlerSubj")
    meta.childClasses.add("cobra.model.action.TopomgrSubj")
    meta.childClasses.add("cobra.model.action.VleafelemSubj")
    meta.childClasses.add("cobra.model.action.NxosmockSubj")
    meta.childClasses.add("cobra.model.action.DbgrSubj")
    meta.childClasses.add("cobra.model.action.PlatformmgrSubj")
    meta.childClasses.add("cobra.model.action.AppliancedirectorSubj")
    meta.childClasses.add("cobra.model.action.OpflexpSubj")
    meta.childClasses.add("cobra.model.action.BootmgrSubj")
    meta.childClasses.add("cobra.model.action.AeSubj")
    meta.childClasses.add("cobra.model.action.GoeventelemSubj")
    meta.childClasses.add("cobra.model.action.GoconnectorSubj")
    meta.childClasses.add("cobra.model.action.PolicymgrSubj")
    meta.childClasses.add("cobra.model.action.ExtXMLApiSubj")
    meta.childClasses.add("cobra.model.action.ObserverelemSubj")
    meta.childClasses.add("cobra.model.action.PolicyelemSubj")
    meta.childClasses.add("cobra.model.action.PolicydistSubj")
    meta.childClasses.add("cobra.model.action.IdmgrSubj")
    meta.childClasses.add("cobra.model.action.EdmgrSubj")

    meta.childNamesAndRnPrefix.append(("cobra.model.action.AppliancedirectorSubj", "appliancedirectorsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.GoobserverelemSubj", "goobserverelemsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.ScripthandlerSubj", "scripthandlersubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.GohealthelemSubj", "gohealthelemsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.ObserverelemSubj", "observerelemsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.PlgnhandlerSubj", "plgnhandlersubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.PlatformmgrSubj", "platformmgrsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.GoeventelemSubj", "goeventelemsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.GoconnectorSubj", "goconnectorsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.LicensemgrSubj", "licensemgrsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.StreamelemSubj", "streamelemsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.OpflexelemSubj", "opflexelemsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.PolicyelemSubj", "policyelemsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.PolicydistSubj", "policydistsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.AnalyticsSubj", "analyticssubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.DomainmgrSubj", "domainmgrsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.VleafelemSubj", "vleafelemsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.PolicymgrSubj", "policymgrsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.ExtXMLApiSubj", "extXMLApisubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.ObserverSubj", "observersubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.ConfelemSubj", "confelemsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.EventmgrSubj", "eventmgrsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.OspaelemSubj", "ospaelemsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.DbgrelemSubj", "dbgrelemsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.NxosmockSubj", "nxosmocksubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.CloudpeSubj", "cloudpesubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.TopomgrSubj", "topomgrsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.OpflexpSubj", "opflexpsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.BootmgrSubj", "bootmgrsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.VmmmgrSubj", "vmmmgrsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.SnmpdSubj", "snmpdsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.DhcpdSubj", "dhcpdsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.IdmgrSubj", "idmgrsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.EdmgrSubj", "edmgrsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.VtapSubj", "vtapsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.DbgrSubj", "dbgrsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.OshSubj", "oshsubj-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.action.AeSubj", "aesubj-"))

    meta.parentClasses.add("cobra.model.top.Root")

    meta.superClasses.add("cobra.model.action.ACont")

    meta.rnPrefixes = [
        ('action', False),
    ]

    prop = PropMeta("str", "annotation", "annotation", 37266, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 39405, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

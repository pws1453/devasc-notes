# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Ctxt(Mo):
    """
    This object is generated and used only by internal processes.

    """

    meta = ClassMeta("cobra.model.vmm.Ctxt")

    meta.moClassName = "vmmCtxt"
    meta.rnFormat = "ctxt"
    meta.category = MoCategory.REGULAR
    meta.label = "VMM Context"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.comp.Element")
    meta.superClasses.add("cobra.model.naming.NamedIdentifiedObject")
    meta.superClasses.add("cobra.model.comp.Entity")

    meta.rnPrefixes = [
        ('ctxt', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "ctrlrDn", "ctrlrDn", 1854, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("ctrlrDn", prop)

    prop = PropMeta("str", "descr", "descr", 5587, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "errCode", "errCode", 54013, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("ERR-FILTER-illegal-format", None, 1140)
    prop._addConstant("ERR-FSM-no-such-state", None, 1160)
    prop._addConstant("ERR-HTTP-set-error", None, 1551)
    prop._addConstant("ERR-HTTPS-set-error", None, 1552)
    prop._addConstant("ERR-MO-CONFIG-child-object-cant-be-configured", None, 1130)
    prop._addConstant("ERR-MO-META-no-such-object-class", None, 1122)
    prop._addConstant("ERR-MO-PROPERTY-no-such-property", None, 1121)
    prop._addConstant("ERR-MO-PROPERTY-value-out-of-range", None, 1120)
    prop._addConstant("ERR-MO-access-denied", None, 1170)
    prop._addConstant("ERR-MO-deletion-rule-violation", None, 1107)
    prop._addConstant("ERR-MO-duplicate-object", None, 1103)
    prop._addConstant("ERR-MO-illegal-containment", None, 1106)
    prop._addConstant("ERR-MO-illegal-creation", None, 1105)
    prop._addConstant("ERR-MO-illegal-iterator-state", None, 1100)
    prop._addConstant("ERR-MO-illegal-object-lifecycle-transition", None, 1101)
    prop._addConstant("ERR-MO-naming-rule-violation", None, 1104)
    prop._addConstant("ERR-MO-object-not-found", None, 1102)
    prop._addConstant("ERR-MO-resource-allocation", None, 1150)
    prop._addConstant("ERR-aaa-config-modify-error", None, 1520)
    prop._addConstant("ERR-acct-realm-set-error", None, 1513)
    prop._addConstant("ERR-add-ctrlr", None, 1574)
    prop._addConstant("ERR-admin-passwd-set", None, 1522)
    prop._addConstant("ERR-api", None, 1571)
    prop._addConstant("ERR-auth-issue", None, 1548)
    prop._addConstant("ERR-auth-realm-set-error", None, 1514)
    prop._addConstant("ERR-authentication", None, 1534)
    prop._addConstant("ERR-authorization-required", None, 1535)
    prop._addConstant("ERR-connect", None, 1572)
    prop._addConstant("ERR-create-domain", None, 1562)
    prop._addConstant("ERR-create-keyring", None, 1560)
    prop._addConstant("ERR-create-role", None, 1526)
    prop._addConstant("ERR-create-user", None, 1524)
    prop._addConstant("ERR-delete-domain", None, 1564)
    prop._addConstant("ERR-delete-role", None, 1528)
    prop._addConstant("ERR-delete-user", None, 1523)
    prop._addConstant("ERR-domain-set-error", None, 1561)
    prop._addConstant("ERR-http-initializing", None, 1549)
    prop._addConstant("ERR-incompat-ctrlr-version", None, 1568)
    prop._addConstant("ERR-internal-error", None, 1540)
    prop._addConstant("ERR-invalid-args", None, 1569)
    prop._addConstant("ERR-invalid-delimiter", None, 1589)
    prop._addConstant("ERR-invalid-domain", None, 1588)
    prop._addConstant("ERR-invalid-domain-name", None, 1582)
    prop._addConstant("ERR-ldap-delete-error", None, 1510)
    prop._addConstant("ERR-ldap-get-error", None, 1509)
    prop._addConstant("ERR-ldap-group-modify-error", None, 1518)
    prop._addConstant("ERR-ldap-group-set-error", None, 1502)
    prop._addConstant("ERR-ldap-set-error", None, 1511)
    prop._addConstant("ERR-missing-method", None, 1546)
    prop._addConstant("ERR-modify-ctrlr-access", None, 1567)
    prop._addConstant("ERR-modify-ctrlr-dvs-version", None, 1576)
    prop._addConstant("ERR-modify-ctrlr-rootcont", None, 1575)
    prop._addConstant("ERR-modify-ctrlr-scope", None, 1573)
    prop._addConstant("ERR-modify-ctrlr-trig-inventory", None, 1577)
    prop._addConstant("ERR-modify-domain", None, 1563)
    prop._addConstant("ERR-modify-domain-encapmode", None, 1581)
    prop._addConstant("ERR-modify-domain-enfpref", None, 1578)
    prop._addConstant("ERR-modify-domain-mcastpool", None, 1579)
    prop._addConstant("ERR-modify-domain-mode", None, 1580)
    prop._addConstant("ERR-modify-domain-prefencapmode", None, 1584)
    prop._addConstant("ERR-modify-role", None, 1527)
    prop._addConstant("ERR-modify-user", None, 1525)
    prop._addConstant("ERR-modify-user-domain", None, 1565)
    prop._addConstant("ERR-modify-user-role", None, 1532)
    prop._addConstant("ERR-no-buf", None, 1570)
    prop._addConstant("ERR-passwd-set-failure", None, 1566)
    prop._addConstant("ERR-provider-group-modify-error", None, 1519)
    prop._addConstant("ERR-provider-group-set-error", None, 1512)
    prop._addConstant("ERR-radius-global-set-error", None, 1505)
    prop._addConstant("ERR-radius-group-set-error", None, 1501)
    prop._addConstant("ERR-radius-set-error", None, 1504)
    prop._addConstant("ERR-request-timeout", None, 1545)
    prop._addConstant("ERR-role-set-error", None, 1515)
    prop._addConstant("ERR-rsa-global-set-error", None, 1587)
    prop._addConstant("ERR-rsa-group-set-error", None, 1585)
    prop._addConstant("ERR-rsa-set-error", None, 1586)
    prop._addConstant("ERR-secondary-node", None, 1550)
    prop._addConstant("ERR-service-not-ready", None, 1539)
    prop._addConstant("ERR-set-password-strength-check", None, 1543)
    prop._addConstant("ERR-store-pre-login-banner-msg", None, 1521)
    prop._addConstant("ERR-tacacs-enable-error", None, 1508)
    prop._addConstant("ERR-tacacs-global-set-error", None, 1507)
    prop._addConstant("ERR-tacacs-group-set-error", None, 1503)
    prop._addConstant("ERR-tacacs-set-error", None, 1506)
    prop._addConstant("ERR-user-account-expired", None, 1536)
    prop._addConstant("ERR-user-set-error", None, 1517)
    prop._addConstant("ERR-xml-parse-error", None, 1547)
    prop._addConstant("communication-error", "communication-error", 1)
    prop._addConstant("none", "none", 0)
    meta.props.add("errCode", prop)

    prop = PropMeta("str", "guid", "guid", 1006, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("guid", prop)

    prop = PropMeta("str", "id", "id", 1003, PropCategory.REGULAR)
    prop.label = "Id"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "issues", "issues", 34206, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("ds-update-fault", "failed-to-update-ds(data-store)-property", 4096)
    prop._addConstant("hpnic-miss-epg-fault", "hpnic-is-attached-to-an-invalid-uplink-dvs-port-group", 32)
    prop._addConstant("hv-disconnect-fault", "esx-host-is-disconnected-or-not-responding", 128)
    prop._addConstant("hv-miss-dvs-fault", "esx-host-is-configured-with-invalid-dvs", 64)
    prop._addConstant("hv-miss-pnic-fault", "esx-host-does-not-have-any-pnic", 1024)
    prop._addConstant("hv-miss-vmknic-fault", "esx-host-does-not-have-any-vmknic", 256)
    prop._addConstant("hv-update-fault", "failed-to-update-hv(esx-host)-property", 2)
    prop._addConstant("lnode-property-fault", "failed-to-get-dvs-property", 1)
    prop._addConstant("mgmtnic-miss-dvs-fault", "vmk-nic-is-configured-with-invalid-dvs", 512)
    prop._addConstant("none", "none", 0)
    prop._addConstant("opflex-channels-down-ave", "both-the-opflex-channels-are-down-for-ave.-please-check-the-connections-on-the-host.", 16384)
    prop._addConstant("prep-iso-file-fault", "failed-to-prepare-or-push-iso-file-for-service-vm-deployment.-please-check-if-correct-datastore-is-selected-in-policy.", 131072)
    prop._addConstant("rp-update-fault", "failed-to-update-rp(resource-pool)-property", 8192)
    prop._addConstant("tagging-cat-fault", "failed-to-retrieve-all-tag-category-information", 65536)
    prop._addConstant("tagging-tag-fault", "failed-to-retrieve-all-tag-information", 32768)
    prop._addConstant("vm-deploy-task-fault", "deployvm-task-failed-on-vcenter", 2048)
    prop._addConstant("vm-miss-hv-fault", "vm-is-attached-to-an-invalid-hv(esx-host)", 8)
    prop._addConstant("vm-update-fault", "failed-to-update-vm(virtual-machine)-property", 4)
    prop._addConstant("vmfolder-update-fault", "failed-to-update-vm(virtual-machine)-folder-property", 262144)
    prop._addConstant("vnic-miss-epg-fault", "vnic-is-attached-to-an-invalid-dvs-port-group-or-unable-to-communicate-with-vcenter", 16)
    meta.props.add("issues", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 1004, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "oid", "oid", 1005, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("oid", prop)

    prop = PropMeta("str", "replicaId", "replicaId", 1856, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 3), (127, 127)]
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("local", "local", 127)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("replicaId", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "runId", "runId", 1860, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("runId", prop)

    prop = PropMeta("str", "shardId", "shardId", 1855, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("local", "local", 255)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("shardId", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "trigDn", "trigDn", 1858, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("trigDn", prop)

    prop = PropMeta("str", "trigId", "trigId", 1859, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("trigId", prop)

    prop = PropMeta("str", "trigT", "trigT", 1857, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("fsm", "fsm", 2)
    prop._addConstant("none", "none", 0)
    prop._addConstant("task", "task", 1)
    meta.props.add("trigT", prop)

    prop = PropMeta("str", "uuid", "uuid", 35668, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("uuid", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

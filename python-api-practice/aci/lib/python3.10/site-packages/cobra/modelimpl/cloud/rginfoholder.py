# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class RgInfoHolder(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.cloud.RgInfoHolder")

    meta.moClassName = "cloudRgInfoHolder"
    meta.rnFormat = "rg-%(region)s"
    meta.category = MoCategory.REGULAR
    meta.label = "EPg Region Stats Holder"
    meta.writeAccessMask = 0x601
    meta.readAccessMask = 0x601
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.cloud.IngressPkts1h")
    meta.childClasses.add("cobra.model.cloud.EgressPktsHist1qtr")
    meta.childClasses.add("cobra.model.cloud.EgressPkts5min")
    meta.childClasses.add("cobra.model.cloud.IngressPkts1d")
    meta.childClasses.add("cobra.model.cloud.IngressPktsHist1qtr")
    meta.childClasses.add("cobra.model.cloud.IngressPktsHist1year")
    meta.childClasses.add("cobra.model.cloud.IngressPktsHist1d")
    meta.childClasses.add("cobra.model.cloud.EgressPktsHist15min")
    meta.childClasses.add("cobra.model.cloud.EgressPkts1mo")
    meta.childClasses.add("cobra.model.cloud.EgressBytes5min")
    meta.childClasses.add("cobra.model.cloud.IngressPkts1w")
    meta.childClasses.add("cobra.model.cloud.EgressBytesHist5min")
    meta.childClasses.add("cobra.model.cloud.EgressBytes15min")
    meta.childClasses.add("cobra.model.cloud.IngressPkts5min")
    meta.childClasses.add("cobra.model.cloud.IngressPktsHist1h")
    meta.childClasses.add("cobra.model.cloud.EgressBytesHist15min")
    meta.childClasses.add("cobra.model.cloud.IngressBytes1year")
    meta.childClasses.add("cobra.model.cloud.IngressBytes1mo")
    meta.childClasses.add("cobra.model.cloud.IngressPkts1year")
    meta.childClasses.add("cobra.model.cloud.IngressBytesHist1w")
    meta.childClasses.add("cobra.model.cloud.IngressBytesHist1qtr")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.cloud.IngressBytesHist1h")
    meta.childClasses.add("cobra.model.cloud.EgressPktsHist1d")
    meta.childClasses.add("cobra.model.cloud.EgressBytes1h")
    meta.childClasses.add("cobra.model.cloud.EgressPktsHist1mo")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.cloud.IngressBytesHist1d")
    meta.childClasses.add("cobra.model.cloud.IngressBytesHist1year")
    meta.childClasses.add("cobra.model.cloud.EgressBytes1w")
    meta.childClasses.add("cobra.model.cloud.EgressBytes1year")
    meta.childClasses.add("cobra.model.cloud.EgressBytesHist1qtr")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.cloud.EgressPkts1w")
    meta.childClasses.add("cobra.model.cloud.EgressBytes1qtr")
    meta.childClasses.add("cobra.model.cloud.IngressPktsHist1w")
    meta.childClasses.add("cobra.model.cloud.EgressBytesHist1w")
    meta.childClasses.add("cobra.model.cloud.IngressBytes1w")
    meta.childClasses.add("cobra.model.cloud.IngressPkts1mo")
    meta.childClasses.add("cobra.model.cloud.IngressBytes1h")
    meta.childClasses.add("cobra.model.cloud.EgressBytes1d")
    meta.childClasses.add("cobra.model.cloud.IngressPktsHist5min")
    meta.childClasses.add("cobra.model.cloud.EgressPkts1year")
    meta.childClasses.add("cobra.model.cloud.EgressPkts1d")
    meta.childClasses.add("cobra.model.cloud.IngressPktsHist15min")
    meta.childClasses.add("cobra.model.cloud.IngressPktsHist1mo")
    meta.childClasses.add("cobra.model.cloud.EgressPkts1h")
    meta.childClasses.add("cobra.model.cloud.IngressBytesHist5min")
    meta.childClasses.add("cobra.model.cloud.IngressBytes1d")
    meta.childClasses.add("cobra.model.cloud.EgressBytesHist1d")
    meta.childClasses.add("cobra.model.cloud.EgressBytes1mo")
    meta.childClasses.add("cobra.model.cloud.IngressBytes1qtr")
    meta.childClasses.add("cobra.model.cloud.IngressBytesHist1mo")
    meta.childClasses.add("cobra.model.cloud.EgressBytesHist1year")
    meta.childClasses.add("cobra.model.cloud.IngressPkts15min")
    meta.childClasses.add("cobra.model.cloud.EgressPkts1qtr")
    meta.childClasses.add("cobra.model.cloud.EgressPktsHist5min")
    meta.childClasses.add("cobra.model.cloud.IngressBytes15min")
    meta.childClasses.add("cobra.model.cloud.EgressPktsHist1w")
    meta.childClasses.add("cobra.model.cloud.EgressBytesHist1h")
    meta.childClasses.add("cobra.model.cloud.EgressBytesHist1mo")
    meta.childClasses.add("cobra.model.cloud.EgressPkts15min")
    meta.childClasses.add("cobra.model.cloud.EgressPktsHist1year")
    meta.childClasses.add("cobra.model.cloud.IngressBytes5min")
    meta.childClasses.add("cobra.model.cloud.IngressPkts1qtr")
    meta.childClasses.add("cobra.model.cloud.IngressBytesHist15min")
    meta.childClasses.add("cobra.model.cloud.EgressPktsHist1h")

    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytesHist1year", "HDcloudIngressBytes1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytesHist15min", "HDcloudIngressBytes15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPktsHist1year", "HDcloudIngressPkts1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytesHist15min", "HDcloudEgressBytes15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytes1year", "CDcloudIngressBytes1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytesHist1qtr", "HDcloudIngressBytes1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPktsHist15min", "HDcloudIngressPkts15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytesHist5min", "HDcloudIngressBytes5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytesHist1year", "HDcloudEgressBytes1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytes15min", "CDcloudIngressBytes15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPktsHist1qtr", "HDcloudIngressPkts1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPktsHist15min", "HDcloudEgressPkts15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytesHist5min", "HDcloudEgressBytes5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytes15min", "CDcloudEgressBytes15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPkts1year", "CDcloudIngressPkts1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytes1year", "CDcloudEgressBytes1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytesHist1qtr", "HDcloudEgressBytes1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPktsHist5min", "HDcloudIngressPkts5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytes1qtr", "CDcloudIngressBytes1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytesHist1mo", "HDcloudIngressBytes1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPkts15min", "CDcloudIngressPkts15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPktsHist1year", "HDcloudEgressPkts1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytes5min", "CDcloudIngressBytes5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPktsHist1qtr", "HDcloudEgressPkts1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytes5min", "CDcloudEgressBytes5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPkts5min", "CDcloudIngressPkts5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytes1mo", "CDcloudIngressBytes1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytesHist1w", "HDcloudIngressBytes1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytesHist1h", "HDcloudIngressBytes1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytesHist1d", "HDcloudIngressBytes1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytes1qtr", "CDcloudEgressBytes1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPkts1year", "CDcloudEgressPkts1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPktsHist1mo", "HDcloudIngressPkts1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPktsHist5min", "HDcloudEgressPkts5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytesHist1mo", "HDcloudEgressBytes1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPkts15min", "CDcloudEgressPkts15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPkts1qtr", "CDcloudIngressPkts1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPkts5min", "CDcloudEgressPkts5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPktsHist1d", "HDcloudIngressPkts1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPktsHist1h", "HDcloudIngressPkts1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPktsHist1mo", "HDcloudEgressPkts1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPktsHist1w", "HDcloudIngressPkts1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytesHist1w", "HDcloudEgressBytes1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytes1w", "CDcloudIngressBytes1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPkts1mo", "CDcloudIngressPkts1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytes1h", "CDcloudIngressBytes1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressBytes1d", "CDcloudIngressBytes1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytesHist1d", "HDcloudEgressBytes1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytes1mo", "CDcloudEgressBytes1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPkts1qtr", "CDcloudEgressPkts1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytesHist1h", "HDcloudEgressBytes1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPkts1h", "CDcloudIngressPkts1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPkts1d", "CDcloudIngressPkts1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPkts1mo", "CDcloudEgressPkts1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.IngressPkts1w", "CDcloudIngressPkts1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPktsHist1d", "HDcloudEgressPkts1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytes1h", "CDcloudEgressBytes1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytes1w", "CDcloudEgressBytes1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressBytes1d", "CDcloudEgressBytes1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPktsHist1w", "HDcloudEgressPkts1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPktsHist1h", "HDcloudEgressPkts1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPkts1w", "CDcloudEgressPkts1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPkts1d", "CDcloudEgressPkts1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.EgressPkts1h", "CDcloudEgressPkts1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.cloud.EPg")

    meta.superClasses.add("cobra.model.pol.Instr")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")

    meta.rnPrefixes = [
        ('rg-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5581, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 52032, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "region", "region", 52027, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 512)]
    meta.props.add("region", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "region"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudEPgToConsVzBrCP", "From EPg to Contract", "cobra.model.vz.BrCP"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudEPgToProvVzBrCP", "From EPg to Contract", "cobra.model.vz.BrCP"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudEpgToHcloudSecurityGroup", "cloud:EPg to hcloud:SecurityGroup", "cobra.model.hcloud.SecurityGroup"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudEpgToFvCtx", "cloud:EPg to fv:Ctx", "cobra.model.fv.Ctx"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudEpgToHCloudEndPoint", "cloud:EPg to hcloud:EndPoint", "cobra.model.hcloud.EndPoint"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudEPgToHCloudCtx", "From cloud EPg to VPCs hCloudCtx", "cobra.model.hcloud.Ctx"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("cloudEpgToApp", "cloudEpgToApp", "cobra.model.cloud.App"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("ATgToGraphInst", "Graph Instances", "cobra.model.vns.GraphInst"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("EPgToNwIf", "Interface", "cobra.model.nw.If"))

    def __init__(self, parentMoOrDn, region, markDirty=True, **creationProps):
        namingVals = [region]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

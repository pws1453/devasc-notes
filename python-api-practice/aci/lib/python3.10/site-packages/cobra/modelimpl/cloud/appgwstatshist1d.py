# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class AppGwStatsHist1d(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.cloud.AppGwStatsHist1d", "Azure ALB front end stats")

    counter = CounterMeta("CurrentConnections", CounterCategory.COUNTER, "count", "Azure LB existing connections")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "CurrentConnectionsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "CurrentConnectionsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "CurrentConnectionsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "CurrentConnectionsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "CurrentConnectionsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "CurrentConnectionsSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "CurrentConnectionsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "CurrentConnectionsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "CurrentConnectionsRate"
    meta._counters.append(counter)

    counter = CounterMeta("FailedRequests", CounterCategory.COUNTER, "count", "Azure LB Failed Requests")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "FailedRequestsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "FailedRequestsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "FailedRequestsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "FailedRequestsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "FailedRequestsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "FailedRequestsSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "FailedRequestsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "FailedRequestsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "FailedRequestsRate"
    meta._counters.append(counter)

    counter = CounterMeta("Throughput", CounterCategory.COUNTER, "count", "Azure LB Total Throughput")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "ThroughputCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "ThroughputPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "ThroughputMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "ThroughputMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "ThroughputAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "ThroughputSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "ThroughputThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "ThroughputTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "ThroughputRate"
    meta._counters.append(counter)

    counter = CounterMeta("TotalRequests", CounterCategory.COUNTER, "count", "Azure Native LB requests count")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "TotalRequestsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "TotalRequestsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "TotalRequestsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "TotalRequestsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "TotalRequestsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "TotalRequestsSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "TotalRequestsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "TotalRequestsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "TotalRequestsRate"
    meta._counters.append(counter)

    meta.moClassName = "cloudAppGwStatsHist1d"
    meta.rnFormat = "HDcloudAppGwStats1d-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical Azure ALB front end stats stats in 1 day"
    meta.writeAccessMask = 0x6000000000000001
    meta.readAccessMask = 0x6000000000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.cloud.LB")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Hist")
    meta.superClasses.add("cobra.model.cloud.AppGwStatsHist")

    meta.rnPrefixes = [
        ('HDcloudAppGwStats1d-', True),
    ]

    prop = PropMeta("str", "CurrentConnectionsAvg", "CurrentConnectionsAvg", 55384, PropCategory.IMPLICIT_AVG)
    prop.label = "Azure LB existing connections average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("CurrentConnectionsAvg", prop)

    prop = PropMeta("str", "CurrentConnectionsCum", "CurrentConnectionsCum", 55380, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Azure LB existing connections cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("CurrentConnectionsCum", prop)

    prop = PropMeta("str", "CurrentConnectionsMax", "CurrentConnectionsMax", 55383, PropCategory.IMPLICIT_MAX)
    prop.label = "Azure LB existing connections maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("CurrentConnectionsMax", prop)

    prop = PropMeta("str", "CurrentConnectionsMin", "CurrentConnectionsMin", 55382, PropCategory.IMPLICIT_MIN)
    prop.label = "Azure LB existing connections minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("CurrentConnectionsMin", prop)

    prop = PropMeta("str", "CurrentConnectionsPer", "CurrentConnectionsPer", 55381, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Azure LB existing connections periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("CurrentConnectionsPer", prop)

    prop = PropMeta("str", "CurrentConnectionsRate", "CurrentConnectionsRate", 55388, PropCategory.IMPLICIT_RATE)
    prop.label = "Azure LB existing connections rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("CurrentConnectionsRate", prop)

    prop = PropMeta("str", "CurrentConnectionsSpct", "CurrentConnectionsSpct", 55385, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Azure LB existing connections suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("CurrentConnectionsSpct", prop)

    prop = PropMeta("str", "CurrentConnectionsThr", "CurrentConnectionsThr", 55386, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Azure LB existing connections thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("CurrentConnectionsThr", prop)

    prop = PropMeta("str", "CurrentConnectionsTr", "CurrentConnectionsTr", 55387, PropCategory.IMPLICIT_TREND)
    prop.label = "Azure LB existing connections trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("CurrentConnectionsTr", prop)

    prop = PropMeta("str", "FailedRequestsAvg", "FailedRequestsAvg", 55418, PropCategory.IMPLICIT_AVG)
    prop.label = "Azure LB Failed Requests average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("FailedRequestsAvg", prop)

    prop = PropMeta("str", "FailedRequestsCum", "FailedRequestsCum", 55414, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Azure LB Failed Requests cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("FailedRequestsCum", prop)

    prop = PropMeta("str", "FailedRequestsMax", "FailedRequestsMax", 55417, PropCategory.IMPLICIT_MAX)
    prop.label = "Azure LB Failed Requests maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("FailedRequestsMax", prop)

    prop = PropMeta("str", "FailedRequestsMin", "FailedRequestsMin", 55416, PropCategory.IMPLICIT_MIN)
    prop.label = "Azure LB Failed Requests minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("FailedRequestsMin", prop)

    prop = PropMeta("str", "FailedRequestsPer", "FailedRequestsPer", 55415, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Azure LB Failed Requests periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("FailedRequestsPer", prop)

    prop = PropMeta("str", "FailedRequestsRate", "FailedRequestsRate", 55422, PropCategory.IMPLICIT_RATE)
    prop.label = "Azure LB Failed Requests rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("FailedRequestsRate", prop)

    prop = PropMeta("str", "FailedRequestsSpct", "FailedRequestsSpct", 55419, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Azure LB Failed Requests suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("FailedRequestsSpct", prop)

    prop = PropMeta("str", "FailedRequestsThr", "FailedRequestsThr", 55420, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Azure LB Failed Requests thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("FailedRequestsThr", prop)

    prop = PropMeta("str", "FailedRequestsTr", "FailedRequestsTr", 55421, PropCategory.IMPLICIT_TREND)
    prop.label = "Azure LB Failed Requests trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("FailedRequestsTr", prop)

    prop = PropMeta("str", "ThroughputAvg", "ThroughputAvg", 55452, PropCategory.IMPLICIT_AVG)
    prop.label = "Azure LB Total Throughput average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ThroughputAvg", prop)

    prop = PropMeta("str", "ThroughputCum", "ThroughputCum", 55448, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Azure LB Total Throughput cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ThroughputCum", prop)

    prop = PropMeta("str", "ThroughputMax", "ThroughputMax", 55451, PropCategory.IMPLICIT_MAX)
    prop.label = "Azure LB Total Throughput maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ThroughputMax", prop)

    prop = PropMeta("str", "ThroughputMin", "ThroughputMin", 55450, PropCategory.IMPLICIT_MIN)
    prop.label = "Azure LB Total Throughput minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ThroughputMin", prop)

    prop = PropMeta("str", "ThroughputPer", "ThroughputPer", 55449, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Azure LB Total Throughput periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ThroughputPer", prop)

    prop = PropMeta("str", "ThroughputRate", "ThroughputRate", 55456, PropCategory.IMPLICIT_RATE)
    prop.label = "Azure LB Total Throughput rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ThroughputRate", prop)

    prop = PropMeta("str", "ThroughputSpct", "ThroughputSpct", 55453, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Azure LB Total Throughput suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ThroughputSpct", prop)

    prop = PropMeta("str", "ThroughputThr", "ThroughputThr", 55454, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Azure LB Total Throughput thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("ThroughputThr", prop)

    prop = PropMeta("str", "ThroughputTr", "ThroughputTr", 55455, PropCategory.IMPLICIT_TREND)
    prop.label = "Azure LB Total Throughput trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ThroughputTr", prop)

    prop = PropMeta("str", "TotalRequestsAvg", "TotalRequestsAvg", 55486, PropCategory.IMPLICIT_AVG)
    prop.label = "Azure Native LB requests count average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("TotalRequestsAvg", prop)

    prop = PropMeta("str", "TotalRequestsCum", "TotalRequestsCum", 55482, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Azure Native LB requests count cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("TotalRequestsCum", prop)

    prop = PropMeta("str", "TotalRequestsMax", "TotalRequestsMax", 55485, PropCategory.IMPLICIT_MAX)
    prop.label = "Azure Native LB requests count maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("TotalRequestsMax", prop)

    prop = PropMeta("str", "TotalRequestsMin", "TotalRequestsMin", 55484, PropCategory.IMPLICIT_MIN)
    prop.label = "Azure Native LB requests count minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("TotalRequestsMin", prop)

    prop = PropMeta("str", "TotalRequestsPer", "TotalRequestsPer", 55483, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Azure Native LB requests count periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("TotalRequestsPer", prop)

    prop = PropMeta("str", "TotalRequestsRate", "TotalRequestsRate", 55490, PropCategory.IMPLICIT_RATE)
    prop.label = "Azure Native LB requests count rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("TotalRequestsRate", prop)

    prop = PropMeta("str", "TotalRequestsSpct", "TotalRequestsSpct", 55487, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Azure Native LB requests count suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("TotalRequestsSpct", prop)

    prop = PropMeta("str", "TotalRequestsThr", "TotalRequestsThr", 55488, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Azure Native LB requests count thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("TotalRequestsThr", prop)

    prop = PropMeta("str", "TotalRequestsTr", "TotalRequestsTr", 55489, PropCategory.IMPLICIT_TREND)
    prop.label = "Azure Native LB requests count trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("TotalRequestsTr", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "index", "index", 55361, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudLBToHcloudSecurityGroup", "From cloudLB to hcloudSecurityGroup", "cobra.model.hcloud.SecurityGroup"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudLBToVnsAbsGraph", "From cloudLB to vnsAbsGraph", "cobra.model.vns.AbsGraph"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("ALDevIfToGraphInst", "Graph Instances", "cobra.model.vns.GraphInst"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

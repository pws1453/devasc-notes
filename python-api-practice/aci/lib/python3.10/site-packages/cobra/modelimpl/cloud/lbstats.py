# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class LBStats(Mo):
    meta = StatsClassMeta("cobra.model.cloud.LBStats", "ALB front end stats")

    counter = CounterMeta("RuleEvaluations", CounterCategory.COUNTER, "count", "Native LB rules evaluated")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "RuleEvaluationsLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "RuleEvaluationsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "RuleEvaluationsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "RuleEvaluationsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "RuleEvaluationsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "RuleEvaluationsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "RuleEvaluationsSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "RuleEvaluationsBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "RuleEvaluationsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "RuleEvaluationsTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "RuleEvaluationsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "RuleEvaluationsRate"
    meta._counters.append(counter)

    counter = CounterMeta("HTTPCode_ELB_5XX_Count", CounterCategory.COUNTER, "count", "Native LB HTPP 5XX error count")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "HTTPCode_ELB_5XX_CountLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "HTTPCode_ELB_5XX_CountCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "HTTPCode_ELB_5XX_CountPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "HTTPCode_ELB_5XX_CountMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "HTTPCode_ELB_5XX_CountMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "HTTPCode_ELB_5XX_CountAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "HTTPCode_ELB_5XX_CountSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "HTTPCode_ELB_5XX_CountBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "HTTPCode_ELB_5XX_CountThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "HTTPCode_ELB_5XX_CountTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "HTTPCode_ELB_5XX_CountTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "HTTPCode_ELB_5XX_CountRate"
    meta._counters.append(counter)

    counter = CounterMeta("RejectedConnectionCount", CounterCategory.COUNTER, "count", "Nantive LB rejected requests count")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "RejectedConnectionCountLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "RejectedConnectionCountCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "RejectedConnectionCountPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "RejectedConnectionCountMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "RejectedConnectionCountMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "RejectedConnectionCountAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "RejectedConnectionCountSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "RejectedConnectionCountBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "RejectedConnectionCountThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "RejectedConnectionCountTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "RejectedConnectionCountTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "RejectedConnectionCountRate"
    meta._counters.append(counter)

    counter = CounterMeta("RequestCount", CounterCategory.COUNTER, "count", "Native LB requests count")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "RequestCountLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "RequestCountCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "RequestCountPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "RequestCountMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "RequestCountMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "RequestCountAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "RequestCountSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "RequestCountBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "RequestCountThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "RequestCountTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "RequestCountTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "RequestCountRate"
    meta._counters.append(counter)

    meta.isAbstract = True
    meta.moClassName = "cloudLBStats"


    meta.moClassName = "cloudLBStats"
    meta.rnFormat = ""
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current ALB front end stats stats"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Curr")

    meta.concreteSubClasses.add("cobra.model.cloud.LBStats1w")
    meta.concreteSubClasses.add("cobra.model.cloud.LBStats5min")
    meta.concreteSubClasses.add("cobra.model.cloud.LBStats1year")
    meta.concreteSubClasses.add("cobra.model.cloud.LBStats1mo")
    meta.concreteSubClasses.add("cobra.model.cloud.LBStats1qtr")
    meta.concreteSubClasses.add("cobra.model.cloud.LBStats1d")
    meta.concreteSubClasses.add("cobra.model.cloud.LBStats1h")
    meta.concreteSubClasses.add("cobra.model.cloud.LBStats15min")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountAvg", "HTTPCode_ELB_5XX_CountAvg", 52463, PropCategory.IMPLICIT_AVG)
    prop.label = "Native LB HTPP 5XX error count average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountAvg", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountBase", "HTTPCode_ELB_5XX_CountBase", 52458, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Native LB HTPP 5XX error count baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountBase", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountCum", "HTTPCode_ELB_5XX_CountCum", 52459, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Native LB HTPP 5XX error count cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountCum", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountLast", "HTTPCode_ELB_5XX_CountLast", 52457, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Native LB HTPP 5XX error count current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountLast", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountMax", "HTTPCode_ELB_5XX_CountMax", 52462, PropCategory.IMPLICIT_MAX)
    prop.label = "Native LB HTPP 5XX error count maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountMax", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountMin", "HTTPCode_ELB_5XX_CountMin", 52461, PropCategory.IMPLICIT_MIN)
    prop.label = "Native LB HTPP 5XX error count minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountMin", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountPer", "HTTPCode_ELB_5XX_CountPer", 52460, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Native LB HTPP 5XX error count periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountPer", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountRate", "HTTPCode_ELB_5XX_CountRate", 52468, PropCategory.IMPLICIT_RATE)
    prop.label = "Native LB HTPP 5XX error count rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountRate", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountSpct", "HTTPCode_ELB_5XX_CountSpct", 52464, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Native LB HTPP 5XX error count suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountSpct", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountThr", "HTTPCode_ELB_5XX_CountThr", 52465, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Native LB HTPP 5XX error count thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("HTTPCode_ELB_5XX_CountThr", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountTr", "HTTPCode_ELB_5XX_CountTr", 52467, PropCategory.IMPLICIT_TREND)
    prop.label = "Native LB HTPP 5XX error count trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountTr", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountTrBase", "HTTPCode_ELB_5XX_CountTrBase", 52466, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Native LB HTPP 5XX error count trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountTrBase", prop)

    prop = PropMeta("str", "RejectedConnectionCountAvg", "RejectedConnectionCountAvg", 52497, PropCategory.IMPLICIT_AVG)
    prop.label = "Nantive LB rejected requests count average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountAvg", prop)

    prop = PropMeta("str", "RejectedConnectionCountBase", "RejectedConnectionCountBase", 52492, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Nantive LB rejected requests count baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountBase", prop)

    prop = PropMeta("str", "RejectedConnectionCountCum", "RejectedConnectionCountCum", 52493, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Nantive LB rejected requests count cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountCum", prop)

    prop = PropMeta("str", "RejectedConnectionCountLast", "RejectedConnectionCountLast", 52491, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Nantive LB rejected requests count current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountLast", prop)

    prop = PropMeta("str", "RejectedConnectionCountMax", "RejectedConnectionCountMax", 52496, PropCategory.IMPLICIT_MAX)
    prop.label = "Nantive LB rejected requests count maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountMax", prop)

    prop = PropMeta("str", "RejectedConnectionCountMin", "RejectedConnectionCountMin", 52495, PropCategory.IMPLICIT_MIN)
    prop.label = "Nantive LB rejected requests count minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountMin", prop)

    prop = PropMeta("str", "RejectedConnectionCountPer", "RejectedConnectionCountPer", 52494, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Nantive LB rejected requests count periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountPer", prop)

    prop = PropMeta("str", "RejectedConnectionCountRate", "RejectedConnectionCountRate", 52502, PropCategory.IMPLICIT_RATE)
    prop.label = "Nantive LB rejected requests count rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountRate", prop)

    prop = PropMeta("str", "RejectedConnectionCountSpct", "RejectedConnectionCountSpct", 52498, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Nantive LB rejected requests count suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountSpct", prop)

    prop = PropMeta("str", "RejectedConnectionCountThr", "RejectedConnectionCountThr", 52499, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Nantive LB rejected requests count thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("RejectedConnectionCountThr", prop)

    prop = PropMeta("str", "RejectedConnectionCountTr", "RejectedConnectionCountTr", 52501, PropCategory.IMPLICIT_TREND)
    prop.label = "Nantive LB rejected requests count trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountTr", prop)

    prop = PropMeta("str", "RejectedConnectionCountTrBase", "RejectedConnectionCountTrBase", 52500, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Nantive LB rejected requests count trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountTrBase", prop)

    prop = PropMeta("str", "RequestCountAvg", "RequestCountAvg", 52531, PropCategory.IMPLICIT_AVG)
    prop.label = "Native LB requests count average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountAvg", prop)

    prop = PropMeta("str", "RequestCountBase", "RequestCountBase", 52526, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Native LB requests count baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountBase", prop)

    prop = PropMeta("str", "RequestCountCum", "RequestCountCum", 52527, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Native LB requests count cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountCum", prop)

    prop = PropMeta("str", "RequestCountLast", "RequestCountLast", 52525, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Native LB requests count current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountLast", prop)

    prop = PropMeta("str", "RequestCountMax", "RequestCountMax", 52530, PropCategory.IMPLICIT_MAX)
    prop.label = "Native LB requests count maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountMax", prop)

    prop = PropMeta("str", "RequestCountMin", "RequestCountMin", 52529, PropCategory.IMPLICIT_MIN)
    prop.label = "Native LB requests count minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountMin", prop)

    prop = PropMeta("str", "RequestCountPer", "RequestCountPer", 52528, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Native LB requests count periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountPer", prop)

    prop = PropMeta("str", "RequestCountRate", "RequestCountRate", 52536, PropCategory.IMPLICIT_RATE)
    prop.label = "Native LB requests count rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountRate", prop)

    prop = PropMeta("str", "RequestCountSpct", "RequestCountSpct", 52532, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Native LB requests count suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountSpct", prop)

    prop = PropMeta("str", "RequestCountThr", "RequestCountThr", 52533, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Native LB requests count thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("RequestCountThr", prop)

    prop = PropMeta("str", "RequestCountTr", "RequestCountTr", 52535, PropCategory.IMPLICIT_TREND)
    prop.label = "Native LB requests count trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountTr", prop)

    prop = PropMeta("str", "RequestCountTrBase", "RequestCountTrBase", 52534, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Native LB requests count trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountTrBase", prop)

    prop = PropMeta("str", "RuleEvaluationsAvg", "RuleEvaluationsAvg", 52932, PropCategory.IMPLICIT_AVG)
    prop.label = "Native LB rules evaluated average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsAvg", prop)

    prop = PropMeta("str", "RuleEvaluationsBase", "RuleEvaluationsBase", 52927, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Native LB rules evaluated baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsBase", prop)

    prop = PropMeta("str", "RuleEvaluationsCum", "RuleEvaluationsCum", 52928, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Native LB rules evaluated cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsCum", prop)

    prop = PropMeta("str", "RuleEvaluationsLast", "RuleEvaluationsLast", 52926, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Native LB rules evaluated current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsLast", prop)

    prop = PropMeta("str", "RuleEvaluationsMax", "RuleEvaluationsMax", 52931, PropCategory.IMPLICIT_MAX)
    prop.label = "Native LB rules evaluated maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsMax", prop)

    prop = PropMeta("str", "RuleEvaluationsMin", "RuleEvaluationsMin", 52930, PropCategory.IMPLICIT_MIN)
    prop.label = "Native LB rules evaluated minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsMin", prop)

    prop = PropMeta("str", "RuleEvaluationsPer", "RuleEvaluationsPer", 52929, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Native LB rules evaluated periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsPer", prop)

    prop = PropMeta("str", "RuleEvaluationsRate", "RuleEvaluationsRate", 52937, PropCategory.IMPLICIT_RATE)
    prop.label = "Native LB rules evaluated rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsRate", prop)

    prop = PropMeta("str", "RuleEvaluationsSpct", "RuleEvaluationsSpct", 52933, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Native LB rules evaluated suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsSpct", prop)

    prop = PropMeta("str", "RuleEvaluationsThr", "RuleEvaluationsThr", 52934, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Native LB rules evaluated thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("RuleEvaluationsThr", prop)

    prop = PropMeta("str", "RuleEvaluationsTr", "RuleEvaluationsTr", 52936, PropCategory.IMPLICIT_TREND)
    prop.label = "Native LB rules evaluated trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsTr", prop)

    prop = PropMeta("str", "RuleEvaluationsTrBase", "RuleEvaluationsTrBase", 52935, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Native LB rules evaluated trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsTrBase", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

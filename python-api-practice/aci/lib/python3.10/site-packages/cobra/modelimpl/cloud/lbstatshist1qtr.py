# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class LBStatsHist1qtr(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.cloud.LBStatsHist1qtr", "ALB front end stats")

    counter = CounterMeta("RuleEvaluations", CounterCategory.COUNTER, "count", "Native LB rules evaluated")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "RuleEvaluationsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "RuleEvaluationsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "RuleEvaluationsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "RuleEvaluationsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "RuleEvaluationsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "RuleEvaluationsSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "RuleEvaluationsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "RuleEvaluationsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "RuleEvaluationsRate"
    meta._counters.append(counter)

    counter = CounterMeta("HTTPCode_ELB_5XX_Count", CounterCategory.COUNTER, "count", "Native LB HTPP 5XX error count")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "HTTPCode_ELB_5XX_CountCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "HTTPCode_ELB_5XX_CountPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "HTTPCode_ELB_5XX_CountMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "HTTPCode_ELB_5XX_CountMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "HTTPCode_ELB_5XX_CountAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "HTTPCode_ELB_5XX_CountSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "HTTPCode_ELB_5XX_CountThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "HTTPCode_ELB_5XX_CountTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "HTTPCode_ELB_5XX_CountRate"
    meta._counters.append(counter)

    counter = CounterMeta("RejectedConnectionCount", CounterCategory.COUNTER, "count", "Nantive LB rejected requests count")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "RejectedConnectionCountCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "RejectedConnectionCountPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "RejectedConnectionCountMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "RejectedConnectionCountMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "RejectedConnectionCountAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "RejectedConnectionCountSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "RejectedConnectionCountThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "RejectedConnectionCountTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "RejectedConnectionCountRate"
    meta._counters.append(counter)

    counter = CounterMeta("RequestCount", CounterCategory.COUNTER, "count", "Native LB requests count")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "RequestCountCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "RequestCountPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "RequestCountMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "RequestCountMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "RequestCountAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "RequestCountSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "RequestCountThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "RequestCountTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "RequestCountRate"
    meta._counters.append(counter)

    meta.moClassName = "cloudLBStatsHist1qtr"
    meta.rnFormat = "HDcloudLBStats1qtr-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical ALB front end stats stats in 1 quarter"
    meta.writeAccessMask = 0x6000000000000001
    meta.readAccessMask = 0x6000000000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.cloud.LB")

    meta.superClasses.add("cobra.model.stats.Hist")
    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.cloud.LBStatsHist")

    meta.rnPrefixes = [
        ('HDcloudLBStats1qtr-', True),
    ]

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountAvg", "HTTPCode_ELB_5XX_CountAvg", 52473, PropCategory.IMPLICIT_AVG)
    prop.label = "Native LB HTPP 5XX error count average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountAvg", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountCum", "HTTPCode_ELB_5XX_CountCum", 52469, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Native LB HTPP 5XX error count cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountCum", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountMax", "HTTPCode_ELB_5XX_CountMax", 52472, PropCategory.IMPLICIT_MAX)
    prop.label = "Native LB HTPP 5XX error count maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountMax", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountMin", "HTTPCode_ELB_5XX_CountMin", 52471, PropCategory.IMPLICIT_MIN)
    prop.label = "Native LB HTPP 5XX error count minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountMin", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountPer", "HTTPCode_ELB_5XX_CountPer", 52470, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Native LB HTPP 5XX error count periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountPer", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountRate", "HTTPCode_ELB_5XX_CountRate", 52477, PropCategory.IMPLICIT_RATE)
    prop.label = "Native LB HTPP 5XX error count rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountRate", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountSpct", "HTTPCode_ELB_5XX_CountSpct", 52474, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Native LB HTPP 5XX error count suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountSpct", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountThr", "HTTPCode_ELB_5XX_CountThr", 52475, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Native LB HTPP 5XX error count thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("HTTPCode_ELB_5XX_CountThr", prop)

    prop = PropMeta("str", "HTTPCode_ELB_5XX_CountTr", "HTTPCode_ELB_5XX_CountTr", 52476, PropCategory.IMPLICIT_TREND)
    prop.label = "Native LB HTPP 5XX error count trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("HTTPCode_ELB_5XX_CountTr", prop)

    prop = PropMeta("str", "RejectedConnectionCountAvg", "RejectedConnectionCountAvg", 52507, PropCategory.IMPLICIT_AVG)
    prop.label = "Nantive LB rejected requests count average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountAvg", prop)

    prop = PropMeta("str", "RejectedConnectionCountCum", "RejectedConnectionCountCum", 52503, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Nantive LB rejected requests count cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountCum", prop)

    prop = PropMeta("str", "RejectedConnectionCountMax", "RejectedConnectionCountMax", 52506, PropCategory.IMPLICIT_MAX)
    prop.label = "Nantive LB rejected requests count maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountMax", prop)

    prop = PropMeta("str", "RejectedConnectionCountMin", "RejectedConnectionCountMin", 52505, PropCategory.IMPLICIT_MIN)
    prop.label = "Nantive LB rejected requests count minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountMin", prop)

    prop = PropMeta("str", "RejectedConnectionCountPer", "RejectedConnectionCountPer", 52504, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Nantive LB rejected requests count periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountPer", prop)

    prop = PropMeta("str", "RejectedConnectionCountRate", "RejectedConnectionCountRate", 52511, PropCategory.IMPLICIT_RATE)
    prop.label = "Nantive LB rejected requests count rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountRate", prop)

    prop = PropMeta("str", "RejectedConnectionCountSpct", "RejectedConnectionCountSpct", 52508, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Nantive LB rejected requests count suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountSpct", prop)

    prop = PropMeta("str", "RejectedConnectionCountThr", "RejectedConnectionCountThr", 52509, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Nantive LB rejected requests count thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("RejectedConnectionCountThr", prop)

    prop = PropMeta("str", "RejectedConnectionCountTr", "RejectedConnectionCountTr", 52510, PropCategory.IMPLICIT_TREND)
    prop.label = "Nantive LB rejected requests count trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RejectedConnectionCountTr", prop)

    prop = PropMeta("str", "RequestCountAvg", "RequestCountAvg", 52541, PropCategory.IMPLICIT_AVG)
    prop.label = "Native LB requests count average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountAvg", prop)

    prop = PropMeta("str", "RequestCountCum", "RequestCountCum", 52537, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Native LB requests count cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountCum", prop)

    prop = PropMeta("str", "RequestCountMax", "RequestCountMax", 52540, PropCategory.IMPLICIT_MAX)
    prop.label = "Native LB requests count maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountMax", prop)

    prop = PropMeta("str", "RequestCountMin", "RequestCountMin", 52539, PropCategory.IMPLICIT_MIN)
    prop.label = "Native LB requests count minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountMin", prop)

    prop = PropMeta("str", "RequestCountPer", "RequestCountPer", 52538, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Native LB requests count periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountPer", prop)

    prop = PropMeta("str", "RequestCountRate", "RequestCountRate", 52545, PropCategory.IMPLICIT_RATE)
    prop.label = "Native LB requests count rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountRate", prop)

    prop = PropMeta("str", "RequestCountSpct", "RequestCountSpct", 52542, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Native LB requests count suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountSpct", prop)

    prop = PropMeta("str", "RequestCountThr", "RequestCountThr", 52543, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Native LB requests count thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("RequestCountThr", prop)

    prop = PropMeta("str", "RequestCountTr", "RequestCountTr", 52544, PropCategory.IMPLICIT_TREND)
    prop.label = "Native LB requests count trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RequestCountTr", prop)

    prop = PropMeta("str", "RuleEvaluationsAvg", "RuleEvaluationsAvg", 52942, PropCategory.IMPLICIT_AVG)
    prop.label = "Native LB rules evaluated average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsAvg", prop)

    prop = PropMeta("str", "RuleEvaluationsCum", "RuleEvaluationsCum", 52938, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Native LB rules evaluated cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsCum", prop)

    prop = PropMeta("str", "RuleEvaluationsMax", "RuleEvaluationsMax", 52941, PropCategory.IMPLICIT_MAX)
    prop.label = "Native LB rules evaluated maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsMax", prop)

    prop = PropMeta("str", "RuleEvaluationsMin", "RuleEvaluationsMin", 52940, PropCategory.IMPLICIT_MIN)
    prop.label = "Native LB rules evaluated minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsMin", prop)

    prop = PropMeta("str", "RuleEvaluationsPer", "RuleEvaluationsPer", 52939, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Native LB rules evaluated periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsPer", prop)

    prop = PropMeta("str", "RuleEvaluationsRate", "RuleEvaluationsRate", 52946, PropCategory.IMPLICIT_RATE)
    prop.label = "Native LB rules evaluated rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsRate", prop)

    prop = PropMeta("str", "RuleEvaluationsSpct", "RuleEvaluationsSpct", 52943, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Native LB rules evaluated suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsSpct", prop)

    prop = PropMeta("str", "RuleEvaluationsThr", "RuleEvaluationsThr", 52944, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Native LB rules evaluated thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("RuleEvaluationsThr", prop)

    prop = PropMeta("str", "RuleEvaluationsTr", "RuleEvaluationsTr", 52945, PropCategory.IMPLICIT_TREND)
    prop.label = "Native LB rules evaluated trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("RuleEvaluationsTr", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "index", "index", 52409, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudLBToHcloudSecurityGroup", "From cloudLB to hcloudSecurityGroup", "cobra.model.hcloud.SecurityGroup"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CloudLBToVnsAbsGraph", "From cloudLB to vnsAbsGraph", "cobra.model.vns.AbsGraph"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("ALDevIfToGraphInst", "Graph Instances", "cobra.model.vns.GraphInst"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

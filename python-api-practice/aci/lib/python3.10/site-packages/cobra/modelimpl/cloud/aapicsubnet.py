# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class AApicSubnet(Mo):
    meta = ClassMeta("cobra.model.cloud.AApicSubnet")

    meta.isAbstract = True
    meta.moClassName = "cloudAApicSubnet"


    meta.moClassName = "cloudAApicSubnet"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "Abstract Apic Subnet"
    meta.writeAccessMask = 0xc00000001
    meta.readAccessMask = 0xc00000001
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.concreteSubClasses.add("cobra.model.cloud.ApicSubnet")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "capicDeployed", "capicDeployed", 52855, PropCategory.REGULAR)
    prop.label = "Specifies if cAPIC is deployed in this region"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("capicDeployed", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "region", "region", 52854, PropCategory.REGULAR)
    prop.label = "region"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 65535
    prop.defaultValueStr = "unknown"
    prop._addConstant("ap-northeast-1", "asia-pacific-(tokyo)-region", 9)
    prop._addConstant("ap-northeast-2", "asia-pacific-(seoul)-region", 10)
    prop._addConstant("ap-northeast-3", "asia-pacific-(osaka-local)-region", 11)
    prop._addConstant("ap-south-1", "asia-pacific-(mumbai)-region", 14)
    prop._addConstant("ap-southeast-1", "asia-pacific-(singapore)-region", 12)
    prop._addConstant("ap-southeast-2", "asia-pacific-(sydney)-region", 13)
    prop._addConstant("ca-central-1", "canada-(central)-region", 4)
    prop._addConstant("eu-central-1", "eu-(frankfurt)-region", 5)
    prop._addConstant("eu-north-1", "eu-(stockholm)", 18)
    prop._addConstant("eu-west-1", "eu-(ireland)-region", 6)
    prop._addConstant("eu-west-2", "eu-(london)-region", 7)
    prop._addConstant("eu-west-3", "eu-(paris)-region", 8)
    prop._addConstant("sa-east-1", "south-america-(s?o-paulo)-region", 15)
    prop._addConstant("unknown", "unused", 65535)
    prop._addConstant("us-east-1", "us-east-(n.-virginia)-region", 0)
    prop._addConstant("us-east-2", "us-east-(ohio)-region", 1)
    prop._addConstant("us-gov-east-1", "aws-govcloud-(us-east)", 17)
    prop._addConstant("us-gov-west-1", "aws-govcloud-(us-west)", 16)
    prop._addConstant("us-west-1", "us-west-(n.-california)-region", 2)
    prop._addConstant("us-west-2", "us-west-(oregon)-region", 3)
    meta.props.add("region", prop)

    prop = PropMeta("str", "regionDn", "regionDn", 54909, PropCategory.REGULAR)
    prop.label = "cloud region Dn"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("regionDn", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "subnet", "subnet", 52853, PropCategory.REGULAR)
    prop.label = "Subnet"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("subnet", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

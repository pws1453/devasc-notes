# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class LatencyAvg2Hist5min(Mo):
    """
    A class that represents historical statistics for delay(average mode-2) in a 5 minute sampling interval.  This class updates every 10 seconds.

    """

    meta = StatsClassMeta("cobra.model.latency.LatencyAvg2Hist5min", "delay(average mode-2)")

    counter = CounterMeta("totPktCount", CounterCategory.COUNTER, "packets", "total packet count")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "totPktCountCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "totPktCountPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "totPktCountMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "totPktCountMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "totPktCountAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "totPktCountSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "totPktCountThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "totPktCountTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "totPktCountRate"
    meta._counters.append(counter)

    counter = CounterMeta("stdDev", CounterCategory.COUNTER, "microseconds", "standard deviation")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "stdDevCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "stdDevPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "stdDevMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "stdDevMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "stdDevAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "stdDevSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "stdDevThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "stdDevTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "stdDevRate"
    meta._counters.append(counter)

    counter = CounterMeta("seqNo", CounterCategory.COUNTER, "packets", "sequence number")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "seqNoCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "seqNoPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "seqNoMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "seqNoMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "seqNoAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "seqNoSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "seqNoThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "seqNoTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "seqNoRate"
    meta._counters.append(counter)

    meta.moClassName = "latencyLatencyAvg2Hist5min"
    meta.rnFormat = "HDlatencyLatencyAvg25min-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical delay(average mode-2) stats in 5 minute"
    meta.writeAccessMask = 0x800081800000001
    meta.readAccessMask = 0x800081800000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.latency.Path")

    meta.superClasses.add("cobra.model.stats.Hist")
    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.latency.LatencyAvg2Hist")

    meta.rnPrefixes = [
        ('HDlatencyLatencyAvg25min-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "index", "index", 29002, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "seqNoAvg", "seqNoAvg", 29178, PropCategory.IMPLICIT_AVG)
    prop.label = "sequence number average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoAvg", prop)

    prop = PropMeta("str", "seqNoCum", "seqNoCum", 29174, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "sequence number cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoCum", prop)

    prop = PropMeta("str", "seqNoMax", "seqNoMax", 29177, PropCategory.IMPLICIT_MAX)
    prop.label = "sequence number maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoMax", prop)

    prop = PropMeta("str", "seqNoMin", "seqNoMin", 29176, PropCategory.IMPLICIT_MIN)
    prop.label = "sequence number minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoMin", prop)

    prop = PropMeta("str", "seqNoPer", "seqNoPer", 29175, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "sequence number periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoPer", prop)

    prop = PropMeta("str", "seqNoRate", "seqNoRate", 29182, PropCategory.IMPLICIT_RATE)
    prop.label = "sequence number rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoRate", prop)

    prop = PropMeta("str", "seqNoSpct", "seqNoSpct", 29179, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "sequence number suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoSpct", prop)

    prop = PropMeta("str", "seqNoThr", "seqNoThr", 29180, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "sequence number thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("seqNoThr", prop)

    prop = PropMeta("str", "seqNoTr", "seqNoTr", 29181, PropCategory.IMPLICIT_TREND)
    prop.label = "sequence number trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoTr", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "stdDevAvg", "stdDevAvg", 29199, PropCategory.IMPLICIT_AVG)
    prop.label = "standard deviation average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stdDevAvg", prop)

    prop = PropMeta("str", "stdDevCum", "stdDevCum", 29195, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "standard deviation cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stdDevCum", prop)

    prop = PropMeta("str", "stdDevMax", "stdDevMax", 29198, PropCategory.IMPLICIT_MAX)
    prop.label = "standard deviation maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stdDevMax", prop)

    prop = PropMeta("str", "stdDevMin", "stdDevMin", 29197, PropCategory.IMPLICIT_MIN)
    prop.label = "standard deviation minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stdDevMin", prop)

    prop = PropMeta("str", "stdDevPer", "stdDevPer", 29196, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "standard deviation periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stdDevPer", prop)

    prop = PropMeta("str", "stdDevRate", "stdDevRate", 29203, PropCategory.IMPLICIT_RATE)
    prop.label = "standard deviation rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stdDevRate", prop)

    prop = PropMeta("str", "stdDevSpct", "stdDevSpct", 29200, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "standard deviation suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stdDevSpct", prop)

    prop = PropMeta("str", "stdDevThr", "stdDevThr", 29201, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "standard deviation thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("stdDevThr", prop)

    prop = PropMeta("str", "stdDevTr", "stdDevTr", 29202, PropCategory.IMPLICIT_TREND)
    prop.label = "standard deviation trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("stdDevTr", prop)

    prop = PropMeta("str", "totPktCountAvg", "totPktCountAvg", 29220, PropCategory.IMPLICIT_AVG)
    prop.label = "total packet count average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totPktCountAvg", prop)

    prop = PropMeta("str", "totPktCountCum", "totPktCountCum", 29216, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "total packet count cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totPktCountCum", prop)

    prop = PropMeta("str", "totPktCountMax", "totPktCountMax", 29219, PropCategory.IMPLICIT_MAX)
    prop.label = "total packet count maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totPktCountMax", prop)

    prop = PropMeta("str", "totPktCountMin", "totPktCountMin", 29218, PropCategory.IMPLICIT_MIN)
    prop.label = "total packet count minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totPktCountMin", prop)

    prop = PropMeta("str", "totPktCountPer", "totPktCountPer", 29217, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "total packet count periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totPktCountPer", prop)

    prop = PropMeta("str", "totPktCountRate", "totPktCountRate", 29224, PropCategory.IMPLICIT_RATE)
    prop.label = "total packet count rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totPktCountRate", prop)

    prop = PropMeta("str", "totPktCountSpct", "totPktCountSpct", 29221, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "total packet count suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totPktCountSpct", prop)

    prop = PropMeta("str", "totPktCountThr", "totPktCountThr", 29222, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "total packet count thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("totPktCountThr", prop)

    prop = PropMeta("str", "totPktCountTr", "totPktCountTr", 29223, PropCategory.IMPLICIT_TREND)
    prop.label = "total packet count trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totPktCountTr", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

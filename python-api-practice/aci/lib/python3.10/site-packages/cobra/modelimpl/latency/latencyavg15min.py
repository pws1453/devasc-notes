# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class LatencyAvg15min(Mo):
    """
    A class that represents the most current statistics for delay(average mode-1) in a 5 minute sampling interval.  This class updates every 10 seconds.

    """

    meta = StatsClassMeta("cobra.model.latency.LatencyAvg15min", "delay(average mode-1)")

    counter = CounterMeta("pktCount", CounterCategory.COUNTER, "packets", "packet count")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "pktCountLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "pktCountCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "pktCountPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "pktCountMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "pktCountMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "pktCountAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "pktCountSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "pktCountBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "pktCountThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "pktCountTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "pktCountTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "pktCountRate"
    meta._counters.append(counter)

    counter = CounterMeta("maxDelay", CounterCategory.COUNTER, "microseconds", "maximum delay")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "maxDelayLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "maxDelayCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "maxDelayPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "maxDelayMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "maxDelayMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "maxDelayAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "maxDelaySpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "maxDelayBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "maxDelayThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "maxDelayTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "maxDelayTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "maxDelayRate"
    meta._counters.append(counter)

    counter = CounterMeta("cumAverage", CounterCategory.COUNTER, "microseconds", "cumulative average delay")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "cumAverageLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "cumAverageCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "cumAveragePer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "cumAverageMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "cumAverageMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "cumAverageAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "cumAverageSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "cumAverageBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "cumAverageThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "cumAverageTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "cumAverageTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "cumAverageRate"
    meta._counters.append(counter)

    counter = CounterMeta("avgDelay", CounterCategory.COUNTER, "microseconds", "average delay")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "avgDelayLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "avgDelayCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "avgDelayPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "avgDelayMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "avgDelayMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "avgDelayAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "avgDelaySpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "avgDelayBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "avgDelayThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "avgDelayTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "avgDelayTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "avgDelayRate"
    meta._counters.append(counter)

    meta.moClassName = "latencyLatencyAvg15min"
    meta.rnFormat = "CDlatencyLatencyAvg15min"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current delay(average mode-1) stats in 5 minute"
    meta.writeAccessMask = 0x800081800000001
    meta.readAccessMask = 0x800081800000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.latency.Path")

    meta.superClasses.add("cobra.model.latency.LatencyAvg1")
    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Curr")

    meta.rnPrefixes = [
        ('CDlatencyLatencyAvg15min', False),
    ]

    prop = PropMeta("str", "avgDelayAvg", "avgDelayAvg", 29084, PropCategory.IMPLICIT_AVG)
    prop.label = "average delay average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayAvg", prop)

    prop = PropMeta("str", "avgDelayBase", "avgDelayBase", 29079, PropCategory.IMPLICIT_BASELINE)
    prop.label = "average delay baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayBase", prop)

    prop = PropMeta("str", "avgDelayCum", "avgDelayCum", 29080, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "average delay cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayCum", prop)

    prop = PropMeta("str", "avgDelayLast", "avgDelayLast", 29078, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "average delay current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayLast", prop)

    prop = PropMeta("str", "avgDelayMax", "avgDelayMax", 29083, PropCategory.IMPLICIT_MAX)
    prop.label = "average delay maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayMax", prop)

    prop = PropMeta("str", "avgDelayMin", "avgDelayMin", 29082, PropCategory.IMPLICIT_MIN)
    prop.label = "average delay minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayMin", prop)

    prop = PropMeta("str", "avgDelayPer", "avgDelayPer", 29081, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "average delay periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayPer", prop)

    prop = PropMeta("str", "avgDelayRate", "avgDelayRate", 29089, PropCategory.IMPLICIT_RATE)
    prop.label = "average delay rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayRate", prop)

    prop = PropMeta("str", "avgDelaySpct", "avgDelaySpct", 29085, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "average delay suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelaySpct", prop)

    prop = PropMeta("str", "avgDelayThr", "avgDelayThr", 29086, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "average delay thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("avgDelayThr", prop)

    prop = PropMeta("str", "avgDelayTr", "avgDelayTr", 29088, PropCategory.IMPLICIT_TREND)
    prop.label = "average delay trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayTr", prop)

    prop = PropMeta("str", "avgDelayTrBase", "avgDelayTrBase", 29087, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "average delay trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayTrBase", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "cumAverageAvg", "cumAverageAvg", 29105, PropCategory.IMPLICIT_AVG)
    prop.label = "cumulative average delay average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("cumAverageAvg", prop)

    prop = PropMeta("str", "cumAverageBase", "cumAverageBase", 29100, PropCategory.IMPLICIT_BASELINE)
    prop.label = "cumulative average delay baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("cumAverageBase", prop)

    prop = PropMeta("str", "cumAverageCum", "cumAverageCum", 29101, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "cumulative average delay cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("cumAverageCum", prop)

    prop = PropMeta("str", "cumAverageLast", "cumAverageLast", 29099, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "cumulative average delay current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("cumAverageLast", prop)

    prop = PropMeta("str", "cumAverageMax", "cumAverageMax", 29104, PropCategory.IMPLICIT_MAX)
    prop.label = "cumulative average delay maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("cumAverageMax", prop)

    prop = PropMeta("str", "cumAverageMin", "cumAverageMin", 29103, PropCategory.IMPLICIT_MIN)
    prop.label = "cumulative average delay minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("cumAverageMin", prop)

    prop = PropMeta("str", "cumAveragePer", "cumAveragePer", 29102, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "cumulative average delay periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("cumAveragePer", prop)

    prop = PropMeta("str", "cumAverageRate", "cumAverageRate", 29110, PropCategory.IMPLICIT_RATE)
    prop.label = "cumulative average delay rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("cumAverageRate", prop)

    prop = PropMeta("str", "cumAverageSpct", "cumAverageSpct", 29106, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "cumulative average delay suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("cumAverageSpct", prop)

    prop = PropMeta("str", "cumAverageThr", "cumAverageThr", 29107, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "cumulative average delay thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("cumAverageThr", prop)

    prop = PropMeta("str", "cumAverageTr", "cumAverageTr", 29109, PropCategory.IMPLICIT_TREND)
    prop.label = "cumulative average delay trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("cumAverageTr", prop)

    prop = PropMeta("str", "cumAverageTrBase", "cumAverageTrBase", 29108, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "cumulative average delay trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("cumAverageTrBase", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "maxDelayAvg", "maxDelayAvg", 29126, PropCategory.IMPLICIT_AVG)
    prop.label = "maximum delay average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("maxDelayAvg", prop)

    prop = PropMeta("str", "maxDelayBase", "maxDelayBase", 29121, PropCategory.IMPLICIT_BASELINE)
    prop.label = "maximum delay baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("maxDelayBase", prop)

    prop = PropMeta("str", "maxDelayCum", "maxDelayCum", 29122, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "maximum delay cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("maxDelayCum", prop)

    prop = PropMeta("str", "maxDelayLast", "maxDelayLast", 29120, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "maximum delay current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("maxDelayLast", prop)

    prop = PropMeta("str", "maxDelayMax", "maxDelayMax", 29125, PropCategory.IMPLICIT_MAX)
    prop.label = "maximum delay maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("maxDelayMax", prop)

    prop = PropMeta("str", "maxDelayMin", "maxDelayMin", 29124, PropCategory.IMPLICIT_MIN)
    prop.label = "maximum delay minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("maxDelayMin", prop)

    prop = PropMeta("str", "maxDelayPer", "maxDelayPer", 29123, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "maximum delay periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("maxDelayPer", prop)

    prop = PropMeta("str", "maxDelayRate", "maxDelayRate", 29131, PropCategory.IMPLICIT_RATE)
    prop.label = "maximum delay rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("maxDelayRate", prop)

    prop = PropMeta("str", "maxDelaySpct", "maxDelaySpct", 29127, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "maximum delay suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("maxDelaySpct", prop)

    prop = PropMeta("str", "maxDelayThr", "maxDelayThr", 29128, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "maximum delay thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("maxDelayThr", prop)

    prop = PropMeta("str", "maxDelayTr", "maxDelayTr", 29130, PropCategory.IMPLICIT_TREND)
    prop.label = "maximum delay trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("maxDelayTr", prop)

    prop = PropMeta("str", "maxDelayTrBase", "maxDelayTrBase", 29129, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "maximum delay trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("maxDelayTrBase", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "pktCountAvg", "pktCountAvg", 29147, PropCategory.IMPLICIT_AVG)
    prop.label = "packet count average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktCountAvg", prop)

    prop = PropMeta("str", "pktCountBase", "pktCountBase", 29142, PropCategory.IMPLICIT_BASELINE)
    prop.label = "packet count baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktCountBase", prop)

    prop = PropMeta("str", "pktCountCum", "pktCountCum", 29143, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "packet count cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktCountCum", prop)

    prop = PropMeta("str", "pktCountLast", "pktCountLast", 29141, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "packet count current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktCountLast", prop)

    prop = PropMeta("str", "pktCountMax", "pktCountMax", 29146, PropCategory.IMPLICIT_MAX)
    prop.label = "packet count maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktCountMax", prop)

    prop = PropMeta("str", "pktCountMin", "pktCountMin", 29145, PropCategory.IMPLICIT_MIN)
    prop.label = "packet count minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktCountMin", prop)

    prop = PropMeta("str", "pktCountPer", "pktCountPer", 29144, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "packet count periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktCountPer", prop)

    prop = PropMeta("str", "pktCountRate", "pktCountRate", 29152, PropCategory.IMPLICIT_RATE)
    prop.label = "packet count rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktCountRate", prop)

    prop = PropMeta("str", "pktCountSpct", "pktCountSpct", 29148, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "packet count suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktCountSpct", prop)

    prop = PropMeta("str", "pktCountThr", "pktCountThr", 29149, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "packet count thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("pktCountThr", prop)

    prop = PropMeta("str", "pktCountTr", "pktCountTr", 29151, PropCategory.IMPLICIT_TREND)
    prop.label = "packet count trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktCountTr", prop)

    prop = PropMeta("str", "pktCountTrBase", "pktCountTrBase", 29150, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "packet count trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktCountTrBase", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

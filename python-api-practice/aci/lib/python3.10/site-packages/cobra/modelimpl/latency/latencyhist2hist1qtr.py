# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class LatencyHist2Hist1qtr(Mo):
    """
    A class that represents historical statistics for delay(histogram mode-2) in a 1 quarter sampling interval.  This class updates every day.

    """

    meta = StatsClassMeta("cobra.model.latency.LatencyHist2Hist1qtr", "delay(histogram mode-2)")

    counter = CounterMeta("bucket5", CounterCategory.COUNTER, "packets", "packets within the 6th bucket")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "bucket5Cum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "bucket5Per"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "bucket5Min"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "bucket5Max"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "bucket5Avg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "bucket5Spct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "bucket5Thr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "bucket5Tr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "bucket5Rate"
    meta._counters.append(counter)

    counter = CounterMeta("bucket4", CounterCategory.COUNTER, "packets", "packets within the 5th bucket")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "bucket4Cum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "bucket4Per"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "bucket4Min"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "bucket4Max"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "bucket4Avg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "bucket4Spct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "bucket4Thr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "bucket4Tr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "bucket4Rate"
    meta._counters.append(counter)

    counter = CounterMeta("bucket3", CounterCategory.COUNTER, "packets", "packets within the 4th bucket")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "bucket3Cum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "bucket3Per"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "bucket3Min"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "bucket3Max"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "bucket3Avg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "bucket3Spct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "bucket3Thr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "bucket3Tr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "bucket3Rate"
    meta._counters.append(counter)

    counter = CounterMeta("bucket2", CounterCategory.COUNTER, "packets", "packets within the 3rd bucket")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "bucket2Cum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "bucket2Per"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "bucket2Min"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "bucket2Max"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "bucket2Avg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "bucket2Spct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "bucket2Thr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "bucket2Tr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "bucket2Rate"
    meta._counters.append(counter)

    meta.moClassName = "latencyLatencyHist2Hist1qtr"
    meta.rnFormat = "HDlatencyLatencyHist21qtr-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical delay(histogram mode-2) stats in 1 quarter"
    meta.writeAccessMask = 0x800081800000001
    meta.readAccessMask = 0x800081800000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.latency.Path")

    meta.superClasses.add("cobra.model.latency.LatencyHist2Hist")
    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Hist")

    meta.rnPrefixes = [
        ('HDlatencyLatencyHist21qtr-', True),
    ]

    prop = PropMeta("str", "bucket2Avg", "bucket2Avg", 29325, PropCategory.IMPLICIT_AVG)
    prop.label = "packets within the 3rd bucket average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket2Avg", prop)

    prop = PropMeta("str", "bucket2Cum", "bucket2Cum", 29321, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "packets within the 3rd bucket cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket2Cum", prop)

    prop = PropMeta("str", "bucket2Max", "bucket2Max", 29324, PropCategory.IMPLICIT_MAX)
    prop.label = "packets within the 3rd bucket maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket2Max", prop)

    prop = PropMeta("str", "bucket2Min", "bucket2Min", 29323, PropCategory.IMPLICIT_MIN)
    prop.label = "packets within the 3rd bucket minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket2Min", prop)

    prop = PropMeta("str", "bucket2Per", "bucket2Per", 29322, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "packets within the 3rd bucket periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket2Per", prop)

    prop = PropMeta("str", "bucket2Rate", "bucket2Rate", 29329, PropCategory.IMPLICIT_RATE)
    prop.label = "packets within the 3rd bucket rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket2Rate", prop)

    prop = PropMeta("str", "bucket2Spct", "bucket2Spct", 29326, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "packets within the 3rd bucket suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket2Spct", prop)

    prop = PropMeta("str", "bucket2Thr", "bucket2Thr", 29327, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "packets within the 3rd bucket thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("bucket2Thr", prop)

    prop = PropMeta("str", "bucket2Tr", "bucket2Tr", 29328, PropCategory.IMPLICIT_TREND)
    prop.label = "packets within the 3rd bucket trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket2Tr", prop)

    prop = PropMeta("str", "bucket3Avg", "bucket3Avg", 29346, PropCategory.IMPLICIT_AVG)
    prop.label = "packets within the 4th bucket average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket3Avg", prop)

    prop = PropMeta("str", "bucket3Cum", "bucket3Cum", 29342, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "packets within the 4th bucket cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket3Cum", prop)

    prop = PropMeta("str", "bucket3Max", "bucket3Max", 29345, PropCategory.IMPLICIT_MAX)
    prop.label = "packets within the 4th bucket maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket3Max", prop)

    prop = PropMeta("str", "bucket3Min", "bucket3Min", 29344, PropCategory.IMPLICIT_MIN)
    prop.label = "packets within the 4th bucket minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket3Min", prop)

    prop = PropMeta("str", "bucket3Per", "bucket3Per", 29343, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "packets within the 4th bucket periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket3Per", prop)

    prop = PropMeta("str", "bucket3Rate", "bucket3Rate", 29350, PropCategory.IMPLICIT_RATE)
    prop.label = "packets within the 4th bucket rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket3Rate", prop)

    prop = PropMeta("str", "bucket3Spct", "bucket3Spct", 29347, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "packets within the 4th bucket suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket3Spct", prop)

    prop = PropMeta("str", "bucket3Thr", "bucket3Thr", 29348, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "packets within the 4th bucket thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("bucket3Thr", prop)

    prop = PropMeta("str", "bucket3Tr", "bucket3Tr", 29349, PropCategory.IMPLICIT_TREND)
    prop.label = "packets within the 4th bucket trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket3Tr", prop)

    prop = PropMeta("str", "bucket4Avg", "bucket4Avg", 29367, PropCategory.IMPLICIT_AVG)
    prop.label = "packets within the 5th bucket average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket4Avg", prop)

    prop = PropMeta("str", "bucket4Cum", "bucket4Cum", 29363, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "packets within the 5th bucket cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket4Cum", prop)

    prop = PropMeta("str", "bucket4Max", "bucket4Max", 29366, PropCategory.IMPLICIT_MAX)
    prop.label = "packets within the 5th bucket maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket4Max", prop)

    prop = PropMeta("str", "bucket4Min", "bucket4Min", 29365, PropCategory.IMPLICIT_MIN)
    prop.label = "packets within the 5th bucket minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket4Min", prop)

    prop = PropMeta("str", "bucket4Per", "bucket4Per", 29364, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "packets within the 5th bucket periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket4Per", prop)

    prop = PropMeta("str", "bucket4Rate", "bucket4Rate", 29371, PropCategory.IMPLICIT_RATE)
    prop.label = "packets within the 5th bucket rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket4Rate", prop)

    prop = PropMeta("str", "bucket4Spct", "bucket4Spct", 29368, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "packets within the 5th bucket suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket4Spct", prop)

    prop = PropMeta("str", "bucket4Thr", "bucket4Thr", 29369, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "packets within the 5th bucket thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("bucket4Thr", prop)

    prop = PropMeta("str", "bucket4Tr", "bucket4Tr", 29370, PropCategory.IMPLICIT_TREND)
    prop.label = "packets within the 5th bucket trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket4Tr", prop)

    prop = PropMeta("str", "bucket5Avg", "bucket5Avg", 29388, PropCategory.IMPLICIT_AVG)
    prop.label = "packets within the 6th bucket average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket5Avg", prop)

    prop = PropMeta("str", "bucket5Cum", "bucket5Cum", 29384, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "packets within the 6th bucket cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket5Cum", prop)

    prop = PropMeta("str", "bucket5Max", "bucket5Max", 29387, PropCategory.IMPLICIT_MAX)
    prop.label = "packets within the 6th bucket maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket5Max", prop)

    prop = PropMeta("str", "bucket5Min", "bucket5Min", 29386, PropCategory.IMPLICIT_MIN)
    prop.label = "packets within the 6th bucket minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket5Min", prop)

    prop = PropMeta("str", "bucket5Per", "bucket5Per", 29385, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "packets within the 6th bucket periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket5Per", prop)

    prop = PropMeta("str", "bucket5Rate", "bucket5Rate", 29392, PropCategory.IMPLICIT_RATE)
    prop.label = "packets within the 6th bucket rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket5Rate", prop)

    prop = PropMeta("str", "bucket5Spct", "bucket5Spct", 29389, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "packets within the 6th bucket suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket5Spct", prop)

    prop = PropMeta("str", "bucket5Thr", "bucket5Thr", 29390, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "packets within the 6th bucket thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("bucket5Thr", prop)

    prop = PropMeta("str", "bucket5Tr", "bucket5Tr", 29391, PropCategory.IMPLICIT_TREND)
    prop.label = "packets within the 6th bucket trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket5Tr", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "index", "index", 29015, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

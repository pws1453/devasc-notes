# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class LatencyHist9Hist1d(Mo):
    """
    A class that represents historical statistics for delay(histogram mode-9) in a 1 day sampling interval.  This class updates every hour.

    """

    meta = StatsClassMeta("cobra.model.latency.LatencyHist9Hist1d", "delay(histogram mode-9)")

    counter = CounterMeta("totalBucket15", CounterCategory.COUNTER, "packets", "packets within the 16th bucket")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "totalBucket15Cum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "totalBucket15Per"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "totalBucket15Min"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "totalBucket15Max"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "totalBucket15Avg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "totalBucket15Spct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "totalBucket15Thr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "totalBucket15Tr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "totalBucket15Rate"
    meta._counters.append(counter)

    counter = CounterMeta("totalBucket14", CounterCategory.COUNTER, "packets", "packets within the 15th bucket")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "totalBucket14Cum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "totalBucket14Per"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "totalBucket14Min"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "totalBucket14Max"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "totalBucket14Avg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "totalBucket14Spct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "totalBucket14Thr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "totalBucket14Tr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "totalBucket14Rate"
    meta._counters.append(counter)

    meta.moClassName = "latencyLatencyHist9Hist1d"
    meta.rnFormat = "HDlatencyLatencyHist91d-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical delay(histogram mode-9) stats in 1 day"
    meta.writeAccessMask = 0x800081800000001
    meta.readAccessMask = 0x800081800000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.latency.Path")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Hist")
    meta.superClasses.add("cobra.model.latency.LatencyHist9Hist")

    meta.rnPrefixes = [
        ('HDlatencyLatencyHist91d-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "index", "index", 29068, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "totalBucket14Avg", "totalBucket14Avg", 29913, PropCategory.IMPLICIT_AVG)
    prop.label = "packets within the 15th bucket average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket14Avg", prop)

    prop = PropMeta("str", "totalBucket14Cum", "totalBucket14Cum", 29909, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "packets within the 15th bucket cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket14Cum", prop)

    prop = PropMeta("str", "totalBucket14Max", "totalBucket14Max", 29912, PropCategory.IMPLICIT_MAX)
    prop.label = "packets within the 15th bucket maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket14Max", prop)

    prop = PropMeta("str", "totalBucket14Min", "totalBucket14Min", 29911, PropCategory.IMPLICIT_MIN)
    prop.label = "packets within the 15th bucket minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket14Min", prop)

    prop = PropMeta("str", "totalBucket14Per", "totalBucket14Per", 29910, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "packets within the 15th bucket periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket14Per", prop)

    prop = PropMeta("str", "totalBucket14Rate", "totalBucket14Rate", 29917, PropCategory.IMPLICIT_RATE)
    prop.label = "packets within the 15th bucket rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket14Rate", prop)

    prop = PropMeta("str", "totalBucket14Spct", "totalBucket14Spct", 29914, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "packets within the 15th bucket suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket14Spct", prop)

    prop = PropMeta("str", "totalBucket14Thr", "totalBucket14Thr", 29915, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "packets within the 15th bucket thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("totalBucket14Thr", prop)

    prop = PropMeta("str", "totalBucket14Tr", "totalBucket14Tr", 29916, PropCategory.IMPLICIT_TREND)
    prop.label = "packets within the 15th bucket trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket14Tr", prop)

    prop = PropMeta("str", "totalBucket15Avg", "totalBucket15Avg", 29934, PropCategory.IMPLICIT_AVG)
    prop.label = "packets within the 16th bucket average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket15Avg", prop)

    prop = PropMeta("str", "totalBucket15Cum", "totalBucket15Cum", 29930, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "packets within the 16th bucket cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket15Cum", prop)

    prop = PropMeta("str", "totalBucket15Max", "totalBucket15Max", 29933, PropCategory.IMPLICIT_MAX)
    prop.label = "packets within the 16th bucket maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket15Max", prop)

    prop = PropMeta("str", "totalBucket15Min", "totalBucket15Min", 29932, PropCategory.IMPLICIT_MIN)
    prop.label = "packets within the 16th bucket minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket15Min", prop)

    prop = PropMeta("str", "totalBucket15Per", "totalBucket15Per", 29931, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "packets within the 16th bucket periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket15Per", prop)

    prop = PropMeta("str", "totalBucket15Rate", "totalBucket15Rate", 29938, PropCategory.IMPLICIT_RATE)
    prop.label = "packets within the 16th bucket rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket15Rate", prop)

    prop = PropMeta("str", "totalBucket15Spct", "totalBucket15Spct", 29935, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "packets within the 16th bucket suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket15Spct", prop)

    prop = PropMeta("str", "totalBucket15Thr", "totalBucket15Thr", 29936, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "packets within the 16th bucket thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("totalBucket15Thr", prop)

    prop = PropMeta("str", "totalBucket15Tr", "totalBucket15Tr", 29937, PropCategory.IMPLICIT_TREND)
    prop.label = "packets within the 16th bucket trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBucket15Tr", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

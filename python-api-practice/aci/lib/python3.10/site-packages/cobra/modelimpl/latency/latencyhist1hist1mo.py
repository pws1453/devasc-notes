# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class LatencyHist1Hist1mo(Mo):
    """
    A class that represents historical statistics for delay(histogram mode-1) in a 1 month sampling interval.  This class updates every day.

    """

    meta = StatsClassMeta("cobra.model.latency.LatencyHist1Hist1mo", "delay(histogram mode-1)")

    counter = CounterMeta("bucket1", CounterCategory.COUNTER, "packets", "packets within the 2nd bucket")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "bucket1Cum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "bucket1Per"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "bucket1Min"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "bucket1Max"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "bucket1Avg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "bucket1Spct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "bucket1Thr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "bucket1Tr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "bucket1Rate"
    meta._counters.append(counter)

    counter = CounterMeta("bucket0", CounterCategory.COUNTER, "packets", "packets within the 1st bucket")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "bucket0Cum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "bucket0Per"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "bucket0Min"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "bucket0Max"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "bucket0Avg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "bucket0Spct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "bucket0Thr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "bucket0Tr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "bucket0Rate"
    meta._counters.append(counter)

    counter = CounterMeta("seqNo", CounterCategory.COUNTER, "packets", "sequence number")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "seqNoCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "seqNoPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "seqNoMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "seqNoMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "seqNoAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "seqNoSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "seqNoThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "seqNoTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "seqNoRate"
    meta._counters.append(counter)

    counter = CounterMeta("avgDelay", CounterCategory.COUNTER, "microseconds", "average delay")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "avgDelayCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "avgDelayPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "avgDelayMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "avgDelayMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "avgDelayAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "avgDelaySpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "avgDelayThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "avgDelayTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "avgDelayRate"
    meta._counters.append(counter)

    meta.moClassName = "latencyLatencyHist1Hist1mo"
    meta.rnFormat = "HDlatencyLatencyHist11mo-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical delay(histogram mode-1) stats in 1 month"
    meta.writeAccessMask = 0x800081800000001
    meta.readAccessMask = 0x800081800000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.latency.Path")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Hist")
    meta.superClasses.add("cobra.model.latency.LatencyHist1Hist")

    meta.rnPrefixes = [
        ('HDlatencyLatencyHist11mo-', True),
    ]

    prop = PropMeta("str", "avgDelayAvg", "avgDelayAvg", 29241, PropCategory.IMPLICIT_AVG)
    prop.label = "average delay average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayAvg", prop)

    prop = PropMeta("str", "avgDelayCum", "avgDelayCum", 29237, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "average delay cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayCum", prop)

    prop = PropMeta("str", "avgDelayMax", "avgDelayMax", 29240, PropCategory.IMPLICIT_MAX)
    prop.label = "average delay maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayMax", prop)

    prop = PropMeta("str", "avgDelayMin", "avgDelayMin", 29239, PropCategory.IMPLICIT_MIN)
    prop.label = "average delay minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayMin", prop)

    prop = PropMeta("str", "avgDelayPer", "avgDelayPer", 29238, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "average delay periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayPer", prop)

    prop = PropMeta("str", "avgDelayRate", "avgDelayRate", 29245, PropCategory.IMPLICIT_RATE)
    prop.label = "average delay rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayRate", prop)

    prop = PropMeta("str", "avgDelaySpct", "avgDelaySpct", 29242, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "average delay suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelaySpct", prop)

    prop = PropMeta("str", "avgDelayThr", "avgDelayThr", 29243, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "average delay thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("avgDelayThr", prop)

    prop = PropMeta("str", "avgDelayTr", "avgDelayTr", 29244, PropCategory.IMPLICIT_TREND)
    prop.label = "average delay trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("avgDelayTr", prop)

    prop = PropMeta("str", "bucket0Avg", "bucket0Avg", 29262, PropCategory.IMPLICIT_AVG)
    prop.label = "packets within the 1st bucket average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket0Avg", prop)

    prop = PropMeta("str", "bucket0Cum", "bucket0Cum", 29258, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "packets within the 1st bucket cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket0Cum", prop)

    prop = PropMeta("str", "bucket0Max", "bucket0Max", 29261, PropCategory.IMPLICIT_MAX)
    prop.label = "packets within the 1st bucket maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket0Max", prop)

    prop = PropMeta("str", "bucket0Min", "bucket0Min", 29260, PropCategory.IMPLICIT_MIN)
    prop.label = "packets within the 1st bucket minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket0Min", prop)

    prop = PropMeta("str", "bucket0Per", "bucket0Per", 29259, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "packets within the 1st bucket periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket0Per", prop)

    prop = PropMeta("str", "bucket0Rate", "bucket0Rate", 29266, PropCategory.IMPLICIT_RATE)
    prop.label = "packets within the 1st bucket rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket0Rate", prop)

    prop = PropMeta("str", "bucket0Spct", "bucket0Spct", 29263, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "packets within the 1st bucket suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket0Spct", prop)

    prop = PropMeta("str", "bucket0Thr", "bucket0Thr", 29264, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "packets within the 1st bucket thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("bucket0Thr", prop)

    prop = PropMeta("str", "bucket0Tr", "bucket0Tr", 29265, PropCategory.IMPLICIT_TREND)
    prop.label = "packets within the 1st bucket trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket0Tr", prop)

    prop = PropMeta("str", "bucket1Avg", "bucket1Avg", 29283, PropCategory.IMPLICIT_AVG)
    prop.label = "packets within the 2nd bucket average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket1Avg", prop)

    prop = PropMeta("str", "bucket1Cum", "bucket1Cum", 29279, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "packets within the 2nd bucket cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket1Cum", prop)

    prop = PropMeta("str", "bucket1Max", "bucket1Max", 29282, PropCategory.IMPLICIT_MAX)
    prop.label = "packets within the 2nd bucket maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket1Max", prop)

    prop = PropMeta("str", "bucket1Min", "bucket1Min", 29281, PropCategory.IMPLICIT_MIN)
    prop.label = "packets within the 2nd bucket minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket1Min", prop)

    prop = PropMeta("str", "bucket1Per", "bucket1Per", 29280, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "packets within the 2nd bucket periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket1Per", prop)

    prop = PropMeta("str", "bucket1Rate", "bucket1Rate", 29287, PropCategory.IMPLICIT_RATE)
    prop.label = "packets within the 2nd bucket rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket1Rate", prop)

    prop = PropMeta("str", "bucket1Spct", "bucket1Spct", 29284, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "packets within the 2nd bucket suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket1Spct", prop)

    prop = PropMeta("str", "bucket1Thr", "bucket1Thr", 29285, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "packets within the 2nd bucket thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("bucket1Thr", prop)

    prop = PropMeta("str", "bucket1Tr", "bucket1Tr", 29286, PropCategory.IMPLICIT_TREND)
    prop.label = "packets within the 2nd bucket trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bucket1Tr", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "index", "index", 29006, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "seqNoAvg", "seqNoAvg", 29304, PropCategory.IMPLICIT_AVG)
    prop.label = "sequence number average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoAvg", prop)

    prop = PropMeta("str", "seqNoCum", "seqNoCum", 29300, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "sequence number cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoCum", prop)

    prop = PropMeta("str", "seqNoMax", "seqNoMax", 29303, PropCategory.IMPLICIT_MAX)
    prop.label = "sequence number maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoMax", prop)

    prop = PropMeta("str", "seqNoMin", "seqNoMin", 29302, PropCategory.IMPLICIT_MIN)
    prop.label = "sequence number minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoMin", prop)

    prop = PropMeta("str", "seqNoPer", "seqNoPer", 29301, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "sequence number periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoPer", prop)

    prop = PropMeta("str", "seqNoRate", "seqNoRate", 29308, PropCategory.IMPLICIT_RATE)
    prop.label = "sequence number rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoRate", prop)

    prop = PropMeta("str", "seqNoSpct", "seqNoSpct", 29305, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "sequence number suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoSpct", prop)

    prop = PropMeta("str", "seqNoThr", "seqNoThr", 29306, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "sequence number thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("seqNoThr", prop)

    prop = PropMeta("str", "seqNoTr", "seqNoTr", 29307, PropCategory.IMPLICIT_TREND)
    prop.label = "sequence number trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("seqNoTr", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class InputDisFrames1h(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.fc.InputDisFrames1h", "input discards frames")

    counter = CounterMeta("crc", CounterCategory.COUNTER, "frames", "input crc frames")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "crcLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "crcCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "crcPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "crcMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "crcMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "crcAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "crcSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "crcBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "crcThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "crcTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "crcTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "crcRate"
    meta._counters.append(counter)

    counter = CounterMeta("errors", CounterCategory.COUNTER, "frames", "input errors frames")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "errorsLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "errorsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "errorsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "errorsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "errorsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "errorsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "errorsSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "errorsBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "errorsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "errorsTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "errorsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "errorsRate"
    meta._counters.append(counter)

    counter = CounterMeta("discards", CounterCategory.COUNTER, "frames", "input discards frames")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "discardsLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "discardsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "discardsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "discardsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "discardsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "discardsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "discardsSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "discardsBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "discardsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "discardsTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "discardsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "discardsRate"
    meta._counters.append(counter)

    meta.moClassName = "fcInputDisFrames1h"
    meta.rnFormat = "CDfcInputDisFrames1h"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current input discards frames stats in 1 hour"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.l1.FcPhysIf")
    meta.parentClasses.add("cobra.model.pc.FcAggrIf")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.fc.InputDisFrames")

    meta.rnPrefixes = [
        ('CDfcInputDisFrames1h', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "crcAvg", "crcAvg", 41352, PropCategory.IMPLICIT_AVG)
    prop.label = "input crc frames average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("crcAvg", prop)

    prop = PropMeta("str", "crcBase", "crcBase", 41347, PropCategory.IMPLICIT_BASELINE)
    prop.label = "input crc frames baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("crcBase", prop)

    prop = PropMeta("str", "crcCum", "crcCum", 41348, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "input crc frames cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("crcCum", prop)

    prop = PropMeta("str", "crcLast", "crcLast", 41346, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "input crc frames current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("crcLast", prop)

    prop = PropMeta("str", "crcMax", "crcMax", 41351, PropCategory.IMPLICIT_MAX)
    prop.label = "input crc frames maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("crcMax", prop)

    prop = PropMeta("str", "crcMin", "crcMin", 41350, PropCategory.IMPLICIT_MIN)
    prop.label = "input crc frames minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("crcMin", prop)

    prop = PropMeta("str", "crcPer", "crcPer", 41349, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "input crc frames periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("crcPer", prop)

    prop = PropMeta("str", "crcRate", "crcRate", 41357, PropCategory.IMPLICIT_RATE)
    prop.label = "input crc frames rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("crcRate", prop)

    prop = PropMeta("str", "crcSpct", "crcSpct", 41353, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "input crc frames suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("crcSpct", prop)

    prop = PropMeta("str", "crcThr", "crcThr", 41354, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "input crc frames thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("crcThr", prop)

    prop = PropMeta("str", "crcTr", "crcTr", 41356, PropCategory.IMPLICIT_TREND)
    prop.label = "input crc frames trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("crcTr", prop)

    prop = PropMeta("str", "crcTrBase", "crcTrBase", 41355, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "input crc frames trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("crcTrBase", prop)

    prop = PropMeta("str", "discardsAvg", "discardsAvg", 41373, PropCategory.IMPLICIT_AVG)
    prop.label = "input discards frames average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("discardsAvg", prop)

    prop = PropMeta("str", "discardsBase", "discardsBase", 41368, PropCategory.IMPLICIT_BASELINE)
    prop.label = "input discards frames baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("discardsBase", prop)

    prop = PropMeta("str", "discardsCum", "discardsCum", 41369, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "input discards frames cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("discardsCum", prop)

    prop = PropMeta("str", "discardsLast", "discardsLast", 41367, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "input discards frames current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("discardsLast", prop)

    prop = PropMeta("str", "discardsMax", "discardsMax", 41372, PropCategory.IMPLICIT_MAX)
    prop.label = "input discards frames maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("discardsMax", prop)

    prop = PropMeta("str", "discardsMin", "discardsMin", 41371, PropCategory.IMPLICIT_MIN)
    prop.label = "input discards frames minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("discardsMin", prop)

    prop = PropMeta("str", "discardsPer", "discardsPer", 41370, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "input discards frames periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("discardsPer", prop)

    prop = PropMeta("str", "discardsRate", "discardsRate", 41378, PropCategory.IMPLICIT_RATE)
    prop.label = "input discards frames rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("discardsRate", prop)

    prop = PropMeta("str", "discardsSpct", "discardsSpct", 41374, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "input discards frames suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("discardsSpct", prop)

    prop = PropMeta("str", "discardsThr", "discardsThr", 41375, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "input discards frames thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("discardsThr", prop)

    prop = PropMeta("str", "discardsTr", "discardsTr", 41377, PropCategory.IMPLICIT_TREND)
    prop.label = "input discards frames trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("discardsTr", prop)

    prop = PropMeta("str", "discardsTrBase", "discardsTrBase", 41376, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "input discards frames trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("discardsTrBase", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "errorsAvg", "errorsAvg", 41394, PropCategory.IMPLICIT_AVG)
    prop.label = "input errors frames average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorsAvg", prop)

    prop = PropMeta("str", "errorsBase", "errorsBase", 41389, PropCategory.IMPLICIT_BASELINE)
    prop.label = "input errors frames baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorsBase", prop)

    prop = PropMeta("str", "errorsCum", "errorsCum", 41390, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "input errors frames cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorsCum", prop)

    prop = PropMeta("str", "errorsLast", "errorsLast", 41388, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "input errors frames current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorsLast", prop)

    prop = PropMeta("str", "errorsMax", "errorsMax", 41393, PropCategory.IMPLICIT_MAX)
    prop.label = "input errors frames maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorsMax", prop)

    prop = PropMeta("str", "errorsMin", "errorsMin", 41392, PropCategory.IMPLICIT_MIN)
    prop.label = "input errors frames minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorsMin", prop)

    prop = PropMeta("str", "errorsPer", "errorsPer", 41391, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "input errors frames periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorsPer", prop)

    prop = PropMeta("str", "errorsRate", "errorsRate", 41399, PropCategory.IMPLICIT_RATE)
    prop.label = "input errors frames rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorsRate", prop)

    prop = PropMeta("str", "errorsSpct", "errorsSpct", 41395, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "input errors frames suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorsSpct", prop)

    prop = PropMeta("str", "errorsThr", "errorsThr", 41396, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "input errors frames thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("errorsThr", prop)

    prop = PropMeta("str", "errorsTr", "errorsTr", 41398, PropCategory.IMPLICIT_TREND)
    prop.label = "input errors frames trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorsTr", prop)

    prop = PropMeta("str", "errorsTrBase", "errorsTrBase", 41397, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "input errors frames trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("errorsTrBase", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("l1FcIfToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

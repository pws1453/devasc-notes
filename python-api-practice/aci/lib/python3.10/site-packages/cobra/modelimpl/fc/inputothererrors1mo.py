# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class InputOtherErrors1mo(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.fc.InputOtherErrors1mo", "input other errors")

    counter = CounterMeta("disparity8b10b", CounterCategory.COUNTER, "link", "input 8b10b disparity")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "disparity8b10bLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "disparity8b10bCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "disparity8b10bPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "disparity8b10bMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "disparity8b10bMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "disparity8b10bAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "disparity8b10bSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "disparity8b10bBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "disparity8b10bThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "disparity8b10bTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "disparity8b10bTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "disparity8b10bRate"
    meta._counters.append(counter)

    counter = CounterMeta("elp", CounterCategory.COUNTER, "link", "input elp")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "elpLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "elpCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "elpPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "elpMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "elpMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "elpAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "elpSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "elpBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "elpThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "elpTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "elpTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "elpRate"
    meta._counters.append(counter)

    counter = CounterMeta("framing", CounterCategory.COUNTER, "link", "input framing errors")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "framingLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "framingCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "framingPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "framingMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "framingMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "framingAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "framingSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "framingBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "framingThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "framingTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "framingTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "framingRate"
    meta._counters.append(counter)

    counter = CounterMeta("eisl", CounterCategory.COUNTER, "link", "input eisl")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "eislLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "eislCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "eislPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "eislMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "eislMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "eislAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "eislSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "eislBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "eislThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "eislTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "eislTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "eislRate"
    meta._counters.append(counter)

    meta.moClassName = "fcInputOtherErrors1mo"
    meta.rnFormat = "CDfcInputOtherErrors1mo"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current input other errors stats in 1 month"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.l1.FcPhysIf")
    meta.parentClasses.add("cobra.model.pc.FcAggrIf")

    meta.superClasses.add("cobra.model.fc.InputOtherErrors")
    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Curr")

    meta.rnPrefixes = [
        ('CDfcInputOtherErrors1mo', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "disparity8b10bAvg", "disparity8b10bAvg", 43216, PropCategory.IMPLICIT_AVG)
    prop.label = "input 8b10b disparity average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("disparity8b10bAvg", prop)

    prop = PropMeta("str", "disparity8b10bBase", "disparity8b10bBase", 43211, PropCategory.IMPLICIT_BASELINE)
    prop.label = "input 8b10b disparity baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("disparity8b10bBase", prop)

    prop = PropMeta("str", "disparity8b10bCum", "disparity8b10bCum", 43212, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "input 8b10b disparity cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("disparity8b10bCum", prop)

    prop = PropMeta("str", "disparity8b10bLast", "disparity8b10bLast", 43210, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "input 8b10b disparity current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("disparity8b10bLast", prop)

    prop = PropMeta("str", "disparity8b10bMax", "disparity8b10bMax", 43215, PropCategory.IMPLICIT_MAX)
    prop.label = "input 8b10b disparity maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("disparity8b10bMax", prop)

    prop = PropMeta("str", "disparity8b10bMin", "disparity8b10bMin", 43214, PropCategory.IMPLICIT_MIN)
    prop.label = "input 8b10b disparity minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("disparity8b10bMin", prop)

    prop = PropMeta("str", "disparity8b10bPer", "disparity8b10bPer", 43213, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "input 8b10b disparity periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("disparity8b10bPer", prop)

    prop = PropMeta("str", "disparity8b10bRate", "disparity8b10bRate", 43221, PropCategory.IMPLICIT_RATE)
    prop.label = "input 8b10b disparity rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("disparity8b10bRate", prop)

    prop = PropMeta("str", "disparity8b10bSpct", "disparity8b10bSpct", 43217, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "input 8b10b disparity suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("disparity8b10bSpct", prop)

    prop = PropMeta("str", "disparity8b10bThr", "disparity8b10bThr", 43218, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "input 8b10b disparity thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("disparity8b10bThr", prop)

    prop = PropMeta("str", "disparity8b10bTr", "disparity8b10bTr", 43220, PropCategory.IMPLICIT_TREND)
    prop.label = "input 8b10b disparity trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("disparity8b10bTr", prop)

    prop = PropMeta("str", "disparity8b10bTrBase", "disparity8b10bTrBase", 43219, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "input 8b10b disparity trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("disparity8b10bTrBase", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "eislAvg", "eislAvg", 43237, PropCategory.IMPLICIT_AVG)
    prop.label = "input eisl average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eislAvg", prop)

    prop = PropMeta("str", "eislBase", "eislBase", 43232, PropCategory.IMPLICIT_BASELINE)
    prop.label = "input eisl baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eislBase", prop)

    prop = PropMeta("str", "eislCum", "eislCum", 43233, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "input eisl cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eislCum", prop)

    prop = PropMeta("str", "eislLast", "eislLast", 43231, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "input eisl current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eislLast", prop)

    prop = PropMeta("str", "eislMax", "eislMax", 43236, PropCategory.IMPLICIT_MAX)
    prop.label = "input eisl maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eislMax", prop)

    prop = PropMeta("str", "eislMin", "eislMin", 43235, PropCategory.IMPLICIT_MIN)
    prop.label = "input eisl minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eislMin", prop)

    prop = PropMeta("str", "eislPer", "eislPer", 43234, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "input eisl periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eislPer", prop)

    prop = PropMeta("str", "eislRate", "eislRate", 43242, PropCategory.IMPLICIT_RATE)
    prop.label = "input eisl rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eislRate", prop)

    prop = PropMeta("str", "eislSpct", "eislSpct", 43238, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "input eisl suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eislSpct", prop)

    prop = PropMeta("str", "eislThr", "eislThr", 43239, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "input eisl thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("eislThr", prop)

    prop = PropMeta("str", "eislTr", "eislTr", 43241, PropCategory.IMPLICIT_TREND)
    prop.label = "input eisl trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eislTr", prop)

    prop = PropMeta("str", "eislTrBase", "eislTrBase", 43240, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "input eisl trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eislTrBase", prop)

    prop = PropMeta("str", "elpAvg", "elpAvg", 43258, PropCategory.IMPLICIT_AVG)
    prop.label = "input elp average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("elpAvg", prop)

    prop = PropMeta("str", "elpBase", "elpBase", 43253, PropCategory.IMPLICIT_BASELINE)
    prop.label = "input elp baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("elpBase", prop)

    prop = PropMeta("str", "elpCum", "elpCum", 43254, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "input elp cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("elpCum", prop)

    prop = PropMeta("str", "elpLast", "elpLast", 43252, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "input elp current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("elpLast", prop)

    prop = PropMeta("str", "elpMax", "elpMax", 43257, PropCategory.IMPLICIT_MAX)
    prop.label = "input elp maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("elpMax", prop)

    prop = PropMeta("str", "elpMin", "elpMin", 43256, PropCategory.IMPLICIT_MIN)
    prop.label = "input elp minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("elpMin", prop)

    prop = PropMeta("str", "elpPer", "elpPer", 43255, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "input elp periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("elpPer", prop)

    prop = PropMeta("str", "elpRate", "elpRate", 43263, PropCategory.IMPLICIT_RATE)
    prop.label = "input elp rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("elpRate", prop)

    prop = PropMeta("str", "elpSpct", "elpSpct", 43259, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "input elp suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("elpSpct", prop)

    prop = PropMeta("str", "elpThr", "elpThr", 43260, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "input elp thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("elpThr", prop)

    prop = PropMeta("str", "elpTr", "elpTr", 43262, PropCategory.IMPLICIT_TREND)
    prop.label = "input elp trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("elpTr", prop)

    prop = PropMeta("str", "elpTrBase", "elpTrBase", 43261, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "input elp trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("elpTrBase", prop)

    prop = PropMeta("str", "framingAvg", "framingAvg", 43279, PropCategory.IMPLICIT_AVG)
    prop.label = "input framing errors average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("framingAvg", prop)

    prop = PropMeta("str", "framingBase", "framingBase", 43274, PropCategory.IMPLICIT_BASELINE)
    prop.label = "input framing errors baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("framingBase", prop)

    prop = PropMeta("str", "framingCum", "framingCum", 43275, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "input framing errors cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("framingCum", prop)

    prop = PropMeta("str", "framingLast", "framingLast", 43273, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "input framing errors current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("framingLast", prop)

    prop = PropMeta("str", "framingMax", "framingMax", 43278, PropCategory.IMPLICIT_MAX)
    prop.label = "input framing errors maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("framingMax", prop)

    prop = PropMeta("str", "framingMin", "framingMin", 43277, PropCategory.IMPLICIT_MIN)
    prop.label = "input framing errors minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("framingMin", prop)

    prop = PropMeta("str", "framingPer", "framingPer", 43276, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "input framing errors periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("framingPer", prop)

    prop = PropMeta("str", "framingRate", "framingRate", 43284, PropCategory.IMPLICIT_RATE)
    prop.label = "input framing errors rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("framingRate", prop)

    prop = PropMeta("str", "framingSpct", "framingSpct", 43280, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "input framing errors suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("framingSpct", prop)

    prop = PropMeta("str", "framingThr", "framingThr", 43281, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "input framing errors thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("framingThr", prop)

    prop = PropMeta("str", "framingTr", "framingTr", 43283, PropCategory.IMPLICIT_TREND)
    prop.label = "input framing errors trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("framingTr", prop)

    prop = PropMeta("str", "framingTrBase", "framingTrBase", 43282, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "input framing errors trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("framingTrBase", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("l1FcIfToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

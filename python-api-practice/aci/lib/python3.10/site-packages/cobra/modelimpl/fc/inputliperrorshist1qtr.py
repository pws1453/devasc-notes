# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class InputLIPErrorsHist1qtr(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.fc.InputLIPErrorsHist1qtr", "input lip errors")

    counter = CounterMeta("fragmentedFrames", CounterCategory.COUNTER, "link", "fragmented frames")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "fragmentedFramesCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "fragmentedFramesPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "fragmentedFramesMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "fragmentedFramesMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "fragmentedFramesAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "fragmentedFramesSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "fragmentedFramesThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "fragmentedFramesTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "fragmentedFramesRate"
    meta._counters.append(counter)

    counter = CounterMeta("eofAborts", CounterCategory.COUNTER, "link", "input eof aborts")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "eofAbortsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "eofAbortsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "eofAbortsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "eofAbortsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "eofAbortsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "eofAbortsSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "eofAbortsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "eofAbortsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "eofAbortsRate"
    meta._counters.append(counter)

    counter = CounterMeta("nonf8LipError", CounterCategory.COUNTER, "link", "input non f8 lip error")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "nonf8LipErrorCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "nonf8LipErrorPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "nonf8LipErrorMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "nonf8LipErrorMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "nonf8LipErrorAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "nonf8LipErrorSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "nonf8LipErrorThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "nonf8LipErrorTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "nonf8LipErrorRate"
    meta._counters.append(counter)

    counter = CounterMeta("f8LipError", CounterCategory.COUNTER, "link", "input f8 lip error")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "f8LipErrorCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "f8LipErrorPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "f8LipErrorMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "f8LipErrorMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "f8LipErrorAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "f8LipErrorSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "f8LipErrorThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "f8LipErrorTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "f8LipErrorRate"
    meta._counters.append(counter)

    meta.moClassName = "fcInputLIPErrorsHist1qtr"
    meta.rnFormat = "HDfcInputLIPErrors1qtr-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical input lip errors stats in 1 quarter"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.l1.FcPhysIf")
    meta.parentClasses.add("cobra.model.pc.FcAggrIf")

    meta.superClasses.add("cobra.model.fc.InputLIPErrorsHist")
    meta.superClasses.add("cobra.model.stats.Hist")
    meta.superClasses.add("cobra.model.stats.Item")

    meta.rnPrefixes = [
        ('HDfcInputLIPErrors1qtr-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "eofAbortsAvg", "eofAbortsAvg", 43142, PropCategory.IMPLICIT_AVG)
    prop.label = "input eof aborts average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eofAbortsAvg", prop)

    prop = PropMeta("str", "eofAbortsCum", "eofAbortsCum", 43138, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "input eof aborts cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eofAbortsCum", prop)

    prop = PropMeta("str", "eofAbortsMax", "eofAbortsMax", 43141, PropCategory.IMPLICIT_MAX)
    prop.label = "input eof aborts maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eofAbortsMax", prop)

    prop = PropMeta("str", "eofAbortsMin", "eofAbortsMin", 43140, PropCategory.IMPLICIT_MIN)
    prop.label = "input eof aborts minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eofAbortsMin", prop)

    prop = PropMeta("str", "eofAbortsPer", "eofAbortsPer", 43139, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "input eof aborts periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eofAbortsPer", prop)

    prop = PropMeta("str", "eofAbortsRate", "eofAbortsRate", 43146, PropCategory.IMPLICIT_RATE)
    prop.label = "input eof aborts rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eofAbortsRate", prop)

    prop = PropMeta("str", "eofAbortsSpct", "eofAbortsSpct", 43143, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "input eof aborts suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eofAbortsSpct", prop)

    prop = PropMeta("str", "eofAbortsThr", "eofAbortsThr", 43144, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "input eof aborts thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("eofAbortsThr", prop)

    prop = PropMeta("str", "eofAbortsTr", "eofAbortsTr", 43145, PropCategory.IMPLICIT_TREND)
    prop.label = "input eof aborts trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("eofAbortsTr", prop)

    prop = PropMeta("str", "f8LipErrorAvg", "f8LipErrorAvg", 43163, PropCategory.IMPLICIT_AVG)
    prop.label = "input f8 lip error average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("f8LipErrorAvg", prop)

    prop = PropMeta("str", "f8LipErrorCum", "f8LipErrorCum", 43159, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "input f8 lip error cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("f8LipErrorCum", prop)

    prop = PropMeta("str", "f8LipErrorMax", "f8LipErrorMax", 43162, PropCategory.IMPLICIT_MAX)
    prop.label = "input f8 lip error maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("f8LipErrorMax", prop)

    prop = PropMeta("str", "f8LipErrorMin", "f8LipErrorMin", 43161, PropCategory.IMPLICIT_MIN)
    prop.label = "input f8 lip error minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("f8LipErrorMin", prop)

    prop = PropMeta("str", "f8LipErrorPer", "f8LipErrorPer", 43160, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "input f8 lip error periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("f8LipErrorPer", prop)

    prop = PropMeta("str", "f8LipErrorRate", "f8LipErrorRate", 43167, PropCategory.IMPLICIT_RATE)
    prop.label = "input f8 lip error rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("f8LipErrorRate", prop)

    prop = PropMeta("str", "f8LipErrorSpct", "f8LipErrorSpct", 43164, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "input f8 lip error suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("f8LipErrorSpct", prop)

    prop = PropMeta("str", "f8LipErrorThr", "f8LipErrorThr", 43165, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "input f8 lip error thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("f8LipErrorThr", prop)

    prop = PropMeta("str", "f8LipErrorTr", "f8LipErrorTr", 43166, PropCategory.IMPLICIT_TREND)
    prop.label = "input f8 lip error trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("f8LipErrorTr", prop)

    prop = PropMeta("str", "fragmentedFramesAvg", "fragmentedFramesAvg", 43184, PropCategory.IMPLICIT_AVG)
    prop.label = "fragmented frames average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fragmentedFramesAvg", prop)

    prop = PropMeta("str", "fragmentedFramesCum", "fragmentedFramesCum", 43180, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "fragmented frames cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fragmentedFramesCum", prop)

    prop = PropMeta("str", "fragmentedFramesMax", "fragmentedFramesMax", 43183, PropCategory.IMPLICIT_MAX)
    prop.label = "fragmented frames maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fragmentedFramesMax", prop)

    prop = PropMeta("str", "fragmentedFramesMin", "fragmentedFramesMin", 43182, PropCategory.IMPLICIT_MIN)
    prop.label = "fragmented frames minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fragmentedFramesMin", prop)

    prop = PropMeta("str", "fragmentedFramesPer", "fragmentedFramesPer", 43181, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "fragmented frames periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fragmentedFramesPer", prop)

    prop = PropMeta("str", "fragmentedFramesRate", "fragmentedFramesRate", 43188, PropCategory.IMPLICIT_RATE)
    prop.label = "fragmented frames rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fragmentedFramesRate", prop)

    prop = PropMeta("str", "fragmentedFramesSpct", "fragmentedFramesSpct", 43185, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "fragmented frames suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fragmentedFramesSpct", prop)

    prop = PropMeta("str", "fragmentedFramesThr", "fragmentedFramesThr", 43186, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "fragmented frames thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("fragmentedFramesThr", prop)

    prop = PropMeta("str", "fragmentedFramesTr", "fragmentedFramesTr", 43187, PropCategory.IMPLICIT_TREND)
    prop.label = "fragmented frames trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("fragmentedFramesTr", prop)

    prop = PropMeta("str", "index", "index", 42804, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "nonf8LipErrorAvg", "nonf8LipErrorAvg", 43205, PropCategory.IMPLICIT_AVG)
    prop.label = "input non f8 lip error average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("nonf8LipErrorAvg", prop)

    prop = PropMeta("str", "nonf8LipErrorCum", "nonf8LipErrorCum", 43201, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "input non f8 lip error cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("nonf8LipErrorCum", prop)

    prop = PropMeta("str", "nonf8LipErrorMax", "nonf8LipErrorMax", 43204, PropCategory.IMPLICIT_MAX)
    prop.label = "input non f8 lip error maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("nonf8LipErrorMax", prop)

    prop = PropMeta("str", "nonf8LipErrorMin", "nonf8LipErrorMin", 43203, PropCategory.IMPLICIT_MIN)
    prop.label = "input non f8 lip error minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("nonf8LipErrorMin", prop)

    prop = PropMeta("str", "nonf8LipErrorPer", "nonf8LipErrorPer", 43202, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "input non f8 lip error periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("nonf8LipErrorPer", prop)

    prop = PropMeta("str", "nonf8LipErrorRate", "nonf8LipErrorRate", 43209, PropCategory.IMPLICIT_RATE)
    prop.label = "input non f8 lip error rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("nonf8LipErrorRate", prop)

    prop = PropMeta("str", "nonf8LipErrorSpct", "nonf8LipErrorSpct", 43206, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "input non f8 lip error suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("nonf8LipErrorSpct", prop)

    prop = PropMeta("str", "nonf8LipErrorThr", "nonf8LipErrorThr", 43207, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "input non f8 lip error thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("nonf8LipErrorThr", prop)

    prop = PropMeta("str", "nonf8LipErrorTr", "nonf8LipErrorTr", 43208, PropCategory.IMPLICIT_TREND)
    prop.label = "input non f8 lip error trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("nonf8LipErrorTr", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("l1FcIfToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

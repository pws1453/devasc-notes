# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class InputFrames15min(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.fc.InputFrames15min", "input frames")

    counter = CounterMeta("classf", CounterCategory.COUNTER, "frames", "input classf frames")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "classfLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "classfCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "classfPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "classfMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "classfMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "classfAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "classfSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "classfBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "classfThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "classfTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "classfTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "classfRate"
    meta._counters.append(counter)

    counter = CounterMeta("class3", CounterCategory.COUNTER, "frames", "input class3 frames")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "class3Last"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "class3Cum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "class3Per"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "class3Min"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "class3Max"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "class3Avg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "class3Spct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "class3Base"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "class3Thr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "class3TrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "class3Tr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "class3Rate"
    meta._counters.append(counter)

    counter = CounterMeta("class2", CounterCategory.COUNTER, "frames", "input class2 frames")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "class2Last"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "class2Cum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "class2Per"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "class2Min"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "class2Max"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "class2Avg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "class2Spct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "class2Base"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "class2Thr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "class2TrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "class2Tr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "class2Rate"
    meta._counters.append(counter)

    meta.moClassName = "fcInputFrames15min"
    meta.rnFormat = "CDfcInputFrames15min"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current input frames stats in 15 minute"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.l1.FcPhysIf")
    meta.parentClasses.add("cobra.model.pc.FcAggrIf")

    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.fc.InputFrames")
    meta.superClasses.add("cobra.model.stats.Item")

    meta.rnPrefixes = [
        ('CDfcInputFrames15min', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "class2Avg", "class2Avg", 41415, PropCategory.IMPLICIT_AVG)
    prop.label = "input class2 frames average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class2Avg", prop)

    prop = PropMeta("str", "class2Base", "class2Base", 41410, PropCategory.IMPLICIT_BASELINE)
    prop.label = "input class2 frames baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class2Base", prop)

    prop = PropMeta("str", "class2Cum", "class2Cum", 41411, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "input class2 frames cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class2Cum", prop)

    prop = PropMeta("str", "class2Last", "class2Last", 41409, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "input class2 frames current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class2Last", prop)

    prop = PropMeta("str", "class2Max", "class2Max", 41414, PropCategory.IMPLICIT_MAX)
    prop.label = "input class2 frames maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class2Max", prop)

    prop = PropMeta("str", "class2Min", "class2Min", 41413, PropCategory.IMPLICIT_MIN)
    prop.label = "input class2 frames minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class2Min", prop)

    prop = PropMeta("str", "class2Per", "class2Per", 41412, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "input class2 frames periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class2Per", prop)

    prop = PropMeta("str", "class2Rate", "class2Rate", 41420, PropCategory.IMPLICIT_RATE)
    prop.label = "input class2 frames rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class2Rate", prop)

    prop = PropMeta("str", "class2Spct", "class2Spct", 41416, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "input class2 frames suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class2Spct", prop)

    prop = PropMeta("str", "class2Thr", "class2Thr", 41417, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "input class2 frames thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("class2Thr", prop)

    prop = PropMeta("str", "class2Tr", "class2Tr", 41419, PropCategory.IMPLICIT_TREND)
    prop.label = "input class2 frames trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class2Tr", prop)

    prop = PropMeta("str", "class2TrBase", "class2TrBase", 41418, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "input class2 frames trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class2TrBase", prop)

    prop = PropMeta("str", "class3Avg", "class3Avg", 41436, PropCategory.IMPLICIT_AVG)
    prop.label = "input class3 frames average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class3Avg", prop)

    prop = PropMeta("str", "class3Base", "class3Base", 41431, PropCategory.IMPLICIT_BASELINE)
    prop.label = "input class3 frames baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class3Base", prop)

    prop = PropMeta("str", "class3Cum", "class3Cum", 41432, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "input class3 frames cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class3Cum", prop)

    prop = PropMeta("str", "class3Last", "class3Last", 41430, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "input class3 frames current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class3Last", prop)

    prop = PropMeta("str", "class3Max", "class3Max", 41435, PropCategory.IMPLICIT_MAX)
    prop.label = "input class3 frames maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class3Max", prop)

    prop = PropMeta("str", "class3Min", "class3Min", 41434, PropCategory.IMPLICIT_MIN)
    prop.label = "input class3 frames minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class3Min", prop)

    prop = PropMeta("str", "class3Per", "class3Per", 41433, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "input class3 frames periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class3Per", prop)

    prop = PropMeta("str", "class3Rate", "class3Rate", 41441, PropCategory.IMPLICIT_RATE)
    prop.label = "input class3 frames rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class3Rate", prop)

    prop = PropMeta("str", "class3Spct", "class3Spct", 41437, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "input class3 frames suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class3Spct", prop)

    prop = PropMeta("str", "class3Thr", "class3Thr", 41438, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "input class3 frames thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("class3Thr", prop)

    prop = PropMeta("str", "class3Tr", "class3Tr", 41440, PropCategory.IMPLICIT_TREND)
    prop.label = "input class3 frames trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class3Tr", prop)

    prop = PropMeta("str", "class3TrBase", "class3TrBase", 41439, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "input class3 frames trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("class3TrBase", prop)

    prop = PropMeta("str", "classfAvg", "classfAvg", 41457, PropCategory.IMPLICIT_AVG)
    prop.label = "input classf frames average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("classfAvg", prop)

    prop = PropMeta("str", "classfBase", "classfBase", 41452, PropCategory.IMPLICIT_BASELINE)
    prop.label = "input classf frames baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("classfBase", prop)

    prop = PropMeta("str", "classfCum", "classfCum", 41453, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "input classf frames cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("classfCum", prop)

    prop = PropMeta("str", "classfLast", "classfLast", 41451, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "input classf frames current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("classfLast", prop)

    prop = PropMeta("str", "classfMax", "classfMax", 41456, PropCategory.IMPLICIT_MAX)
    prop.label = "input classf frames maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("classfMax", prop)

    prop = PropMeta("str", "classfMin", "classfMin", 41455, PropCategory.IMPLICIT_MIN)
    prop.label = "input classf frames minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("classfMin", prop)

    prop = PropMeta("str", "classfPer", "classfPer", 41454, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "input classf frames periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("classfPer", prop)

    prop = PropMeta("str", "classfRate", "classfRate", 41462, PropCategory.IMPLICIT_RATE)
    prop.label = "input classf frames rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("classfRate", prop)

    prop = PropMeta("str", "classfSpct", "classfSpct", 41458, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "input classf frames suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("classfSpct", prop)

    prop = PropMeta("str", "classfThr", "classfThr", 41459, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "input classf frames thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("classfThr", prop)

    prop = PropMeta("str", "classfTr", "classfTr", 41461, PropCategory.IMPLICIT_TREND)
    prop.label = "input classf frames trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("classfTr", prop)

    prop = PropMeta("str", "classfTrBase", "classfTrBase", 41460, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "input classf frames trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("classfTrBase", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("l1FcIfToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

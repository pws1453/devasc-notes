# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class IngrDrop1qtr(Mo):
    """
    A class that represents the most current statistics for  Ingress  Data  Plane  Policer  Drop  Counters in a 1 quarter sampling interval.  This class updates every day.

    """

    meta = StatsClassMeta("cobra.model.dpp.IngrDrop1qtr", "Ingress Data Plane Policer Drop Counters")

    counter = CounterMeta("bytesRate", CounterCategory.GAUGE, "bytes-per-second", "Ingress Policer Dropped Bytes rate")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "bytesRateLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "bytesRateMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "bytesRateMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "bytesRateAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "bytesRateSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "bytesRateTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "bytesRateThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "bytesRateTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "bytesRateTr"
    meta._counters.append(counter)

    counter = CounterMeta("bytes", CounterCategory.COUNTER, "bytes", "Ingress Policer Dropped Bytes")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "bytesLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "bytesCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "bytesPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "bytesMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "bytesMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "bytesAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "bytesSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "bytesBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "bytesThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "bytesTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "bytesTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "bytesRate"
    meta._counters.append(counter)

    counter = CounterMeta("pktsRate", CounterCategory.GAUGE, "packets-per-second", "Ingress Policer Dropped Packets rate")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "pktsRateLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "pktsRateMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "pktsRateMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "pktsRateAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "pktsRateSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "pktsRateTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "pktsRateThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "pktsRateTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "pktsRateTr"
    meta._counters.append(counter)

    counter = CounterMeta("pkts", CounterCategory.COUNTER, "packets", "Ingress Policer Dropped Packets")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "pktsLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "pktsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "pktsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "pktsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "pktsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "pktsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "pktsSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "pktsBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "pktsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "pktsTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "pktsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "pktsRate"
    meta._counters.append(counter)

    meta.moClassName = "dppIngrDrop1qtr"
    meta.rnFormat = "CDdppIngrDrop1qtr"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current Ingress Data Plane Policer Drop Counters stats in 1 quarter"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.svi.If")
    meta.parentClasses.add("cobra.model.pc.AggrIf")
    meta.parentClasses.add("cobra.model.l1.PhysIf")
    meta.parentClasses.add("cobra.model.l3.RtdIf")
    meta.parentClasses.add("cobra.model.l3.EncRtdIf")

    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.dpp.IngrDrop")
    meta.superClasses.add("cobra.model.stats.Item")

    meta.rnPrefixes = [
        ('CDdppIngrDrop1qtr', False),
    ]

    prop = PropMeta("str", "bytesAvg", "bytesAvg", 23930, PropCategory.IMPLICIT_AVG)
    prop.label = "Ingress Policer Dropped Bytes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesAvg", prop)

    prop = PropMeta("str", "bytesBase", "bytesBase", 23925, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Ingress Policer Dropped Bytes baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesBase", prop)

    prop = PropMeta("str", "bytesCum", "bytesCum", 23926, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Ingress Policer Dropped Bytes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesCum", prop)

    prop = PropMeta("str", "bytesLast", "bytesLast", 23924, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Ingress Policer Dropped Bytes current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesLast", prop)

    prop = PropMeta("str", "bytesMax", "bytesMax", 23929, PropCategory.IMPLICIT_MAX)
    prop.label = "Ingress Policer Dropped Bytes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesMax", prop)

    prop = PropMeta("str", "bytesMin", "bytesMin", 23928, PropCategory.IMPLICIT_MIN)
    prop.label = "Ingress Policer Dropped Bytes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesMin", prop)

    prop = PropMeta("str", "bytesPer", "bytesPer", 23927, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Ingress Policer Dropped Bytes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesPer", prop)

    prop = PropMeta("str", "bytesRate", "bytesRate", 23935, PropCategory.IMPLICIT_RATE)
    prop.label = "Ingress Policer Dropped Bytes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRate", prop)

    prop = PropMeta("str", "bytesRateAvg", "bytesRateAvg", 23948, PropCategory.IMPLICIT_AVG)
    prop.label = "Ingress Policer Dropped Bytes rate average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateAvg", prop)

    prop = PropMeta("str", "bytesRateLast", "bytesRateLast", 23945, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Ingress Policer Dropped Bytes rate current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateLast", prop)

    prop = PropMeta("str", "bytesRateMax", "bytesRateMax", 23947, PropCategory.IMPLICIT_MAX)
    prop.label = "Ingress Policer Dropped Bytes rate maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateMax", prop)

    prop = PropMeta("str", "bytesRateMin", "bytesRateMin", 23946, PropCategory.IMPLICIT_MIN)
    prop.label = "Ingress Policer Dropped Bytes rate minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateMin", prop)

    prop = PropMeta("str", "bytesRateSpct", "bytesRateSpct", 23949, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Ingress Policer Dropped Bytes rate suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateSpct", prop)

    prop = PropMeta("str", "bytesRateThr", "bytesRateThr", 23951, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Ingress Policer Dropped Bytes rate thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("bytesRateThr", prop)

    prop = PropMeta("str", "bytesRateTr", "bytesRateTr", 23953, PropCategory.IMPLICIT_TREND)
    prop.label = "Ingress Policer Dropped Bytes rate trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateTr", prop)

    prop = PropMeta("str", "bytesRateTrBase", "bytesRateTrBase", 23952, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Ingress Policer Dropped Bytes rate trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateTrBase", prop)

    prop = PropMeta("str", "bytesRateTtl", "bytesRateTtl", 23950, PropCategory.IMPLICIT_TOTAL)
    prop.label = "Ingress Policer Dropped Bytes rate total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRateTtl", prop)

    prop = PropMeta("str", "bytesSpct", "bytesSpct", 23931, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Ingress Policer Dropped Bytes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesSpct", prop)

    prop = PropMeta("str", "bytesThr", "bytesThr", 23932, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Ingress Policer Dropped Bytes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("bytesThr", prop)

    prop = PropMeta("str", "bytesTr", "bytesTr", 23934, PropCategory.IMPLICIT_TREND)
    prop.label = "Ingress Policer Dropped Bytes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesTr", prop)

    prop = PropMeta("str", "bytesTrBase", "bytesTrBase", 23933, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Ingress Policer Dropped Bytes trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesTrBase", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "pktsAvg", "pktsAvg", 23966, PropCategory.IMPLICIT_AVG)
    prop.label = "Ingress Policer Dropped Packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsAvg", prop)

    prop = PropMeta("str", "pktsBase", "pktsBase", 23961, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Ingress Policer Dropped Packets baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsBase", prop)

    prop = PropMeta("str", "pktsCum", "pktsCum", 23962, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Ingress Policer Dropped Packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsCum", prop)

    prop = PropMeta("str", "pktsLast", "pktsLast", 23960, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Ingress Policer Dropped Packets current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsLast", prop)

    prop = PropMeta("str", "pktsMax", "pktsMax", 23965, PropCategory.IMPLICIT_MAX)
    prop.label = "Ingress Policer Dropped Packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsMax", prop)

    prop = PropMeta("str", "pktsMin", "pktsMin", 23964, PropCategory.IMPLICIT_MIN)
    prop.label = "Ingress Policer Dropped Packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsMin", prop)

    prop = PropMeta("str", "pktsPer", "pktsPer", 23963, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Ingress Policer Dropped Packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsPer", prop)

    prop = PropMeta("str", "pktsRate", "pktsRate", 23971, PropCategory.IMPLICIT_RATE)
    prop.label = "Ingress Policer Dropped Packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRate", prop)

    prop = PropMeta("str", "pktsRateAvg", "pktsRateAvg", 23984, PropCategory.IMPLICIT_AVG)
    prop.label = "Ingress Policer Dropped Packets rate average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateAvg", prop)

    prop = PropMeta("str", "pktsRateLast", "pktsRateLast", 23981, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Ingress Policer Dropped Packets rate current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateLast", prop)

    prop = PropMeta("str", "pktsRateMax", "pktsRateMax", 23983, PropCategory.IMPLICIT_MAX)
    prop.label = "Ingress Policer Dropped Packets rate maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateMax", prop)

    prop = PropMeta("str", "pktsRateMin", "pktsRateMin", 23982, PropCategory.IMPLICIT_MIN)
    prop.label = "Ingress Policer Dropped Packets rate minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateMin", prop)

    prop = PropMeta("str", "pktsRateSpct", "pktsRateSpct", 23985, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Ingress Policer Dropped Packets rate suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateSpct", prop)

    prop = PropMeta("str", "pktsRateThr", "pktsRateThr", 23987, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Ingress Policer Dropped Packets rate thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("pktsRateThr", prop)

    prop = PropMeta("str", "pktsRateTr", "pktsRateTr", 23989, PropCategory.IMPLICIT_TREND)
    prop.label = "Ingress Policer Dropped Packets rate trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateTr", prop)

    prop = PropMeta("str", "pktsRateTrBase", "pktsRateTrBase", 23988, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Ingress Policer Dropped Packets rate trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateTrBase", prop)

    prop = PropMeta("str", "pktsRateTtl", "pktsRateTtl", 23986, PropCategory.IMPLICIT_TOTAL)
    prop.label = "Ingress Policer Dropped Packets rate total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsRateTtl", prop)

    prop = PropMeta("str", "pktsSpct", "pktsSpct", 23967, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Ingress Policer Dropped Packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsSpct", prop)

    prop = PropMeta("str", "pktsThr", "pktsThr", 23968, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Ingress Policer Dropped Packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("pktsThr", prop)

    prop = PropMeta("str", "pktsTr", "pktsTr", 23970, PropCategory.IMPLICIT_TREND)
    prop.label = "Ingress Policer Dropped Packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsTr", prop)

    prop = PropMeta("str", "pktsTrBase", "pktsTrBase", 23969, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Ingress Policer Dropped Packets trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("pktsTrBase", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("l1EthIfToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

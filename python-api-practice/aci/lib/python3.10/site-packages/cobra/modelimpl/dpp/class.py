# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Class(Mo):
    """
     Holder for dpp class policy, each class describes a set of rules describing the policer rates 

    """

    meta = ClassMeta("cobra.model.dpp.Class")

    meta.moClassName = "dppClass"
    meta.rnFormat = "classp-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Class"
    meta.writeAccessMask = 0x100000000000001
    meta.readAccessMask = 0x100000000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.dpp.If")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.dpp.Ckt")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.Ckt", "ckt-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.If", "if-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.dpp.Entity")

    meta.superClasses.add("cobra.model.pol.Instr")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.dpp.Policer")

    meta.rnPrefixes = [
        ('classp-', True),
    ]

    prop = PropMeta("str", "be", "be", 23144, PropCategory.REGULAR)
    prop.label = "Excessive Burst"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 549755813760)]
    prop.defaultValue = 18446744073709551615
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 18446744073709551615)
    meta.props.add("be", prop)

    prop = PropMeta("str", "beUnit", "beUnit", 23148, PropCategory.REGULAR)
    prop.label = "Excessive Burst Unit"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("giga", "giga-bytes/packets", 3)
    prop._addConstant("kilo", "kilo-bytes/packets", 1)
    prop._addConstant("mega", "mega-bytes/packets", 2)
    prop._addConstant("msec", "milli-seconds", 4)
    prop._addConstant("unspecified", "bytes/packets", 0)
    prop._addConstant("usec", "micro-seconds", 5)
    meta.props.add("beUnit", prop)

    prop = PropMeta("str", "burst", "burst", 23142, PropCategory.REGULAR)
    prop.label = "Burst"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 549755813760)]
    prop.defaultValue = 18446744073709551615
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 18446744073709551615)
    meta.props.add("burst", prop)

    prop = PropMeta("str", "burstUnit", "burstUnit", 23146, PropCategory.REGULAR)
    prop.label = "Burst Unit"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("giga", "giga-bytes/packets", 3)
    prop._addConstant("kilo", "kilo-bytes/packets", 1)
    prop._addConstant("mega", "mega-bytes/packets", 2)
    prop._addConstant("msec", "milli-seconds", 4)
    prop._addConstant("unspecified", "bytes/packets", 0)
    prop._addConstant("usec", "micro-seconds", 5)
    meta.props.add("burstUnit", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "conformAction", "conformAction", 23149, PropCategory.REGULAR)
    prop.label = "Confirm Action"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "transmit"
    prop._addConstant("drop", "drop", 2)
    prop._addConstant("mark", "mark", 3)
    prop._addConstant("transmit", "transmit", 1)
    meta.props.add("conformAction", prop)

    prop = PropMeta("str", "conformMarkCos", "conformMarkCos", 23155, PropCategory.REGULAR)
    prop.label = "Conform mark cos"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 7)]
    prop.defaultValue = 65535
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 65535)
    meta.props.add("conformMarkCos", prop)

    prop = PropMeta("str", "conformMarkDscp", "conformMarkDscp", 23152, PropCategory.REGULAR)
    prop.label = "Conform mark dscp"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.defaultValue = 65535
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 65535)
    meta.props.add("conformMarkDscp", prop)

    prop = PropMeta("str", "descr", "descr", 5581, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "exceedAction", "exceedAction", 23150, PropCategory.REGULAR)
    prop.label = "Exceed Action"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "drop"
    prop._addConstant("drop", "drop", 2)
    prop._addConstant("mark", "mark", 3)
    prop._addConstant("transmit", "transmit", 1)
    meta.props.add("exceedAction", prop)

    prop = PropMeta("str", "exceedMarkCos", "exceedMarkCos", 23156, PropCategory.REGULAR)
    prop.label = "Exceed mark cos"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 7)]
    prop.defaultValue = 65535
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 65535)
    meta.props.add("exceedMarkCos", prop)

    prop = PropMeta("str", "exceedMarkDscp", "exceedMarkDscp", 23153, PropCategory.REGULAR)
    prop.label = "Exceed mark dscp"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.defaultValue = 65535
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 65535)
    meta.props.add("exceedMarkDscp", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "mode", "mode", 23140, PropCategory.REGULAR)
    prop.label = "Bit or Packet"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "bit"
    prop._addConstant("bit", "bit-policer", 1)
    prop._addConstant("packet", "packet-policer", 2)
    meta.props.add("mode", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 22420, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 22266, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "operSt", "operSt", 22938, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 22939, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dedicated-policer-mode", "policer-configured-with-dedicated-mode", 10)
    prop._addConstant("hwprog-fail", "hardware-programming-failed", 1)
    prop._addConstant("l3-policer-active", "l3-policer-is-already-active", 9)
    prop._addConstant("link-is-down", "policer-is-not-enabled-as-the-link-is-down", 5)
    prop._addConstant("max-if-policer-limit-reached", "max-interface-policer-limit-reached", 2)
    prop._addConstant("policer-action-unsupported", "specified-policer-action-is-not-supported-on-this-platform", 8)
    prop._addConstant("policer-mode-unsupported", "specified-policer-mode-is-not-supported-on-this-platform", 6)
    prop._addConstant("policer-type-unsupported", "specified-policer-type-is-not-supported-on-this-platform", 7)
    prop._addConstant("transient-error", "a-transient-error-occurred,-auto-retry-will-be-attempted", 4)
    prop._addConstant("unspecified", "unspecified", 0)
    prop._addConstant("unsupported-interface-type", "policer-is-not-supported-on-this-type-of-interface", 3)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "pir", "pir", 23143, PropCategory.REGULAR)
    prop.label = "Peak Rate"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 4398046510080)]
    meta.props.add("pir", prop)

    prop = PropMeta("str", "pirUnit", "pirUnit", 23147, PropCategory.REGULAR)
    prop.label = "Peak Rate Unit"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("giga", "giga-bits/packets-per-second", 3)
    prop._addConstant("kilo", "kilo-bits/packets-per-second", 1)
    prop._addConstant("mega", "mega-bits/packets-per-second", 2)
    prop._addConstant("unspecified", "bits/packets-per-second", 0)
    meta.props.add("pirUnit", prop)

    prop = PropMeta("str", "qosmCfgFailedBmp", "qosmCfgFailedBmp", 23158, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop._addConstant("dpp:ClassbeUnit_failed_flag", None, 16)
    prop._addConstant("dpp:Classbe_failed_flag", None, 8)
    prop._addConstant("dpp:ClassburstUnit_failed_flag", None, 64)
    prop._addConstant("dpp:Classburst_failed_flag", None, 32)
    prop._addConstant("dpp:ClassconformAction_failed_flag", None, 128)
    prop._addConstant("dpp:ClassconformMarkCos_failed_flag", None, 256)
    prop._addConstant("dpp:ClassconformMarkDscp_failed_flag", None, 512)
    prop._addConstant("dpp:Classdescr_failed_flag", None, 4)
    prop._addConstant("dpp:ClassexceedAction_failed_flag", None, 1024)
    prop._addConstant("dpp:ClassexceedMarkCos_failed_flag", None, 2048)
    prop._addConstant("dpp:ClassexceedMarkDscp_failed_flag", None, 4096)
    prop._addConstant("dpp:ClasslcOwn_failed_flag", None, -9223372036854775808)
    prop._addConstant("dpp:ClassmodTs_failed_flag", None, 2305843009213693952)
    prop._addConstant("dpp:Classmode_failed_flag", None, 8192)
    prop._addConstant("dpp:ClassmonPolDn_failed_flag", None, 8388608)
    prop._addConstant("dpp:ClassnameAlias_failed_flag", None, 2)
    prop._addConstant("dpp:Classname_failed_flag", None, 1)
    prop._addConstant("dpp:ClasspirUnit_failed_flag", None, 32768)
    prop._addConstant("dpp:Classpir_failed_flag", None, 16384)
    prop._addConstant("dpp:ClassrateUnit_failed_flag", None, 131072)
    prop._addConstant("dpp:Classrate_failed_flag", None, 65536)
    prop._addConstant("dpp:ClasssharingMode_failed_flag", None, 262144)
    prop._addConstant("dpp:Classtype_failed_flag", None, 524288)
    prop._addConstant("dpp:ClassviolateAction_failed_flag", None, 1048576)
    prop._addConstant("dpp:ClassviolateMarkCos_failed_flag", None, 2097152)
    prop._addConstant("dpp:ClassviolateMarkDscp_failed_flag", None, 4194304)
    meta.props.add("qosmCfgFailedBmp", prop)

    prop = PropMeta("str", "qosmCfgFailedTs", "qosmCfgFailedTs", 23160, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("qosmCfgFailedTs", prop)

    prop = PropMeta("str", "qosmCfgState", "qosmCfgState", 23159, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("qosmCfgState", prop)

    prop = PropMeta("str", "rate", "rate", 23141, PropCategory.REGULAR)
    prop.label = "Rate"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 4398046510080)]
    meta.props.add("rate", prop)

    prop = PropMeta("str", "rateUnit", "rateUnit", 23145, PropCategory.REGULAR)
    prop.label = "Rate Unit"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("giga", "giga-bits/packets-per-second", 3)
    prop._addConstant("kilo", "kilo-bits/packets-per-second", 1)
    prop._addConstant("mega", "mega-bits/packets-per-second", 2)
    prop._addConstant("unspecified", "bits/packets-per-second", 0)
    meta.props.add("rateUnit", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "sharingMode", "sharingMode", 34348, PropCategory.REGULAR)
    prop.label = "Policer Sharing Mode"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "dedicated"
    prop._addConstant("dedicated", "dedicated-policer", 2)
    prop._addConstant("shared", "shared-policer", 1)
    meta.props.add("sharingMode", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "type", "type", 23139, PropCategory.REGULAR)
    prop.label = "1R2C or 2R3C Policer"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "1R2C"
    prop._addConstant("1R2C", "1-rate-2-color", 1)
    prop._addConstant("2R3C", "2-rate-3-color", 2)
    meta.props.add("type", prop)

    prop = PropMeta("str", "violateAction", "violateAction", 23151, PropCategory.REGULAR)
    prop.label = "Violate Action"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "drop"
    prop._addConstant("drop", "drop", 2)
    prop._addConstant("mark", "mark", 3)
    prop._addConstant("transmit", "transmit", 1)
    meta.props.add("violateAction", prop)

    prop = PropMeta("str", "violateMarkCos", "violateMarkCos", 23157, PropCategory.REGULAR)
    prop.label = "Violate mark cos"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 7)]
    prop.defaultValue = 65535
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 65535)
    meta.props.add("violateMarkCos", prop)

    prop = PropMeta("str", "violateMarkDscp", "violateMarkDscp", 23154, PropCategory.REGULAR)
    prop.label = "Violate mark dscp"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.defaultValue = 65535
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 65535)
    meta.props.add("violateMarkDscp", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

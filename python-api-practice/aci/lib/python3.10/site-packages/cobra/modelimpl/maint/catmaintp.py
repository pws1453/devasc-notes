# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class CatMaintP(Mo):
    """
    The catalog maintenance policy specifies when catalog maintenance takes place.

    """

    meta = ClassMeta("cobra.model.maint.CatMaintP")

    meta.moClassName = "maintCatMaintP"
    meta.rnFormat = "catmaintpol"
    meta.category = MoCategory.REGULAR
    meta.label = "Catalog Maitenance Policy"
    meta.writeAccessMask = 0x20000000001
    meta.readAccessMask = 0x20000000001
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.maint.RsPolCatalogScheduler")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.trig.RsTriggerable")
    meta.childClasses.add("cobra.model.maint.RtAecatmaintp")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.maint.RsPolCatalogScheduler", "rspolCatalogScheduler"))
    meta.childNamesAndRnPrefix.append(("cobra.model.maint.RtAecatmaintp", "rtpolAecatmaintp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.trig.RsTriggerable", "rsTriggerable"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.fabric.Inst")

    meta.superClasses.add("cobra.model.maint.AMaintP")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.trig.Executable")
    meta.superClasses.add("cobra.model.pol.Comp")
    meta.superClasses.add("cobra.model.pol.Obj")

    meta.rnPrefixes = [
        ('catmaintpol', False),
    ]

    prop = PropMeta("str", "adminSt", "adminSt", 1665, PropCategory.REGULAR)
    prop.label = "Administrative State"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "untriggered"
    prop._addConstant("triggered", "yes", 1)
    prop._addConstant("untriggered", "no", 0)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "annotation", "annotation", 37339, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5582, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dnldSeqNum", "dnldSeqNum", 61471, PropCategory.REGULAR)
    prop.label = "Download Sequence Num"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("dnldSeqNum", prop)

    prop = PropMeta("str", "downloadSt", "downloadSt", 59697, PropCategory.REGULAR)
    prop.label = "Download State"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "untriggered"
    prop._addConstant("triggered", "yes", 1)
    prop._addConstant("untriggered", "no", 0)
    meta.props.add("downloadSt", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 39478, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "graceful", "graceful", 36339, PropCategory.REGULAR)
    prop.label = "Graceful Maintenance"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("graceful", prop)

    prop = PropMeta("str", "ignoreCompat", "ignoreCompat", 39342, PropCategory.REGULAR)
    prop.label = "Ignore Compatibility"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("ignoreCompat", prop)

    prop = PropMeta("str", "internalLabel", "internalLabel", 39340, PropCategory.REGULAR)
    prop.label = "Internal Label"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("internalLabel", prop)

    prop = PropMeta("str", "internalSource", "internalSource", 45516, PropCategory.REGULAR)
    prop.label = "Internal Trigger Source"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("internalSource", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 13850, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "notifCond", "notifCond", 614, PropCategory.REGULAR)
    prop.label = "Notification Condition"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "notifyOnlyOnFailures"
    prop._addConstant("notifyAlwaysBetweenSets", "notifyalwaysbetweensets", 1)
    prop._addConstant("notifyNever", "notifynever", 2)
    prop._addConstant("notifyOnlyOnFailures", "notifyonlyonfailures", 0)
    meta.props.add("notifCond", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "runMode", "runMode", 613, PropCategory.REGULAR)
    prop.label = "Scheduler Run Mode"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "pauseOnlyOnFailures"
    prop._addConstant("pauseAlwaysBetweenSets", "pause-in-between-set-of-upgrades", 1)
    prop._addConstant("pauseNever", "do-not-pause-on-failure-and-do-not-wait-on-cluster-health", 2)
    prop._addConstant("pauseOnlyOnFailures", "pause-upon-upgrade-failure", 0)
    meta.props.add("runMode", prop)

    prop = PropMeta("str", "seqNum", "seqNum", 15995, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("seqNum", prop)

    prop = PropMeta("str", "srUpgrade", "srUpgrade", 52993, PropCategory.REGULAR)
    prop.label = "SR Upgrade"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("srUpgrade", prop)

    prop = PropMeta("str", "srVersion", "srVersion", 52992, PropCategory.REGULAR)
    prop.label = "SR Version"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("srVersion", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "triggerTime", "triggerTime", 1666, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("triggerTime", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    prop = PropMeta("str", "version", "version", 39339, PropCategory.REGULAR)
    prop.label = "Version"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("version", prop)

    prop = PropMeta("str", "versionCheckOverride", "versionCheckOverride", 39341, PropCategory.REGULAR)
    prop.label = "Version Check Override"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 3
    prop.defaultValueStr = "untriggered"
    prop._addConstant("trigger", "trigger", 1)
    prop._addConstant("trigger-immediate", "trigger-immediate", 0)
    prop._addConstant("triggered", "triggered", 2)
    prop._addConstant("untriggered", "untriggered", 3)
    meta.props.add("versionCheckOverride", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

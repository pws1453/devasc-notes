# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class UpgJob(Mo):
    """
    Specification for the maintenance policy enforcement status on a node. This object exists on every node where the policy is enforced.

    """

    meta = ClassMeta("cobra.model.maint.UpgJob")

    meta.moClassName = "maintUpgJob"
    meta.rnFormat = "upgjob"
    meta.category = MoCategory.REGULAR
    meta.label = "Maintenance Upgrade Job for a Node"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x80000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.maint.UpgJobFault")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.maint.NodeInMaint")
    meta.childClasses.add("cobra.model.maint.RsWindowStarted")

    meta.childNamesAndRnPrefix.append(("cobra.model.maint.RsWindowStarted", "rswindowStarted"))
    meta.childNamesAndRnPrefix.append(("cobra.model.maint.UpgJobFault", "upgjobfault"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.maint.NodeInMaint", "node-"))

    meta.parentClasses.add("cobra.model.firmware.FwStatusCont")
    meta.parentClasses.add("cobra.model.firmware.CtrlrFwStatusCont")

    meta.rnPrefixes = [
        ('upgjob', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "creationDate", "creationDate", 619, PropCategory.REGULAR)
    prop.label = "Timestamp"
    prop.isOper = True
    meta.props.add("creationDate", prop)

    prop = PropMeta("str", "desiredVersion", "desiredVersion", 631, PropCategory.REGULAR)
    prop.label = "Desired Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("desiredVersion", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dnldPercent", "dnldPercent", 57907, PropCategory.REGULAR)
    prop.label = "Download Percentage"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 100)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("dnldPercent", prop)

    prop = PropMeta("str", "dnldStatus", "dnldStatus", 57906, PropCategory.REGULAR)
    prop.label = "Download Status"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "not-queued"
    prop._addConstant("download-failed", "download-failed", 4)
    prop._addConstant("downloaded", "downloaded", 3)
    prop._addConstant("downloading", "downloading", 2)
    prop._addConstant("not-queued", "not-queued", 0)
    prop._addConstant("queued", "queued", 1)
    meta.props.add("dnldStatus", prop)

    prop = PropMeta("str", "dnldStatusStr", "dnldStatusStr", 57908, PropCategory.REGULAR)
    prop.label = "Download Status String"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("dnldStatusStr", prop)

    prop = PropMeta("str", "endDate", "endDate", 621, PropCategory.REGULAR)
    prop.label = "End Date"
    prop.isOper = True
    meta.props.add("endDate", prop)

    prop = PropMeta("str", "fwGrp", "fwGrp", 630, PropCategory.REGULAR)
    prop.label = "Firmware Group Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("fwGrp", prop)

    prop = PropMeta("str", "fwPolName", "fwPolName", 627, PropCategory.REGULAR)
    prop.label = "Firmware Policy Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("fwPolName", prop)

    prop = PropMeta("str", "grpPriKey", "grpPriKey", 616, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("grpPriKey", prop)

    prop = PropMeta("str", "iUrl", "iUrl", 624, PropCategory.REGULAR)
    prop.label = "Internal URL"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("iUrl", prop)

    prop = PropMeta("str", "installId", "installId", 623, PropCategory.REGULAR)
    prop.label = "Instal Id"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("installId", prop)

    prop = PropMeta("str", "installStage", "installStage", 618, PropCategory.REGULAR)
    prop.label = "Install Stage"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "InstallNotStarted"
    prop._addConstant("InstallNotStarted", "ready-for-next-upgrade", 0)
    prop._addConstant("ctrlrAtomixUpgradePhase", "performing-upgrade", 7)
    prop._addConstant("ctrlrDataconversionStarted", "migrating-configuration", 9)
    prop._addConstant("ctrlrImageExtraction", "controller-image-extraction", 4)
    prop._addConstant("ctrlrImageVerification", "controller-image-verification", 2)
    prop._addConstant("ctrlrInstallerExecuted", "checking-compatibility", 6)
    prop._addConstant("ctrlrPartitionVerification", "controller-partition-verification", 3)
    prop._addConstant("ctrlrPreUpgradePhase", "checking-controller-health", 1)
    prop._addConstant("ctrlrUpdatingBootorder", "updating-grub/efiboot-boot-manager", 5)
    prop._addConstant("ctrlrWaitingForApicsAhead", "waiting-for-other-controllers-to-upgrade", 8)
    prop._addConstant("switchCopyImage", "copying-images", 10)
    prop._addConstant("switchExtracting", "extracting", 12)
    prop._addConstant("switchInitializing", "initializing", 11)
    prop._addConstant("switchPerformReboot", "performing-reboot", 20)
    prop._addConstant("switchRuntimeCheck", "performing-runtime-checks", 16)
    prop._addConstant("switchSrgCollect", "srg-collection", 14)
    prop._addConstant("switchSrgProcessing", "srg-processing", 15)
    prop._addConstant("switchSyncImage", "syncing-images", 17)
    prop._addConstant("switchUpgFex", "upgrading-fex", 19)
    prop._addConstant("switchUpgLcImage", "upgrading-linecard", 18)
    prop._addConstant("switchVerifying", "verification-of-images", 13)
    meta.props.add("installStage", prop)

    prop = PropMeta("str", "instlProgPct", "instlProgPct", 633, PropCategory.REGULAR)
    prop.label = "Install Stage"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 100)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("instlProgPct", prop)

    prop = PropMeta("str", "internalLabel", "internalLabel", 622, PropCategory.REGULAR)
    prop.label = "Internal Label"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("internalLabel", prop)

    prop = PropMeta("str", "lastInstallDate", "lastInstallDate", 39403, PropCategory.REGULAR)
    prop.label = "Last Install Date"
    prop.isOper = True
    meta.props.add("lastInstallDate", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "maintGrp", "maintGrp", 629, PropCategory.REGULAR)
    prop.label = "Maintenance Group Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("maintGrp", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 13847, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "numAttempts", "numAttempts", 625, PropCategory.REGULAR)
    prop.label = "Number of Install Attempts"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("numAttempts", prop)

    prop = PropMeta("str", "numAttemptsToBootupReady", "numAttemptsToBootupReady", 22170, PropCategory.REGULAR)
    prop.label = "Number of attempts to bootup ready"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("numAttemptsToBootupReady", prop)

    prop = PropMeta("str", "polName", "polName", 626, PropCategory.REGULAR)
    prop.label = "Maintenance Policy Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("polName", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "scheduler", "scheduler", 628, PropCategory.REGULAR)
    prop.label = "Scheduler Policy Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("scheduler", prop)

    prop = PropMeta("str", "srDesiredVer", "srDesiredVer", 52994, PropCategory.REGULAR)
    prop.label = "SR Desired Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("srDesiredVer", prop)

    prop = PropMeta("str", "srUpg", "srUpg", 52995, PropCategory.REGULAR)
    prop.label = "SR Upgrade"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("srUpg", prop)

    prop = PropMeta("str", "startDate", "startDate", 620, PropCategory.REGULAR)
    prop.label = "Start Date"
    prop.isOper = True
    meta.props.add("startDate", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "upgradeStatus", "upgradeStatus", 617, PropCategory.REGULAR)
    prop.label = "Upgrade Status"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "scheduled"
    prop._addConstant("completenok", "failed", 5)
    prop._addConstant("completeok", "completed-successfully", 4)
    prop._addConstant("downloadimgmmode", "downloading-image-in-maintenance-mode", 10)
    prop._addConstant("incompatible", "failed-due-to-incompatible-desired-version", 7)
    prop._addConstant("inprogress", "in-progress", 2)
    prop._addConstant("inqueue", "in-queue", 1)
    prop._addConstant("inretryqueue", "queued-for-retry", 8)
    prop._addConstant("notscheduled", "no-maintenance-scheduled", 6)
    prop._addConstant("scheduled", "scheduled", 0)
    prop._addConstant("waitonbootup", "waiting-on-bootup-completion", 9)
    meta.props.add("upgradeStatus", prop)

    prop = PropMeta("str", "upgradeStatusStr", "upgradeStatusStr", 632, PropCategory.REGULAR)
    prop.label = "Update Status Additional Information"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("upgradeStatusStr", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

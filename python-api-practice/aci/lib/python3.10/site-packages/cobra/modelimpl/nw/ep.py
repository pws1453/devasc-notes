# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Ep(Mo):
    meta = ClassMeta("cobra.model.nw.Ep")

    meta.isAbstract = True
    meta.moClassName = "nwEp"


    meta.moClassName = "nwEp"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "Endpoint"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.Item")

    meta.concreteSubClasses.add("cobra.model.l3.LbRtdIf")
    meta.concreteSubClasses.add("cobra.model.isis.If")
    meta.concreteSubClasses.add("cobra.model.pim.If")
    meta.concreteSubClasses.add("cobra.model.epm.DTEp")
    meta.concreteSubClasses.add("cobra.model.ipv4.L3AnycastEP")
    meta.concreteSubClasses.add("cobra.model.nd.AdjEp")
    meta.concreteSubClasses.add("cobra.model.hsrp.If")
    meta.concreteSubClasses.add("cobra.model.ipv4.NlbVip")
    meta.concreteSubClasses.add("cobra.model.l2.FcAggrIf")
    meta.concreteSubClasses.add("cobra.model.eigrp.AdjEp")
    meta.concreteSubClasses.add("cobra.model.udld.AdjEp")
    meta.concreteSubClasses.add("cobra.model.l3.EncRtdIf")
    meta.concreteSubClasses.add("cobra.model.arp.SvcAdjEp")
    meta.concreteSubClasses.add("cobra.model.l3.RtdIf")
    meta.concreteSubClasses.add("cobra.model.pc.AggrIf")
    meta.concreteSubClasses.add("cobra.model.bgp.DTEp")
    meta.concreteSubClasses.add("cobra.model.l2.VfcIf")
    meta.concreteSubClasses.add("cobra.model.nw.PathEp")
    meta.concreteSubClasses.add("cobra.model.macsec.If")
    meta.concreteSubClasses.add("cobra.model.macsec.FabIf")
    meta.concreteSubClasses.add("cobra.model.dhcp.RelayIf")
    meta.concreteSubClasses.add("cobra.model.lldp.If")
    meta.concreteSubClasses.add("cobra.model.ospfv3.If")
    meta.concreteSubClasses.add("cobra.model.hcl1.PhysicalIf")
    meta.concreteSubClasses.add("cobra.model.mcp.If")
    meta.concreteSubClasses.add("cobra.model.bgp.LocalAsn")
    meta.concreteSubClasses.add("cobra.model.cnw.PhysIf")
    meta.concreteSubClasses.add("cobra.model.l3.IpEp")
    meta.concreteSubClasses.add("cobra.model.coop.CitizenAdj")
    meta.concreteSubClasses.add("cobra.model.mld.ExtIf")
    meta.concreteSubClasses.add("cobra.model.l2.L2AnycastEP")
    meta.concreteSubClasses.add("cobra.model.l2.InbandIf")
    meta.concreteSubClasses.add("cobra.model.l2.MacEp")
    meta.concreteSubClasses.add("cobra.model.lacp.AdjEp")
    meta.concreteSubClasses.add("cobra.model.igmpsnoop.StRtrIf")
    meta.concreteSubClasses.add("cobra.model.ospfv3.AdjEp")
    meta.concreteSubClasses.add("cobra.model.dot1x.If")
    meta.concreteSubClasses.add("cobra.model.l2.FcBrIf")
    meta.concreteSubClasses.add("cobra.model.svi.If")
    meta.concreteSubClasses.add("cobra.model.poe.If")
    meta.concreteSubClasses.add("cobra.model.udld.If")
    meta.concreteSubClasses.add("cobra.model.arp.StAdjEp")
    meta.concreteSubClasses.add("cobra.model.pim6.AdjEp")
    meta.concreteSubClasses.add("cobra.model.dhcp.ServerIf")
    meta.concreteSubClasses.add("cobra.model.pc.FcAggrIf")
    meta.concreteSubClasses.add("cobra.model.regress.If")
    meta.concreteSubClasses.add("cobra.model.ipv6.NlbVip")
    meta.concreteSubClasses.add("cobra.model.l2.CfgMacEp")
    meta.concreteSubClasses.add("cobra.model.mldsnoop.StRtrIf")
    meta.concreteSubClasses.add("cobra.model.unifiedports.If")
    meta.concreteSubClasses.add("cobra.model.icmpv6.If")
    meta.concreteSubClasses.add("cobra.model.hctunn.If")
    meta.concreteSubClasses.add("cobra.model.icmpv4.If")
    meta.concreteSubClasses.add("cobra.model.ipv6.If")
    meta.concreteSubClasses.add("cobra.model.coop.ConCitizenAdj")
    meta.concreteSubClasses.add("cobra.model.coop.OracleAdj")
    meta.concreteSubClasses.add("cobra.model.mld.If")
    meta.concreteSubClasses.add("cobra.model.pim.AdjEp")
    meta.concreteSubClasses.add("cobra.model.cloudsec.If")
    meta.concreteSubClasses.add("cobra.model.nd.If")
    meta.concreteSubClasses.add("cobra.model.nd.StAdjEp")
    meta.concreteSubClasses.add("cobra.model.arp.If")
    meta.concreteSubClasses.add("cobra.model.svccopy.DTEp")
    meta.concreteSubClasses.add("cobra.model.opflexp.Ep")
    meta.concreteSubClasses.add("cobra.model.l2.ExtIf")
    meta.concreteSubClasses.add("cobra.model.igmp.ExtIf")
    meta.concreteSubClasses.add("cobra.model.isis.AdjEp")
    meta.concreteSubClasses.add("cobra.model.hcbgp.Peer")
    meta.concreteSubClasses.add("cobra.model.coop.Ep")
    meta.concreteSubClasses.add("cobra.model.arp.AdjEp")
    meta.concreteSubClasses.add("cobra.model.fv.PathEp")
    meta.concreteSubClasses.add("cobra.model.hcbgp.LocalAsn")
    meta.concreteSubClasses.add("cobra.model.cdp.If")
    meta.concreteSubClasses.add("cobra.model.cdp.AdjEp")
    meta.concreteSubClasses.add("cobra.model.l1.PhysIf")
    meta.concreteSubClasses.add("cobra.model.tunnel.If")
    meta.concreteSubClasses.add("cobra.model.edm.LeafInterfacePathEp")
    meta.concreteSubClasses.add("cobra.model.pim6.If")
    meta.concreteSubClasses.add("cobra.model.bfd.If")
    meta.concreteSubClasses.add("cobra.model.hcbdi.If")
    meta.concreteSubClasses.add("cobra.model.coop.DTEp")
    meta.concreteSubClasses.add("cobra.model.eigrp.If")
    meta.concreteSubClasses.add("cobra.model.stp.If")
    meta.concreteSubClasses.add("cobra.model.ipv4.If")
    meta.concreteSubClasses.add("cobra.model.ospf.If")
    meta.concreteSubClasses.add("cobra.model.mgmt.MgmtIf")
    meta.concreteSubClasses.add("cobra.model.hcnve.If")
    meta.concreteSubClasses.add("cobra.model.cnw.AggrIf")
    meta.concreteSubClasses.add("cobra.model.mgmt.RtdMgmtIf")
    meta.concreteSubClasses.add("cobra.model.ospf.AdjEp")
    meta.concreteSubClasses.add("cobra.model.l1.VethIf")
    meta.concreteSubClasses.add("cobra.model.nd.SvcAdjEp")
    meta.concreteSubClasses.add("cobra.model.isis.ExtIf")
    meta.concreteSubClasses.add("cobra.model.hcl3.RoutedIf")
    meta.concreteSubClasses.add("cobra.model.ipv6.L3AnycastEP")
    meta.concreteSubClasses.add("cobra.model.dhcp.ClientIf")
    meta.concreteSubClasses.add("cobra.model.ptp.If")
    meta.concreteSubClasses.add("cobra.model.dhcp.PseudoIf")
    meta.concreteSubClasses.add("cobra.model.bgp.Peer")
    meta.concreteSubClasses.add("cobra.model.lacp.If")
    meta.concreteSubClasses.add("cobra.model.bgp.PeerEntry")
    meta.concreteSubClasses.add("cobra.model.edm.LldpAdjEp")
    meta.concreteSubClasses.add("cobra.model.isis.DTEp")
    meta.concreteSubClasses.add("cobra.model.lldp.AdjEp")
    meta.concreteSubClasses.add("cobra.model.edm.CdpAdjEp")
    meta.concreteSubClasses.add("cobra.model.nw.LabelEp")
    meta.concreteSubClasses.add("cobra.model.l2.BrIf")
    meta.concreteSubClasses.add("cobra.model.l1.FcPhysIf")
    meta.concreteSubClasses.add("cobra.model.igmp.If")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "name", "name", 16432, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

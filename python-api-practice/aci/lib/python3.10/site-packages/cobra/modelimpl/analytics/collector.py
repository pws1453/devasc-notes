# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Collector(Mo):
    """
     Flow Collector 

    """

    meta = ClassMeta("cobra.model.analytics.Collector")

    meta.moClassName = "analyticsCollector"
    meta.rnFormat = "collector-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Collector entry"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.analytics.ExportHist1w")
    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.analytics.Dropped1mo")
    meta.childClasses.add("cobra.model.analytics.ExportHist1h")
    meta.childClasses.add("cobra.model.analytics.RtCollectorAtt")
    meta.childClasses.add("cobra.model.analytics.ExportHist15min")
    meta.childClasses.add("cobra.model.analytics.DroppedHist1d")
    meta.childClasses.add("cobra.model.analytics.Export1d")
    meta.childClasses.add("cobra.model.analytics.Export1h")
    meta.childClasses.add("cobra.model.analytics.Dropped5min")
    meta.childClasses.add("cobra.model.analytics.DroppedHist1h")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.analytics.Dropped1year")
    meta.childClasses.add("cobra.model.analytics.DroppedHist1w")
    meta.childClasses.add("cobra.model.analytics.Dropped1qtr")
    meta.childClasses.add("cobra.model.analytics.Export1w")
    meta.childClasses.add("cobra.model.analytics.Export1year")
    meta.childClasses.add("cobra.model.analytics.DroppedHist1year")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.analytics.ExportHist1year")
    meta.childClasses.add("cobra.model.analytics.Dropped1d")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.analytics.Export1mo")
    meta.childClasses.add("cobra.model.analytics.Export5min")
    meta.childClasses.add("cobra.model.analytics.ExportHist1qtr")
    meta.childClasses.add("cobra.model.analytics.DroppedHist5min")
    meta.childClasses.add("cobra.model.analytics.DroppedHist1mo")
    meta.childClasses.add("cobra.model.analytics.Export1qtr")
    meta.childClasses.add("cobra.model.analytics.ExportHist5min")
    meta.childClasses.add("cobra.model.analytics.DroppedHist1qtr")
    meta.childClasses.add("cobra.model.analytics.Dropped15min")
    meta.childClasses.add("cobra.model.analytics.ExportHist1mo")
    meta.childClasses.add("cobra.model.analytics.Export15min")
    meta.childClasses.add("cobra.model.analytics.DroppedHist15min")
    meta.childClasses.add("cobra.model.analytics.Dropped1h")
    meta.childClasses.add("cobra.model.analytics.Dropped1w")
    meta.childClasses.add("cobra.model.tag.Annotation")
    meta.childClasses.add("cobra.model.analytics.ExportHist1d")

    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.DroppedHist1year", "HDanalyticsDropped1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.DroppedHist15min", "HDanalyticsDropped15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.ExportHist15min", "HDanalyticsExport15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Dropped1year", "CDanalyticsDropped1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.ExportHist1year", "HDanalyticsExport1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.DroppedHist5min", "HDanalyticsDropped5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.DroppedHist1qtr", "HDanalyticsDropped1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Dropped15min", "CDanalyticsDropped15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Dropped5min", "CDanalyticsDropped5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Dropped1qtr", "CDanalyticsDropped1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Export1year", "CDanalyticsExport1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.ExportHist1qtr", "HDanalyticsExport1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.DroppedHist1mo", "HDanalyticsDropped1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.ExportHist5min", "HDanalyticsExport5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Export15min", "CDanalyticsExport15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Dropped1mo", "CDanalyticsDropped1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.DroppedHist1d", "HDanalyticsDropped1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.DroppedHist1h", "HDanalyticsDropped1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.DroppedHist1w", "HDanalyticsDropped1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Export5min", "CDanalyticsExport5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Export1qtr", "CDanalyticsExport1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.ExportHist1mo", "HDanalyticsExport1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.ExportHist1w", "HDanalyticsExport1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.ExportHist1h", "HDanalyticsExport1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Dropped1d", "CDanalyticsDropped1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Export1mo", "CDanalyticsExport1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Dropped1h", "CDanalyticsDropped1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Dropped1w", "CDanalyticsDropped1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.ExportHist1d", "HDanalyticsExport1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Export1d", "CDanalyticsExport1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Export1h", "CDanalyticsExport1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.Export1w", "CDanalyticsExport1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.RtCollectorAtt", "rtcollectorAtt-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.analytics.Inst")

    meta.superClasses.add("cobra.model.analytics.RemoteNode")
    meta.superClasses.add("cobra.model.pol.Instr")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")

    meta.rnPrefixes = [
        ('collector-', True),
    ]

    prop = PropMeta("str", "annotation", "annotation", 38514, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 26171, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dscp", "dscp", 26145, PropCategory.REGULAR)
    prop.label = "DSCP Value"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop._addConstant("AF11", "af11-low-drop", 10)
    prop._addConstant("AF12", "af12-medium-drop", 12)
    prop._addConstant("AF13", "af13-high-drop", 14)
    prop._addConstant("AF21", "af21-low-drop", 18)
    prop._addConstant("AF22", "af22-medium-drop", 20)
    prop._addConstant("AF23", "af23-high-drop", 22)
    prop._addConstant("AF31", "af31-low-drop", 26)
    prop._addConstant("AF32", "af32-medium-drop", 28)
    prop._addConstant("AF33", "af33-high-drop", 30)
    prop._addConstant("AF41", "af41-low-drop", 34)
    prop._addConstant("AF42", "af42-medium-drop", 36)
    prop._addConstant("AF43", "af43-high-drop", 38)
    prop._addConstant("CS0", "cs0", 0)
    prop._addConstant("CS1", "cs1", 8)
    prop._addConstant("CS2", "cs2", 16)
    prop._addConstant("CS3", "cs3", 24)
    prop._addConstant("CS4", "cs4", 32)
    prop._addConstant("CS5", "cs5", 40)
    prop._addConstant("CS6", "cs6", 48)
    prop._addConstant("CS7", "cs7", 56)
    prop._addConstant("EF", "expedited-forwarding", 46)
    prop._addConstant("VA", "voice-admit", 44)
    meta.props.add("dscp", prop)

    prop = PropMeta("str", "dstAddr", "dstAddr", 26143, PropCategory.REGULAR)
    prop.label = "Remote Entity IP"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("dstAddr", prop)

    prop = PropMeta("str", "dstPort", "dstPort", 26144, PropCategory.REGULAR)
    prop.label = "Remote Entity L4 Port"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("dns", "dns", 53)
    prop._addConstant("ftpData", "ftp-data", 20)
    prop._addConstant("http", "http", 80)
    prop._addConstant("https", "https", 443)
    prop._addConstant("pop3", "pop3", 110)
    prop._addConstant("rtsp", "rtsp", 554)
    prop._addConstant("smtp", "smtp", 25)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("dstPort", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 40653, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 27016, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 26180, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "nfmCfgFailedBmp", "nfmCfgFailedBmp", 28033, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop._addConstant("analytics:Collectorannotation_failed_flag", None, 512)
    prop._addConstant("analytics:Collectordescr_failed_flag", None, 4)
    prop._addConstant("analytics:Collectordscp_failed_flag", None, 8)
    prop._addConstant("analytics:CollectordstAddr_failed_flag", None, 16)
    prop._addConstant("analytics:CollectordstPort_failed_flag", None, 32)
    prop._addConstant("analytics:CollectorextMngdBy_failed_flag", None, 1024)
    prop._addConstant("analytics:CollectorlcOwn_failed_flag", None, -9223372036854775808)
    prop._addConstant("analytics:CollectormodTs_failed_flag", None, 2305843009213693952)
    prop._addConstant("analytics:CollectormonPolDn_failed_flag", None, 2048)
    prop._addConstant("analytics:CollectornameAlias_failed_flag", None, 2)
    prop._addConstant("analytics:Collectorname_failed_flag", None, 1)
    prop._addConstant("analytics:CollectorsrcAddr_failed_flag", None, 64)
    prop._addConstant("analytics:CollectorsrcIf_failed_flag", None, 128)
    prop._addConstant("analytics:Collectoruid_failed_flag", None, 4611686018427387904)
    prop._addConstant("analytics:Collectorver_failed_flag", None, 131072)
    prop._addConstant("analytics:CollectorvrfName_failed_flag", None, 256)
    meta.props.add("nfmCfgFailedBmp", prop)

    prop = PropMeta("str", "nfmCfgFailedTs", "nfmCfgFailedTs", 28035, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("nfmCfgFailedTs", prop)

    prop = PropMeta("str", "nfmCfgState", "nfmCfgState", 28034, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("nfmCfgState", prop)

    prop = PropMeta("str", "operSt", "operSt", 28031, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "disabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    prop._addConstant("undefined", "not-applicable", 0)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 28032, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier"
    prop.isOper = True
    prop._addConstant("collector-dest-unreachable", "collector-destination-host-unreachable", 128)
    prop._addConstant("collector-limit-exceeded", "version-9-collector-limit-exceeded", 64)
    prop._addConstant("configured-params-mismatch", "configured-parameters-mismatch", 32)
    prop._addConstant("feature-prio-mismatch", "feature-priority-mismatch", 16)
    prop._addConstant("hwprog-fail", "hardware-programming-failed", 1)
    prop._addConstant("hwprog-fail-tcam-full", "hardware-programming-failed-as-tcam-was-full", 4)
    prop._addConstant("platform-unsupported", "platorm-not-supported", 8)
    prop._addConstant("swprog-fail", "software-programming-failed", 2)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "srcAddr", "srcAddr", 26261, PropCategory.REGULAR)
    prop.label = "Source IP Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("srcAddr", prop)

    prop = PropMeta("str", "srcIf", "srcIf", 26146, PropCategory.REGULAR)
    prop.label = "Source Interface"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("srcIf", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    prop = PropMeta("str", "ver", "ver", 26149, PropCategory.REGULAR)
    prop.label = "Collector Version Format"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 3
    prop.defaultValueStr = "cisco-v1"
    prop._addConstant("cisco-v1", "cisco-proprietary-version-1", 3)
    prop._addConstant("v5", "version-5", 1)
    prop._addConstant("v9", "version-9", 2)
    meta.props.add("ver", prop)

    prop = PropMeta("str", "vrfName", "vrfName", 26142, PropCategory.REGULAR)
    prop.label = "Remote Entity VRF"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("vrfName", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

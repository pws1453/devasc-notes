# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class ExportHist1year(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.analytics.ExportHist1year", "Netflow Export Counters")

    counter = CounterMeta("templates", CounterCategory.COUNTER, "records", "Exported Templates")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "templatesCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "templatesPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "templatesMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "templatesMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "templatesAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "templatesSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "templatesThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "templatesTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "templatesRate"
    meta._counters.append(counter)

    counter = CounterMeta("bytes", CounterCategory.COUNTER, "bytes", "Exported Bytes")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "bytesCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "bytesPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "bytesMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "bytesMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "bytesAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "bytesSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "bytesThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "bytesTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "bytesRate"
    meta._counters.append(counter)

    counter = CounterMeta("packets", CounterCategory.COUNTER, "packets", "Exported Packets")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "packetsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "packetsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "packetsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "packetsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "packetsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "packetsSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "packetsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "packetsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "packetsRate"
    meta._counters.append(counter)

    counter = CounterMeta("flowRecords", CounterCategory.COUNTER, "records", "Exported Flow Records")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "flowRecordsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "flowRecordsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "flowRecordsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "flowRecordsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "flowRecordsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "flowRecordsSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "flowRecordsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "flowRecordsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "flowRecordsRate"
    meta._counters.append(counter)

    meta.moClassName = "analyticsExportHist1year"
    meta.rnFormat = "HDanalyticsExport1year-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical Netflow Export Counters stats in 1 year"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.analytics.Collector")

    meta.superClasses.add("cobra.model.analytics.ExportHist")
    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Hist")

    meta.rnPrefixes = [
        ('HDanalyticsExport1year-', True),
    ]

    prop = PropMeta("str", "bytesAvg", "bytesAvg", 28167, PropCategory.IMPLICIT_AVG)
    prop.label = "Exported Bytes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesAvg", prop)

    prop = PropMeta("str", "bytesCum", "bytesCum", 28163, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Exported Bytes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesCum", prop)

    prop = PropMeta("str", "bytesMax", "bytesMax", 28166, PropCategory.IMPLICIT_MAX)
    prop.label = "Exported Bytes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesMax", prop)

    prop = PropMeta("str", "bytesMin", "bytesMin", 28165, PropCategory.IMPLICIT_MIN)
    prop.label = "Exported Bytes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesMin", prop)

    prop = PropMeta("str", "bytesPer", "bytesPer", 28164, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Exported Bytes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesPer", prop)

    prop = PropMeta("str", "bytesRate", "bytesRate", 28171, PropCategory.IMPLICIT_RATE)
    prop.label = "Exported Bytes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesRate", prop)

    prop = PropMeta("str", "bytesSpct", "bytesSpct", 28168, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Exported Bytes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesSpct", prop)

    prop = PropMeta("str", "bytesThr", "bytesThr", 28169, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Exported Bytes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("bytesThr", prop)

    prop = PropMeta("str", "bytesTr", "bytesTr", 28170, PropCategory.IMPLICIT_TREND)
    prop.label = "Exported Bytes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("bytesTr", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "flowRecordsAvg", "flowRecordsAvg", 28188, PropCategory.IMPLICIT_AVG)
    prop.label = "Exported Flow Records average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flowRecordsAvg", prop)

    prop = PropMeta("str", "flowRecordsCum", "flowRecordsCum", 28184, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Exported Flow Records cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flowRecordsCum", prop)

    prop = PropMeta("str", "flowRecordsMax", "flowRecordsMax", 28187, PropCategory.IMPLICIT_MAX)
    prop.label = "Exported Flow Records maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flowRecordsMax", prop)

    prop = PropMeta("str", "flowRecordsMin", "flowRecordsMin", 28186, PropCategory.IMPLICIT_MIN)
    prop.label = "Exported Flow Records minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flowRecordsMin", prop)

    prop = PropMeta("str", "flowRecordsPer", "flowRecordsPer", 28185, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Exported Flow Records periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flowRecordsPer", prop)

    prop = PropMeta("str", "flowRecordsRate", "flowRecordsRate", 28192, PropCategory.IMPLICIT_RATE)
    prop.label = "Exported Flow Records rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flowRecordsRate", prop)

    prop = PropMeta("str", "flowRecordsSpct", "flowRecordsSpct", 28189, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Exported Flow Records suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flowRecordsSpct", prop)

    prop = PropMeta("str", "flowRecordsThr", "flowRecordsThr", 28190, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Exported Flow Records thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("flowRecordsThr", prop)

    prop = PropMeta("str", "flowRecordsTr", "flowRecordsTr", 28191, PropCategory.IMPLICIT_TREND)
    prop.label = "Exported Flow Records trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("flowRecordsTr", prop)

    prop = PropMeta("str", "index", "index", 28086, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "packetsAvg", "packetsAvg", 28209, PropCategory.IMPLICIT_AVG)
    prop.label = "Exported Packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("packetsAvg", prop)

    prop = PropMeta("str", "packetsCum", "packetsCum", 28205, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Exported Packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("packetsCum", prop)

    prop = PropMeta("str", "packetsMax", "packetsMax", 28208, PropCategory.IMPLICIT_MAX)
    prop.label = "Exported Packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("packetsMax", prop)

    prop = PropMeta("str", "packetsMin", "packetsMin", 28207, PropCategory.IMPLICIT_MIN)
    prop.label = "Exported Packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("packetsMin", prop)

    prop = PropMeta("str", "packetsPer", "packetsPer", 28206, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Exported Packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("packetsPer", prop)

    prop = PropMeta("str", "packetsRate", "packetsRate", 28213, PropCategory.IMPLICIT_RATE)
    prop.label = "Exported Packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("packetsRate", prop)

    prop = PropMeta("str", "packetsSpct", "packetsSpct", 28210, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Exported Packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("packetsSpct", prop)

    prop = PropMeta("str", "packetsThr", "packetsThr", 28211, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Exported Packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("packetsThr", prop)

    prop = PropMeta("str", "packetsTr", "packetsTr", 28212, PropCategory.IMPLICIT_TREND)
    prop.label = "Exported Packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("packetsTr", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "templatesAvg", "templatesAvg", 28230, PropCategory.IMPLICIT_AVG)
    prop.label = "Exported Templates average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("templatesAvg", prop)

    prop = PropMeta("str", "templatesCum", "templatesCum", 28226, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Exported Templates cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("templatesCum", prop)

    prop = PropMeta("str", "templatesMax", "templatesMax", 28229, PropCategory.IMPLICIT_MAX)
    prop.label = "Exported Templates maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("templatesMax", prop)

    prop = PropMeta("str", "templatesMin", "templatesMin", 28228, PropCategory.IMPLICIT_MIN)
    prop.label = "Exported Templates minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("templatesMin", prop)

    prop = PropMeta("str", "templatesPer", "templatesPer", 28227, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Exported Templates periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("templatesPer", prop)

    prop = PropMeta("str", "templatesRate", "templatesRate", 28234, PropCategory.IMPLICIT_RATE)
    prop.label = "Exported Templates rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("templatesRate", prop)

    prop = PropMeta("str", "templatesSpct", "templatesSpct", 28231, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Exported Templates suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("templatesSpct", prop)

    prop = PropMeta("str", "templatesThr", "templatesThr", 28232, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Exported Templates thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("templatesThr", prop)

    prop = PropMeta("str", "templatesTr", "templatesTr", 28233, PropCategory.IMPLICIT_TREND)
    prop.label = "Exported Templates trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("templatesTr", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

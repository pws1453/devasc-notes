# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Statistics(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.analytics.Statistics")

    meta.moClassName = "analyticsStatistics"
    meta.rnFormat = "statistics"
    meta.category = MoCategory.REGULAR
    meta.label = "Analytics Statistics"
    meta.writeAccessMask = 0x800081800000001
    meta.readAccessMask = 0x800081800000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.analytics.Inst")

    meta.rnPrefixes = [
        ('statistics', False),
    ]

    prop = PropMeta("str", "Export", "Export", 33166, PropCategory.REGULAR)
    prop.label = "Export Counters"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("Export", prop)

    prop = PropMeta("str", "FlowCreateCe", "FlowCreateCe", 33159, PropCategory.REGULAR)
    prop.label = "Flow Create CE Counters"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("FlowCreateCe", prop)

    prop = PropMeta("str", "FlowCreateIPv4", "FlowCreateIPv4", 33160, PropCategory.REGULAR)
    prop.label = "Flow Create IPv4 Counters"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("FlowCreateIPv4", prop)

    prop = PropMeta("str", "FlowCreateIPv6", "FlowCreateIPv6", 33161, PropCategory.REGULAR)
    prop.label = "Flow Create IPv6 Counters"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("FlowCreateIPv6", prop)

    prop = PropMeta("str", "FlowHitCe", "FlowHitCe", 33162, PropCategory.REGULAR)
    prop.label = "Flow Hit CE Counters"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("FlowHitCe", prop)

    prop = PropMeta("str", "FlowHitIPv4", "FlowHitIPv4", 33163, PropCategory.REGULAR)
    prop.label = "Flow Hit IPv4 Counters"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("FlowHitIPv4", prop)

    prop = PropMeta("str", "FlowHitIPv6", "FlowHitIPv6", 33164, PropCategory.REGULAR)
    prop.label = "Flow Hit IPv6 Counters"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("FlowHitIPv6", prop)

    prop = PropMeta("str", "PacketsSeen", "PacketsSeen", 33165, PropCategory.REGULAR)
    prop.label = "Packets Seen"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("PacketsSeen", prop)

    prop = PropMeta("str", "SkipCollect", "SkipCollect", 33167, PropCategory.REGULAR)
    prop.label = "Skip Collect Counters"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("SkipCollect", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollectTs", "lastCollectTs", 33168, PropCategory.REGULAR)
    prop.label = "Last collection timestamp"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("lastCollectTs", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

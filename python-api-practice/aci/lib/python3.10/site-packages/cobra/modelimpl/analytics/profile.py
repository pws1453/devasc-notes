# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Profile(Mo):
    """
     Analytics profile 

    """

    meta = ClassMeta("cobra.model.analytics.Profile")

    meta.moClassName = "analyticsProfile"
    meta.rnFormat = "prof-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Profile"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.analytics.RtProfAtt")
    meta.childClasses.add("cobra.model.analytics.PayloadLenBin")
    meta.childClasses.add("cobra.model.analytics.RcvWindowSzBin")
    meta.childClasses.add("cobra.model.analytics.TCPOptHdrLenBin")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.TCPOptHdrLenBin", "tcpopthdrlenbin-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.RcvWindowSzBin", "rcvwindowszbin-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.PayloadLenBin", "payloadlenbin-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.analytics.RtProfAtt", "rtprofAtt-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.analytics.Inst")

    meta.superClasses.add("cobra.model.pol.Instr")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")

    meta.rnPrefixes = [
        ('prof-', True),
    ]

    prop = PropMeta("str", "annotation", "annotation", 38518, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "burstIntvlShift", "burstIntvlShift", 26158, PropCategory.REGULAR)
    prop.label = "Timestamp Shift Value for Burst Interval"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("burstIntvlShift", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "collectIntvl", "collectIntvl", 26155, PropCategory.REGULAR)
    prop.label = "Collect Interval in Milliseconds"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(100, 64000)]
    prop.defaultValue = 100
    prop.defaultValueStr = "100"
    meta.props.add("collectIntvl", prop)

    prop = PropMeta("str", "descr", "descr", 26175, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 40657, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "ipPktIdShift", "ipPktIdShift", 26157, PropCategory.REGULAR)
    prop.label = "IP Packet Id Shift"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("ipPktIdShift", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "mtu", "mtu", 26159, PropCategory.REGULAR)
    prop.label = "MTU"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(576, 9216)]
    prop.defaultValue = 1500
    prop.defaultValueStr = "1500"
    meta.props.add("mtu", prop)

    prop = PropMeta("str", "name", "name", 26182, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "netflowCollectorIntvl", "netflowCollectorIntvl", 28563, PropCategory.REGULAR)
    prop.label = "Collection Interval in Seconds"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(60, 36000)]
    prop.defaultValue = 60
    prop.defaultValueStr = "60"
    meta.props.add("netflowCollectorIntvl", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "seqNumGuessThreshHi", "seqNumGuessThreshHi", 26161, PropCategory.REGULAR)
    prop.label = "Sequence Number Guess Threshold High"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 4294967295)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("seqNumGuessThreshHi", prop)

    prop = PropMeta("str", "seqNumGuessThreshLo", "seqNumGuessThreshLo", 26160, PropCategory.REGULAR)
    prop.label = "Sequence Number Guess Threshold Low"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 4294967295)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("seqNumGuessThreshLo", prop)

    prop = PropMeta("str", "srcPort", "srcPort", 26156, PropCategory.REGULAR)
    prop.label = "Source L4 Port"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 65535)]
    meta.props.add("srcPort", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "templateIntvl", "templateIntvl", 28491, PropCategory.REGULAR)
    prop.label = "Template Interval in Seconds"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(60, 64000)]
    prop.defaultValue = 300
    prop.defaultValueStr = "300"
    meta.props.add("templateIntvl", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

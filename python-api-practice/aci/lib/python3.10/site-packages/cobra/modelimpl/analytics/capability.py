# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Capability(Mo):
    """
     Platform capability informations 

    """

    meta = ClassMeta("cobra.model.analytics.Capability")

    meta.moClassName = "analyticsCapability"
    meta.rnFormat = "capability"
    meta.category = MoCategory.REGULAR
    meta.label = "Capability Information"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.analytics.Inst")

    meta.rnPrefixes = [
        ('capability', False),
    ]

    prop = PropMeta("str", "bucketHashWidth", "bucketHashWidth", 27057, PropCategory.REGULAR)
    prop.label = "Bit Width of the Collector Bucket Hash"
    prop.isOper = True
    prop.range = [(1, 255)]
    prop.defaultValue = 12
    prop.defaultValueStr = "12"
    meta.props.add("bucketHashWidth", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "configLatencyResFactor", "configLatencyResFactor", 36350, PropCategory.REGULAR)
    prop.label = "Ability to Configure Resolution Factor"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "disable"
    prop._addConstant("disable", "disable", 0)
    prop._addConstant("enable", "enable", 1)
    meta.props.add("configLatencyResFactor", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "fabricMode", "fabricMode", 26239, PropCategory.REGULAR)
    prop.label = "Mode to Indicate Platform Type"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "aci"
    prop._addConstant("aci", "aci-mode", 0)
    prop._addConstant("standalone", "standalone-mode", 1)
    meta.props.add("fabricMode", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "numTcamEnt", "numTcamEnt", 28614, PropCategory.REGULAR)
    prop.label = "Number of TCAM Entries"
    prop.isOper = True
    prop.range = [(1, 65535)]
    prop.defaultValue = 1024
    prop.defaultValueStr = "1024"
    meta.props.add("numTcamEnt", prop)

    prop = PropMeta("str", "numTcamEntPerV4", "numTcamEntPerV4", 29952, PropCategory.REGULAR)
    prop.label = "Number of TCAM Entries per V4 type"
    prop.isOper = True
    prop.range = [(1, 256)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("numTcamEntPerV4", prop)

    prop = PropMeta("str", "numTcamEntPerV6", "numTcamEntPerV6", 29953, PropCategory.REGULAR)
    prop.label = "Number of TCAM Entries per V6 type"
    prop.isOper = True
    prop.range = [(1, 256)]
    prop.defaultValue = 4
    prop.defaultValueStr = "4"
    meta.props.add("numTcamEntPerV6", prop)

    prop = PropMeta("str", "oclassSupport", "oclassSupport", 36816, PropCategory.REGULAR)
    prop.label = "Ability to expose Oclass information"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "disable"
    prop._addConstant("disable", "disable", 0)
    prop._addConstant("enable", "enable", 1)
    meta.props.add("oclassSupport", prop)

    prop = PropMeta("str", "oportSupport", "oportSupport", 36815, PropCategory.REGULAR)
    prop.label = "Ability to expose Oport information"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "disable"
    prop._addConstant("disable", "disable", 0)
    prop._addConstant("enable", "enable", 1)
    meta.props.add("oportSupport", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "vrfFiltering", "vrfFiltering", 35405, PropCategory.REGULAR)
    prop.label = "Feature state of vrf base filtering"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "disable"
    prop._addConstant("disable", "disable", 0)
    prop._addConstant("enable", "enable", 1)
    meta.props.add("vrfFiltering", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

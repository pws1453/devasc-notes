# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class NexthopStub(Mo):
    """
    

    """

    meta = ClassMeta("cobra.model.ipv4.NexthopStub")

    meta.moClassName = "ipv4NexthopStub"
    meta.rnFormat = "nhs-[%(nhIf)s]-addr-[%(nhAddr)s]-vrf-[%(nhVrf)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "IPv4 Nexthop"
    meta.writeAccessMask = 0x8408421042001
    meta.readAccessMask = 0x8408421042001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.ip.RsNexthopToProtG")
    meta.childClasses.add("cobra.model.ip.RsNexthopToNexthopDef")
    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.ip.RsNexthopToNexthopDef", "rsnexthopToNexthopDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.ip.RsNexthopToProtG", "rsnexthopToProtG-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.ipv4.Route")

    meta.superClasses.add("cobra.model.pol.Instr")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.ip.Nexthop")

    meta.rnPrefixes = [
        ('nhs-', True),
        ('-addr-', True),
        ('-vrf-', True),
    ]

    prop = PropMeta("str", "LogicalDn", "LogicalDn", 52347, PropCategory.REGULAR)
    prop.label = "Logical DN of NexthopP"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("LogicalDn", prop)

    prop = PropMeta("str", "cachedRtCtrl", "cachedRtCtrl", 21351, PropCategory.REGULAR)
    prop.label = "Cached Rt Control"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("bfd", "bfd", 2)
    prop._addConstant("dst-unreachable", "destination-unreachable", 4)
    prop._addConstant("pervasive", "pervasive-route", 1)
    prop._addConstant("track-object", "object-tracked-by-ipsla", 8)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("cachedRtCtrl", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "contextId", "contextId", 21352, PropCategory.REGULAR)
    prop.label = "Context ID"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("contextId", prop)

    prop = PropMeta("str", "ctrl", "ctrl", 49948, PropCategory.REGULAR)
    prop.label = "Controls"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("track-object", "object-tracked-by-ipsla", 1)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("ctrl", prop)

    prop = PropMeta("str", "descr", "descr", 5581, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "flags", "flags", 4359, PropCategory.REGULAR)
    prop.label = "Rnh Flags"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("rnh", "recursive-nexthop", 1)
    prop._addConstant("rnhSent", "recursive-nexthop-sent-to-urib", 2)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "nhAddr", "nhAddr", 16215, PropCategory.REGULAR)
    prop.label = "Nexthop Address"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("nhAddr", prop)

    prop = PropMeta("str", "nhIf", "nhIf", 16216, PropCategory.REGULAR)
    prop.label = "Nexthop Interface"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("nhIf", prop)

    prop = PropMeta("str", "nhVrf", "nhVrf", 16217, PropCategory.REGULAR)
    prop.label = "Nexthop VRF"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 512)]
    meta.props.add("nhVrf", prop)

    prop = PropMeta("str", "operSt", "operSt", 4360, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "up"
    prop._addConstant("down", "down", 1)
    prop._addConstant("failed", "failed", 3)
    prop._addConstant("unspecified", "unspecified", 0)
    prop._addConstant("up", "up", 2)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 4361, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("if-down", "interface-down", 3)
    prop._addConstant("internal-cfg-err", "internal-config-error", 19)
    prop._addConstant("invalid-if", "no-interface", 10)
    prop._addConstant("invalid-nh", "invalid-nexthop", 8)
    prop._addConstant("invalid-nh-mask", "invalid-nexthop-mask", 9)
    prop._addConstant("invalid-pfx", "invalid-prefix", 6)
    prop._addConstant("invalid-pfx-mask", "invalid-prefix-mask", 5)
    prop._addConstant("invalid-pin-if-vrf", "invalid-pin-interface-vrf", 7)
    prop._addConstant("invalid-route-vrf", "invalid-route-vrf", 15)
    prop._addConstant("link-local-pfx", "link-local-prefix", 4)
    prop._addConstant("lo-addr", "loopback-address", 13)
    prop._addConstant("local-addr", "nexthop-configured-as-local-address", 20)
    prop._addConstant("local-nh", "local-nexthop", 11)
    prop._addConstant("max-nh-exceeded", "max-nh-count-exceeded", 14)
    prop._addConstant("mcast-nh", "multicast-nexthop", 12)
    prop._addConstant("no-nexthop", "nexthop-not-specified", 16)
    prop._addConstant("no-nh", "no-nexthop", 22)
    prop._addConstant("no-nh-ep-cfg", "nexthop-ep-reachability-not-configured", 26)
    prop._addConstant("proxy-tunnel-down", "spine-proxy-tunnel-down", 25)
    prop._addConstant("rnh-not-resolved", "recursive-nexthop-not-resolved", 18)
    prop._addConstant("rnh-unresolved", "rnh-unresolved", 24)
    prop._addConstant("route-exists", "route-exists-with-no-or-different-pin-number", 17)
    prop._addConstant("rt-exists", "route-exists", 23)
    prop._addConstant("rt-unreachable", "route-unreachable", 2)
    prop._addConstant("track-id-invalid", "track-id-is-invalid", 27)
    prop._addConstant("track-state-down", "tracking-state-is-down", 29)
    prop._addConstant("track-state-invalid", "tracking-state-is-invalid", 28)
    prop._addConstant("unspecified", "unspecified", 0)
    prop._addConstant("up", "up", 1)
    prop._addConstant("vrf-down", "vrf-down", 2)
    prop._addConstant("vrf-err", "invalid-vrf-error", 21)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "pref", "pref", 21961, PropCategory.REGULAR)
    prop.label = "Preference"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 255)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("pref", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rwEncap", "rwEncap", 4358, PropCategory.REGULAR)
    prop.label = "Rewrite Encapsulation"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("rwEncap", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "trackId", "trackId", 49390, PropCategory.REGULAR)
    prop.label = "Next Hop Track Id"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 2147483647)]
    meta.props.add("trackId", prop)

    meta.namingProps.append(getattr(meta.props, "nhIf"))
    getattr(meta.props, "nhIf").needDelimiter = True
    meta.namingProps.append(getattr(meta.props, "nhAddr"))
    getattr(meta.props, "nhAddr").needDelimiter = True
    meta.namingProps.append(getattr(meta.props, "nhVrf"))
    getattr(meta.props, "nhVrf").needDelimiter = True

    def __init__(self, parentMoOrDn, nhIf, nhAddr, nhVrf, markDirty=True, **creationProps):
        namingVals = [nhIf, nhAddr, nhVrf]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

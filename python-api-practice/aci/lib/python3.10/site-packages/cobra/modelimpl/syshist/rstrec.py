# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class RstRec(Mo):
    meta = ClassMeta("cobra.model.syshist.RstRec")

    meta.isAbstract = True
    meta.moClassName = "syshistRstRec"


    meta.moClassName = "syshistRstRec"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "Reset Record"
    meta.writeAccessMask = 0x800000000000001
    meta.readAccessMask = 0x800000000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.concreteSubClasses.add("cobra.model.syshist.CardRstRec")
    meta.concreteSubClasses.add("cobra.model.syshist.RemCardRstRec")
    meta.concreteSubClasses.add("cobra.model.syshist.ExtChCardRstRec")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "reason", "reason", 3289, PropCategory.REGULAR)
    prop.label = "Reset Reason"
    prop.isOper = True
    prop._addConstant("asic", "reset-performed-due-to-component-error", 22)
    prop._addConstant("bad-bus-volt", "reset-due-to-bad-system-bus-voltage", 94)
    prop._addConstant("bad-intermediate-bus-volt", "reset-due-to-bad-intermediate-bus-voltage", 95)
    prop._addConstant("bad-volt", "reset-due-to-bad-voltage", 93)
    prop._addConstant("boot-err", "reset-(powered-down)-because-module-does-not-boot", 27)
    prop._addConstant("bootflash-corrupt", "reset-(powered-down)-because-bootflash-access-failed", 30)
    prop._addConstant("card-incompat", "module-not-supported-in-this-chassis", 113)
    prop._addConstant("chassis-rst", "chassis-reset-by-sup", 105)
    prop._addConstant("clock", "system-reset-due-to-clock-failure", 12)
    prop._addConstant("clock-switchover", "vegaslc-reset-due-to-clock-switchover", 37)
    prop._addConstant("cold-boot", "system-power-cycled-due-to-cold-boot", 140)
    prop._addConstant("decommissioned", "decommissioned", 134)
    prop._addConstant("deep-sleep", "preparing-to-enter-deep-sleep-mode", 126)
    prop._addConstant("dme-clean-config-reset", "dme-clean-config-reset", 132)
    prop._addConstant("eem-pwr-dwn", "powered-down-due-to-eem-event-policy-trigger", 97)
    prop._addConstant("ejector", "all-the-ejectors-are-open", 99)
    prop._addConstant("eobc", "reset-triggered-due-to-bad-backplane-communication-channel", 25)
    prop._addConstant("epc-fail", "epc-failure", 130)
    prop._addConstant("epld", "power-down/up-epld-upgrade-process", 33)
    prop._addConstant("epld-upg-nw-crd-mode", "power-down/up-epld-upgrade-process", 125)
    prop._addConstant("ha-reset", "reset-triggered-due-to-ha-policy-of-reset", 16)
    prop._addConstant("ha-switchover", "reset-triggered-due-to-ha-policy-of-switchover", 15)
    prop._addConstant("halt", "kernel-halt", 13)
    prop._addConstant("hw", "reset-triggered-due-to-hardware-error", 21)
    prop._addConstant("idprom-err", "bootup-error-accessing-module-idprom", 114)
    prop._addConstant("incompat-config", "reset-(powered-down)-because-of-incompatible-configuration", 43)
    prop._addConstant("ins-seq-fail-pwr-dwn", "reset-(powered-down)-due-to-insertion-sequence-failed", 89)
    prop._addConstant("installer", "reset-by-installer", 31)
    prop._addConstant("insufficient-resource", "reset-(powered-down)-because-of-insufficient-resources-(di)", 38)
    prop._addConstant("issu-restart", "reset-due-to-upgrade", 88)
    prop._addConstant("klm-fail", "klm-load-failure", 131)
    prop._addConstant("last-fc-down", "reloading-linecard-on-removal-of-last-fabric-card", 133)
    prop._addConstant("last-sc-down", "reloading-linecard-and-fabric-card-on-removal-of-last-sc", 136)
    prop._addConstant("lcm-async-notice-fail", "stop-async-notice-failed", 77)
    prop._addConstant("lcm-boot-srg-timeout", "srg-info-response-timeout", 47)
    prop._addConstant("lcm-coredump", "core-dump-initiation", 48)
    prop._addConstant("lcm-disruptive-upg", "disruptive-upgrade", 49)
    prop._addConstant("lcm-ha-restart", "ha-system-restart", 45)
    prop._addConstant("lcm-haswitchover-done", "ha-switchover-done", 46)
    prop._addConstant("lcm-hitfull-img-check", "hitful-image-compatibility-check", 68)
    prop._addConstant("lcm-hitless-mod-rem", "hitless-module-removal", 51)
    prop._addConstant("lcm-hitless-proc-notice", "catastrophic-error-from-lc", 53)
    prop._addConstant("lcm-hitless-pwr-dwn", "hitless-power-down", 52)
    prop._addConstant("lcm-hitless-reg-fail", "hitless-registration-failed", 54)
    prop._addConstant("lcm-hitless-timeout", "hitless-upgrade-timeout", 55)
    prop._addConstant("lcm-hitless-upg-fail", "hitless-upgrade-failed", 59)
    prop._addConstant("lcm-img-check-pwr-cycle", "image-compatibility-check-(action:powercycle)", 69)
    prop._addConstant("lcm-img-check-pwr-dwn", "image-compatibility-check-(action:powerdown)", 70)
    prop._addConstant("lcm-img-check-switch-over", "switchover-:-image-compatibility-check", 71)
    prop._addConstant("lcm-img-upg-timeout", "line-card-image-upgrade-(failure)", 56)
    prop._addConstant("lcm-img-upgsuccess", "line-card-image-upgrade-(success)", 57)
    prop._addConstant("lcm-lc-fail", "line-card-failure", 50)
    prop._addConstant("lcm-lc-ins-seq-fail", "lc-insertion-sequence-failure", 58)
    prop._addConstant("lcm-lc-no-resp", "line-card-not-responding", 60)
    prop._addConstant("lcm-lc-reg-more3", "line-card-3+-registration", 61)
    prop._addConstant("lcm-lc-reg-timeout", "line-card-registration-timeout", 62)
    prop._addConstant("lcm-lc-rem", "module-is-removed", 74)
    prop._addConstant("lcm-power-down", "module-is-powered-down-or-power-cycled", 72)
    prop._addConstant("lcm-proc-notice", "line-card-catastrophic-error", 66)
    prop._addConstant("lcm-runtime-diag-fail", "runtime-diagnostic-failure", 63)
    prop._addConstant("lcm-runtime-diag-timeout", "runtime-diagnostic-timeout", 64)
    prop._addConstant("lcm-save-state-fail", "save-state-response-(failure)", 67)
    prop._addConstant("lcm-seeprom-timeout", "line-card-seeprom-contents-response-timeout", 65)
    prop._addConstant("lcm-srg-incompat", "upgraded-srg-incompatible", 80)
    prop._addConstant("lcm-srg-timeout", "srg-infor-response-timeout", 76)
    prop._addConstant("lcm-sup-rem", "supervisor-card-is-removed-or-power-cycled", 73)
    prop._addConstant("lcm-switchover-fail", "switchover-failed", 78)
    prop._addConstant("lcm-timeout", "addon-image-response-timeout", 79)
    prop._addConstant("lcm-unknown", "unknown-reason", 44)
    prop._addConstant("lcm-unknown-mod", "unknown-line-card-insertion", 75)
    prop._addConstant("max-bring-up-exceed", "failure(powered-down)-since-maximum-number-of-bringups-were-exceeded", 120)
    prop._addConstant("max-switchover", "reset-(powered-down)-since-maximum-number-of-swovers-were-exceeded", 107)
    prop._addConstant("mgmt-app", "reset-requested-by-management-application", 20)
    prop._addConstant("mod-err", "reset-requested-due-to-fatal-module-error", 4)
    prop._addConstant("mod-fail", "module-failed", 111)
    prop._addConstant("mod-fail-pwr-up", "unable-to-power-up-card-(power-ok-not-set)", 119)
    prop._addConstant("mod-pwr-cycle", "module-powercycled", 112)
    prop._addConstant("netboot-err", "reset-(powered-down)-because-netboot-failed", 29)
    prop._addConstant("no-bootflash", "reset-(powered-down)-because-there-is-no-bootflash", 28)
    prop._addConstant("no-plugin", "plugin-absent/-not-loaded", 117)
    prop._addConstant("no-sup", "reset-due-to-no-sup", 92)
    prop._addConstant("outofservice", "out-of-service", 86)
    prop._addConstant("panic", "kernel-panic", 19)
    prop._addConstant("pfm-power-dwn", "power-down-triggered-due-to-platform-manager-event", 18)
    prop._addConstant("pfm-rtime", "power-down-triggered-due-to-platform-manager-runtime-error", 17)
    prop._addConstant("policy-fan", "powered-down-due-to-fan-policy-trigger", 104)
    prop._addConstant("policy-reset", "policy-trigger-initiated-reset:", 103)
    prop._addConstant("psp", "reset-due-to-cmp", 96)
    prop._addConstant("push-button", "linecard-reset-by-push-button", 101)
    prop._addConstant("pwr-cfg", "configured-power-down", 5)
    prop._addConstant("reboot", "kernel-reboot", 1)
    prop._addConstant("redun-channel", "reset-triggered-due-to-bad-redundancy-channel", 23)
    prop._addConstant("redundancy", "reset-requested-by-redundancy", 14)
    prop._addConstant("reload", "reset-requested-by-cli-command-reload", 9)
    prop._addConstant("sigkill-fail", "reset-triggered-due-to-failure-to-respond-to-sigkill", 34)
    prop._addConstant("sprom-upd", "reset-requested-due-to-sprom-update", 10)
    prop._addConstant("ssd-firmware-upgrade", "system-power-cycled-due-to-ssd-firmware-upgrade", 139)
    prop._addConstant("sup-dev-err", "supervisor-device-error", 87)
    prop._addConstant("sw-card-id-unknown", "unknown-card-(could-not-get-software-card-id)", 118)
    prop._addConstant("switchover-timeout", "reset-since-switchover-timeout", 108)
    prop._addConstant("sys-cfg-dwn", "system-reset-due-to-element-manager", 11)
    prop._addConstant("sys-gen-fail", "reset-triggered-by-system-manager-for-generic-failure", 35)
    prop._addConstant("sys-health", "reset-due-to-bad-hw-detected-by-system-health", 24)
    prop._addConstant("sys-rst", "system-reset-by-active-sup-(by-writing-to-pmfpga-regs)", 100)
    prop._addConstant("sysmgr", "reset-requested-due-to-fatal-system-error", 3)
    prop._addConstant("sysmgr-timeout", "reset-of-standby-by-active-sup-due-to-sysmgr-timeout", 109)
    prop._addConstant("temp-alaram", "power-down-due-to-temperature-sensor-policy-trigger", 6)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("unknown-mod", "unsupported/unknown-module", 110)
    prop._addConstant("unspecified", "non-specific-deadend-error,-check-platform-int-error", 115)
    prop._addConstant("upg-err", "reset-requested-due-to-fatal-upgrade-error", 8)
    prop._addConstant("usd-fail", "reset-due-to-usd-failure", 98)
    prop._addConstant("user-switchover", "reset-triggered-due-to-switchover-request-by-user", 7)
    prop._addConstant("watchdog", "watchdog-timeout", 2)
    meta.props.add("reason", prop)

    prop = PropMeta("str", "reasonQual", "reasonQual", 3290, PropCategory.REGULAR)
    prop.label = "Reset Reason Qualifier"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("reasonQual", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "ts", "ts", 3288, PropCategory.REGULAR)
    prop.label = "Reset Timestamp"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("ts", prop)

    prop = PropMeta("str", "ver", "ver", 3291, PropCategory.REGULAR)
    prop.label = "Reset Reason"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("ver", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class AdjEp(Mo):
    """
    The neighbor information.

    """

    meta = ClassMeta("cobra.model.ospfv3.AdjEp")

    meta.moClassName = "ospfv3AdjEp"
    meta.rnFormat = "adj-%(id)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Adjacency"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.ospfv3.GrSt")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.ospfv3.AdjStats")

    meta.childNamesAndRnPrefix.append(("cobra.model.ospfv3.AdjStats", "adjstats"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.ospfv3.GrSt", "gr"))

    meta.parentClasses.add("cobra.model.ospfv3.If")

    meta.superClasses.add("cobra.model.nw.ConnEp")
    meta.superClasses.add("cobra.model.nw.AdjEp")
    meta.superClasses.add("cobra.model.l3.ProtAdjEp")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.ProtAdjEp")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.ospf.AAdjEp")
    meta.superClasses.add("cobra.model.nw.Ep")

    meta.rnPrefixes = [
        ('adj-', True),
    ]

    prop = PropMeta("str", "area", "area", 17106, PropCategory.REGULAR)
    prop.label = "Area ID"
    prop.isOper = True
    meta.props.add("area", prop)

    prop = PropMeta("str", "bdr", "bdr", 17109, PropCategory.REGULAR)
    prop.label = "Backup Designated Router"
    prop.isOper = True
    meta.props.add("bdr", prop)

    prop = PropMeta("str", "bfdSt", "bfdSt", 17105, PropCategory.REGULAR)
    prop.label = "BFD State"
    prop.isOper = True
    prop._addConstant("down", "down", 0)
    prop._addConstant("up", "up", 1)
    meta.props.add("bfdSt", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dbdOptions", "dbdOptions", 17112, PropCategory.REGULAR)
    prop.label = "DBD Options"
    prop.isOper = True
    meta.props.add("dbdOptions", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dr", "dr", 17108, PropCategory.REGULAR)
    prop.label = "Designated Router"
    prop.isOper = True
    meta.props.add("dr", prop)

    prop = PropMeta("str", "flags", "flags", 17113, PropCategory.REGULAR)
    prop.label = "Flags"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("all-dbds-acked", "all-dbds-acked", 4)
    prop._addConstant("all-dbds-sent", "all-dbds-sent", 2)
    prop._addConstant("master-self", "master-self", 1)
    prop._addConstant("peer-gr-helper", "peer-is-gr-helper", 8)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "helloOptions", "helloOptions", 17111, PropCategory.REGULAR)
    prop.label = "Hello Options"
    prop.isOper = True
    meta.props.add("helloOptions", prop)

    prop = PropMeta("str", "id", "id", 17475, PropCategory.REGULAR)
    prop.label = "ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "ifId", "ifId", 17103, PropCategory.REGULAR)
    prop.label = "Interface ID"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("ifId", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 17541, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 16432, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "operSt", "operSt", 17104, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "down"
    prop._addConstant("attempt", "attempt", 2)
    prop._addConstant("down", "down", 1)
    prop._addConstant("exchange", "exchange", 6)
    prop._addConstant("exstart", "exstart", 5)
    prop._addConstant("full", "full", 8)
    prop._addConstant("initializing", "initializing", 3)
    prop._addConstant("loading", "loading", 7)
    prop._addConstant("self", "self", 9)
    prop._addConstant("two-way", "two-way", 4)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "peerIp", "peerIp", 17110, PropCategory.REGULAR)
    prop.label = "Peer Address"
    prop.isOper = True
    meta.props.add("peerIp", prop)

    prop = PropMeta("str", "peerName", "peerName", 23252, PropCategory.REGULAR)
    prop.label = "Peer Name"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("peerName", prop)

    prop = PropMeta("str", "prio", "prio", 17107, PropCategory.REGULAR)
    prop.label = "Priority"
    prop.isOper = True
    prop.range = [(0, 255)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("prio", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "id"))

    def __init__(self, parentMoOrDn, id, markDirty=True, **creationProps):
        namingVals = [id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

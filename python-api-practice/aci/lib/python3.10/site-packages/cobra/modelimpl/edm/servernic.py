# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class ServerNic(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.edm.ServerNic")

    meta.moClassName = "edmServerNic"
    meta.rnFormat = "nic-[%(externalId)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "Server NIC"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.edm.RtToSvrNic")
    meta.childClasses.add("cobra.model.edm.RsNicNodeBinding")
    meta.childClasses.add("cobra.model.edm.RsNicProf")

    meta.childNamesAndRnPrefix.append(("cobra.model.edm.RsNicNodeBinding", "rsnicNodeBinding-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.edm.RtToSvrNic", "rttoSvrNic"))
    meta.childNamesAndRnPrefix.append(("cobra.model.edm.RsNicProf", "rsnicProf-"))

    meta.parentClasses.add("cobra.model.edm.Mgr")

    meta.superClasses.add("cobra.model.edm.Element")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.edm.Entity")
    meta.superClasses.add("cobra.model.naming.NamedIdentifiedObject")

    meta.rnPrefixes = [
        ('nic-', True),
    ]

    prop = PropMeta("str", "apicControlled", "apicControlled", 49798, PropCategory.REGULAR)
    prop.label = "APIC Controlled Server NIC"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("apicControlled", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 43734, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "externFound", "externFound", 49800, PropCategory.REGULAR)
    prop.label = "Externally Found Server NIC"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("externFound", prop)

    prop = PropMeta("str", "externalId", "externalId", 49801, PropCategory.REGULAR)
    prop.label = "External ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 512)]
    meta.props.add("externalId", prop)

    prop = PropMeta("str", "hostEqpId", "hostEqpId", 49802, PropCategory.REGULAR)
    prop.label = "Host Equipment ID"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("hostEqpId", prop)

    prop = PropMeta("str", "id", "id", 43657, PropCategory.REGULAR)
    prop.label = "Id"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "issues", "issues", 43659, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("connection-fault", "failed-to-connect-with-integration-manager", 1)
    prop._addConstant("create-prefix-list-fault", "prefix-list-not-configured-on-remote-vmanage-device", 2048)
    prop._addConstant("create-prefix-mapping-fault", "prefix-mapping-not-configured-on-remote-vmanage-device", 32768)
    prop._addConstant("create-vpn-list-fault", "vpn-list-not-configured-on-remote-vmanage-device", 16384)
    prop._addConstant("encap-config-fault", "error-configuring-encaps-on-integration-manager", 8)
    prop._addConstant("nicprof-config-fault", "error-configuring-nic-profiles-on-integration-manager", 16)
    prop._addConstant("nicprof-missing-fault", "configured-nic-profile-does-not-exist-on-integration-manager", 2)
    prop._addConstant("none", "none", 0)
    prop._addConstant("partner-registration-fault", "error-registering-apic-as-partner", 64)
    prop._addConstant("sla-config-fault", "error-in-pushing-sla", 128)
    prop._addConstant("sla-dscp-fault", "error-in-pushing-sla-dscp-mapping-to-remote-vmanage-device", 8192)
    prop._addConstant("sla-policies-not-configured-fault", "sla-policies-are-not-configured-on-remote-vmanage-device", 1024)
    prop._addConstant("sla-polpull-fault", "error-in-pulling-sla-policies", 512)
    prop._addConstant("sla-statspull-fault", "error-in-pulling-sla-stats", 256)
    prop._addConstant("uplinkprof-config-fault", "error-configuring-uplink-profiles-on-integration-manager", 32)
    prop._addConstant("uplinkprof-missing-fault", "configured-uplink-profile-does-not-exist-on-integration-manager", 4)
    prop._addConstant("vpn-pull-fault", "error-in-pulling-vpns-from-remote-vmanage-device", 4096)
    meta.props.add("issues", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "macAddr", "macAddr", 49803, PropCategory.REGULAR)
    prop.label = "MAC Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("macAddr", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 49797, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "operMtu", "operMtu", 49804, PropCategory.REGULAR)
    prop.label = "Operational Mtu"
    prop.isOper = True
    prop.range = [(576, 9216)]
    prop.defaultValue = 9000
    prop.defaultValueStr = "9000"
    meta.props.add("operMtu", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "userConfigured", "userConfigured", 49799, PropCategory.REGULAR)
    prop.label = "User Configured Server NIC"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("userConfigured", prop)

    meta.namingProps.append(getattr(meta.props, "externalId"))
    getattr(meta.props, "externalId").needDelimiter = True

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("EdmMgrToEdmNicProf", "edmMgr to edmNicProf", "cobra.model.edm.NicProf"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("EdmMgrToEdmNicProfToDom", "edmMgr to edmNicProfToDom", "cobra.model.edm.NicProfToDom"))

    def __init__(self, parentMoOrDn, externalId, markDirty=True, **creationProps):
        namingVals = [externalId]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

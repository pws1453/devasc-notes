# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class L3v6Usage128Hist1year(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.eqptcapacity.L3v6Usage128Hist1year", "Layer3 v6 128 entries usage count")

    counter = CounterMeta("v6Total", CounterCategory.COUNTER, "count", "Total v6 128 Routes")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "v6TotalCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "v6TotalPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "v6TotalMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "v6TotalMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "v6TotalAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "v6TotalSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "v6TotalThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "v6TotalTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "v6TotalRate"
    meta._counters.append(counter)

    counter = CounterMeta("v6Mc", CounterCategory.COUNTER, "count", "Total v6 128 MC Routes")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "v6McCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "v6McPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "v6McMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "v6McMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "v6McAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "v6McSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "v6McThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "v6McTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "v6McRate"
    meta._counters.append(counter)

    counter = CounterMeta("v6Uc", CounterCategory.COUNTER, "count", "Total v6 128 UC Routes")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "v6UcCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "v6UcPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "v6UcMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "v6UcMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "v6UcAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "v6UcSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "v6UcThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "v6UcTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "v6UcRate"
    meta._counters.append(counter)

    counter = CounterMeta("v6Ep", CounterCategory.COUNTER, "count", "Total v6 128 Endpoints")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "v6EpCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "v6EpPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "v6EpMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "v6EpMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "v6EpAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "v6EpSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "v6EpThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "v6EpTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "v6EpRate"
    meta._counters.append(counter)

    meta.moClassName = "eqptcapacityL3v6Usage128Hist1year"
    meta.rnFormat = "HDeqptcapacityL3v6Usage1281year-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical Layer3 v6 128 entries usage count stats in 1 year"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.eqptcapacity.Entity")

    meta.superClasses.add("cobra.model.eqptcapacity.L3v6Usage128Hist")
    meta.superClasses.add("cobra.model.stats.Hist")
    meta.superClasses.add("cobra.model.stats.Item")

    meta.rnPrefixes = [
        ('HDeqptcapacityL3v6Usage1281year-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "index", "index", 43958, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "v6EpAvg", "v6EpAvg", 44104, PropCategory.IMPLICIT_AVG)
    prop.label = "Total v6 128 Endpoints average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6EpAvg", prop)

    prop = PropMeta("str", "v6EpCum", "v6EpCum", 44100, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Total v6 128 Endpoints cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6EpCum", prop)

    prop = PropMeta("str", "v6EpMax", "v6EpMax", 44103, PropCategory.IMPLICIT_MAX)
    prop.label = "Total v6 128 Endpoints maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6EpMax", prop)

    prop = PropMeta("str", "v6EpMin", "v6EpMin", 44102, PropCategory.IMPLICIT_MIN)
    prop.label = "Total v6 128 Endpoints minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6EpMin", prop)

    prop = PropMeta("str", "v6EpPer", "v6EpPer", 44101, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Total v6 128 Endpoints periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6EpPer", prop)

    prop = PropMeta("str", "v6EpRate", "v6EpRate", 44108, PropCategory.IMPLICIT_RATE)
    prop.label = "Total v6 128 Endpoints rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6EpRate", prop)

    prop = PropMeta("str", "v6EpSpct", "v6EpSpct", 44105, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Total v6 128 Endpoints suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6EpSpct", prop)

    prop = PropMeta("str", "v6EpThr", "v6EpThr", 44106, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Total v6 128 Endpoints thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("v6EpThr", prop)

    prop = PropMeta("str", "v6EpTr", "v6EpTr", 44107, PropCategory.IMPLICIT_TREND)
    prop.label = "Total v6 128 Endpoints trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6EpTr", prop)

    prop = PropMeta("str", "v6McAvg", "v6McAvg", 44125, PropCategory.IMPLICIT_AVG)
    prop.label = "Total v6 128 MC Routes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6McAvg", prop)

    prop = PropMeta("str", "v6McCum", "v6McCum", 44121, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Total v6 128 MC Routes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6McCum", prop)

    prop = PropMeta("str", "v6McMax", "v6McMax", 44124, PropCategory.IMPLICIT_MAX)
    prop.label = "Total v6 128 MC Routes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6McMax", prop)

    prop = PropMeta("str", "v6McMin", "v6McMin", 44123, PropCategory.IMPLICIT_MIN)
    prop.label = "Total v6 128 MC Routes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6McMin", prop)

    prop = PropMeta("str", "v6McPer", "v6McPer", 44122, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Total v6 128 MC Routes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6McPer", prop)

    prop = PropMeta("str", "v6McRate", "v6McRate", 44129, PropCategory.IMPLICIT_RATE)
    prop.label = "Total v6 128 MC Routes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6McRate", prop)

    prop = PropMeta("str", "v6McSpct", "v6McSpct", 44126, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Total v6 128 MC Routes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6McSpct", prop)

    prop = PropMeta("str", "v6McThr", "v6McThr", 44127, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Total v6 128 MC Routes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("v6McThr", prop)

    prop = PropMeta("str", "v6McTr", "v6McTr", 44128, PropCategory.IMPLICIT_TREND)
    prop.label = "Total v6 128 MC Routes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6McTr", prop)

    prop = PropMeta("str", "v6TotalAvg", "v6TotalAvg", 44146, PropCategory.IMPLICIT_AVG)
    prop.label = "Total v6 128 Routes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6TotalAvg", prop)

    prop = PropMeta("str", "v6TotalCum", "v6TotalCum", 44142, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Total v6 128 Routes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6TotalCum", prop)

    prop = PropMeta("str", "v6TotalMax", "v6TotalMax", 44145, PropCategory.IMPLICIT_MAX)
    prop.label = "Total v6 128 Routes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6TotalMax", prop)

    prop = PropMeta("str", "v6TotalMin", "v6TotalMin", 44144, PropCategory.IMPLICIT_MIN)
    prop.label = "Total v6 128 Routes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6TotalMin", prop)

    prop = PropMeta("str", "v6TotalPer", "v6TotalPer", 44143, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Total v6 128 Routes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6TotalPer", prop)

    prop = PropMeta("str", "v6TotalRate", "v6TotalRate", 44150, PropCategory.IMPLICIT_RATE)
    prop.label = "Total v6 128 Routes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6TotalRate", prop)

    prop = PropMeta("str", "v6TotalSpct", "v6TotalSpct", 44147, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Total v6 128 Routes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6TotalSpct", prop)

    prop = PropMeta("str", "v6TotalThr", "v6TotalThr", 44148, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Total v6 128 Routes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("v6TotalThr", prop)

    prop = PropMeta("str", "v6TotalTr", "v6TotalTr", 44149, PropCategory.IMPLICIT_TREND)
    prop.label = "Total v6 128 Routes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6TotalTr", prop)

    prop = PropMeta("str", "v6UcAvg", "v6UcAvg", 44167, PropCategory.IMPLICIT_AVG)
    prop.label = "Total v6 128 UC Routes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6UcAvg", prop)

    prop = PropMeta("str", "v6UcCum", "v6UcCum", 44163, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Total v6 128 UC Routes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6UcCum", prop)

    prop = PropMeta("str", "v6UcMax", "v6UcMax", 44166, PropCategory.IMPLICIT_MAX)
    prop.label = "Total v6 128 UC Routes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6UcMax", prop)

    prop = PropMeta("str", "v6UcMin", "v6UcMin", 44165, PropCategory.IMPLICIT_MIN)
    prop.label = "Total v6 128 UC Routes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6UcMin", prop)

    prop = PropMeta("str", "v6UcPer", "v6UcPer", 44164, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Total v6 128 UC Routes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6UcPer", prop)

    prop = PropMeta("str", "v6UcRate", "v6UcRate", 44171, PropCategory.IMPLICIT_RATE)
    prop.label = "Total v6 128 UC Routes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6UcRate", prop)

    prop = PropMeta("str", "v6UcSpct", "v6UcSpct", 44168, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Total v6 128 UC Routes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6UcSpct", prop)

    prop = PropMeta("str", "v6UcThr", "v6UcThr", 44169, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Total v6 128 UC Routes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("v6UcThr", prop)

    prop = PropMeta("str", "v6UcTr", "v6UcTr", 44170, PropCategory.IMPLICIT_TREND)
    prop.label = "Total v6 128 UC Routes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v6UcTr", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

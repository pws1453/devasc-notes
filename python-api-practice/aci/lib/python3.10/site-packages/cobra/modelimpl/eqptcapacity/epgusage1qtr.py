# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class EpgUsage1qtr(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.eqptcapacity.EpgUsage1qtr", "Endpoint groups usage")

    counter = CounterMeta("totalCap", CounterCategory.COUNTER, "count", "Endpoint groups capacity")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "totalCapLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "totalCapCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "totalCapPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "totalCapMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "totalCapMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "totalCapAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "totalCapSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "totalCapBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "totalCapThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "totalCapTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "totalCapTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "totalCapRate"
    meta._counters.append(counter)

    counter = CounterMeta("total", CounterCategory.COUNTER, "count", "Total Endpoint groups")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "totalLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "totalCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "totalPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "totalMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "totalMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "totalAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "totalSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "totalBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "totalThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "totalTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "totalTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "totalRate"
    meta._counters.append(counter)

    meta.moClassName = "eqptcapacityEpgUsage1qtr"
    meta.rnFormat = "CDeqptcapacityEpgUsage1qtr"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current Endpoint groups usage stats in 1 quarter"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.eqptcapacity.Entity")

    meta.superClasses.add("cobra.model.eqptcapacity.EpgUsage")
    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.stats.Item")

    meta.rnPrefixes = [
        ('CDeqptcapacityEpgUsage1qtr', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "totalAvg", "totalAvg", 47552, PropCategory.IMPLICIT_AVG)
    prop.label = "Total Endpoint groups average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalAvg", prop)

    prop = PropMeta("str", "totalBase", "totalBase", 47547, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Total Endpoint groups baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalBase", prop)

    prop = PropMeta("str", "totalCapAvg", "totalCapAvg", 47531, PropCategory.IMPLICIT_AVG)
    prop.label = "Endpoint groups capacity average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalCapAvg", prop)

    prop = PropMeta("str", "totalCapBase", "totalCapBase", 47526, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Endpoint groups capacity baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalCapBase", prop)

    prop = PropMeta("str", "totalCapCum", "totalCapCum", 47527, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Endpoint groups capacity cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalCapCum", prop)

    prop = PropMeta("str", "totalCapLast", "totalCapLast", 47525, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Endpoint groups capacity current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalCapLast", prop)

    prop = PropMeta("str", "totalCapMax", "totalCapMax", 47530, PropCategory.IMPLICIT_MAX)
    prop.label = "Endpoint groups capacity maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalCapMax", prop)

    prop = PropMeta("str", "totalCapMin", "totalCapMin", 47529, PropCategory.IMPLICIT_MIN)
    prop.label = "Endpoint groups capacity minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalCapMin", prop)

    prop = PropMeta("str", "totalCapPer", "totalCapPer", 47528, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Endpoint groups capacity periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalCapPer", prop)

    prop = PropMeta("str", "totalCapRate", "totalCapRate", 47536, PropCategory.IMPLICIT_RATE)
    prop.label = "Endpoint groups capacity rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalCapRate", prop)

    prop = PropMeta("str", "totalCapSpct", "totalCapSpct", 47532, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Endpoint groups capacity suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalCapSpct", prop)

    prop = PropMeta("str", "totalCapThr", "totalCapThr", 47533, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Endpoint groups capacity thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("totalCapThr", prop)

    prop = PropMeta("str", "totalCapTr", "totalCapTr", 47535, PropCategory.IMPLICIT_TREND)
    prop.label = "Endpoint groups capacity trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalCapTr", prop)

    prop = PropMeta("str", "totalCapTrBase", "totalCapTrBase", 47534, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Endpoint groups capacity trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalCapTrBase", prop)

    prop = PropMeta("str", "totalCum", "totalCum", 47548, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Total Endpoint groups cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalCum", prop)

    prop = PropMeta("str", "totalLast", "totalLast", 47546, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Total Endpoint groups current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalLast", prop)

    prop = PropMeta("str", "totalMax", "totalMax", 47551, PropCategory.IMPLICIT_MAX)
    prop.label = "Total Endpoint groups maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalMax", prop)

    prop = PropMeta("str", "totalMin", "totalMin", 47550, PropCategory.IMPLICIT_MIN)
    prop.label = "Total Endpoint groups minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalMin", prop)

    prop = PropMeta("str", "totalPer", "totalPer", 47549, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Total Endpoint groups periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalPer", prop)

    prop = PropMeta("str", "totalRate", "totalRate", 47557, PropCategory.IMPLICIT_RATE)
    prop.label = "Total Endpoint groups rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalRate", prop)

    prop = PropMeta("str", "totalSpct", "totalSpct", 47553, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Total Endpoint groups suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalSpct", prop)

    prop = PropMeta("str", "totalThr", "totalThr", 47554, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Total Endpoint groups thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("totalThr", prop)

    prop = PropMeta("str", "totalTr", "totalTr", 47556, PropCategory.IMPLICIT_TREND)
    prop.label = "Total Endpoint groups trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalTr", prop)

    prop = PropMeta("str", "totalTrBase", "totalTrBase", 47555, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Total Endpoint groups trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("totalTrBase", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

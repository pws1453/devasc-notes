# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class McastUsageHist1d(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.eqptcapacity.McastUsageHist1d", "Multicast entries usage")

    counter = CounterMeta("normalized", CounterCategory.GAUGE, "percentage", "Local Multicast entries usage")
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "normalizedMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "normalizedMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "normalizedAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "normalizedSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "normalizedThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "normalizedTr"
    meta._counters.append(counter)

    counter = CounterMeta("localEpCap", CounterCategory.COUNTER, "count", "Local Multicast Endpoints capacity")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "localEpCapCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "localEpCapPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "localEpCapMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "localEpCapMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "localEpCapAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "localEpCapSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "localEpCapThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "localEpCapTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "localEpCapRate"
    meta._counters.append(counter)

    counter = CounterMeta("localEp", CounterCategory.COUNTER, "count", "Local Multicast Endpoints")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "localEpCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "localEpPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "localEpMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "localEpMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "localEpAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "localEpSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "localEpThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "localEpTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "localEpRate"
    meta._counters.append(counter)

    meta.moClassName = "eqptcapacityMcastUsageHist1d"
    meta.rnFormat = "HDeqptcapacityMcastUsage1d-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical Multicast entries usage stats in 1 day"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.eqptcapacity.Entity")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Hist")
    meta.superClasses.add("cobra.model.eqptcapacity.McastUsageHist")

    meta.rnPrefixes = [
        ('HDeqptcapacityMcastUsage1d-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "index", "index", 19968, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "localEpAvg", "localEpAvg", 20057, PropCategory.IMPLICIT_AVG)
    prop.label = "Local Multicast Endpoints average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpAvg", prop)

    prop = PropMeta("str", "localEpCapAvg", "localEpCapAvg", 20554, PropCategory.IMPLICIT_AVG)
    prop.label = "Local Multicast Endpoints capacity average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpCapAvg", prop)

    prop = PropMeta("str", "localEpCapCum", "localEpCapCum", 20550, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Local Multicast Endpoints capacity cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpCapCum", prop)

    prop = PropMeta("str", "localEpCapMax", "localEpCapMax", 20553, PropCategory.IMPLICIT_MAX)
    prop.label = "Local Multicast Endpoints capacity maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpCapMax", prop)

    prop = PropMeta("str", "localEpCapMin", "localEpCapMin", 20552, PropCategory.IMPLICIT_MIN)
    prop.label = "Local Multicast Endpoints capacity minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpCapMin", prop)

    prop = PropMeta("str", "localEpCapPer", "localEpCapPer", 20551, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Local Multicast Endpoints capacity periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpCapPer", prop)

    prop = PropMeta("str", "localEpCapRate", "localEpCapRate", 20558, PropCategory.IMPLICIT_RATE)
    prop.label = "Local Multicast Endpoints capacity rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpCapRate", prop)

    prop = PropMeta("str", "localEpCapSpct", "localEpCapSpct", 20555, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Local Multicast Endpoints capacity suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpCapSpct", prop)

    prop = PropMeta("str", "localEpCapThr", "localEpCapThr", 20556, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Local Multicast Endpoints capacity thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("localEpCapThr", prop)

    prop = PropMeta("str", "localEpCapTr", "localEpCapTr", 20557, PropCategory.IMPLICIT_TREND)
    prop.label = "Local Multicast Endpoints capacity trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpCapTr", prop)

    prop = PropMeta("str", "localEpCum", "localEpCum", 20053, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Local Multicast Endpoints cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpCum", prop)

    prop = PropMeta("str", "localEpMax", "localEpMax", 20056, PropCategory.IMPLICIT_MAX)
    prop.label = "Local Multicast Endpoints maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpMax", prop)

    prop = PropMeta("str", "localEpMin", "localEpMin", 20055, PropCategory.IMPLICIT_MIN)
    prop.label = "Local Multicast Endpoints minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpMin", prop)

    prop = PropMeta("str", "localEpPer", "localEpPer", 20054, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Local Multicast Endpoints periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpPer", prop)

    prop = PropMeta("str", "localEpRate", "localEpRate", 20061, PropCategory.IMPLICIT_RATE)
    prop.label = "Local Multicast Endpoints rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpRate", prop)

    prop = PropMeta("str", "localEpSpct", "localEpSpct", 20058, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Local Multicast Endpoints suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpSpct", prop)

    prop = PropMeta("str", "localEpThr", "localEpThr", 20059, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Local Multicast Endpoints thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("localEpThr", prop)

    prop = PropMeta("str", "localEpTr", "localEpTr", 20060, PropCategory.IMPLICIT_TREND)
    prop.label = "Local Multicast Endpoints trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("localEpTr", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "normalizedAvg", "normalizedAvg", 27229, PropCategory.IMPLICIT_AVG)
    prop.label = "Local Multicast entries usage average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("normalizedAvg", prop)

    prop = PropMeta("str", "normalizedMax", "normalizedMax", 27228, PropCategory.IMPLICIT_MAX)
    prop.label = "Local Multicast entries usage maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("normalizedMax", prop)

    prop = PropMeta("str", "normalizedMin", "normalizedMin", 27227, PropCategory.IMPLICIT_MIN)
    prop.label = "Local Multicast entries usage minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("normalizedMin", prop)

    prop = PropMeta("str", "normalizedSpct", "normalizedSpct", 27230, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Local Multicast entries usage suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("normalizedSpct", prop)

    prop = PropMeta("str", "normalizedThr", "normalizedThr", 27231, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Local Multicast entries usage thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("normalizedThr", prop)

    prop = PropMeta("str", "normalizedTr", "normalizedTr", 27232, PropCategory.IMPLICIT_TREND)
    prop.label = "Local Multicast entries usage trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("normalizedTr", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

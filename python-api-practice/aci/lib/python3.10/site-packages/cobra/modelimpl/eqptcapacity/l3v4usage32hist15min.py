# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class L3v4Usage32Hist15min(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.eqptcapacity.L3v4Usage32Hist15min", "Layer3 v4 32 entries usage count")

    counter = CounterMeta("v4Total", CounterCategory.COUNTER, "count", "Total v4 32 Routes")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "v4TotalCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "v4TotalPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "v4TotalMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "v4TotalMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "v4TotalAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "v4TotalSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "v4TotalThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "v4TotalTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "v4TotalRate"
    meta._counters.append(counter)

    counter = CounterMeta("v4Mc", CounterCategory.COUNTER, "count", "Total v4 32 MC Routes")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "v4McCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "v4McPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "v4McMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "v4McMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "v4McAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "v4McSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "v4McThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "v4McTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "v4McRate"
    meta._counters.append(counter)

    counter = CounterMeta("v4Uc", CounterCategory.COUNTER, "count", "Total v4 32 UC Routes")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "v4UcCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "v4UcPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "v4UcMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "v4UcMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "v4UcAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "v4UcSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "v4UcThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "v4UcTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "v4UcRate"
    meta._counters.append(counter)

    counter = CounterMeta("v4Ep", CounterCategory.COUNTER, "count", "Total v4 32 Endpoints")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "v4EpCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "v4EpPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "v4EpMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "v4EpMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "v4EpAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "v4EpSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "v4EpThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "v4EpTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "v4EpRate"
    meta._counters.append(counter)

    meta.moClassName = "eqptcapacityL3v4Usage32Hist15min"
    meta.rnFormat = "HDeqptcapacityL3v4Usage3215min-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical Layer3 v4 32 entries usage count stats in 15 minute"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.eqptcapacity.Entity")

    meta.superClasses.add("cobra.model.eqptcapacity.L3v4Usage32Hist")
    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Hist")

    meta.rnPrefixes = [
        ('HDeqptcapacityL3v4Usage3215min-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "index", "index", 43928, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "v4EpAvg", "v4EpAvg", 43984, PropCategory.IMPLICIT_AVG)
    prop.label = "Total v4 32 Endpoints average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4EpAvg", prop)

    prop = PropMeta("str", "v4EpCum", "v4EpCum", 43980, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Total v4 32 Endpoints cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4EpCum", prop)

    prop = PropMeta("str", "v4EpMax", "v4EpMax", 43983, PropCategory.IMPLICIT_MAX)
    prop.label = "Total v4 32 Endpoints maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4EpMax", prop)

    prop = PropMeta("str", "v4EpMin", "v4EpMin", 43982, PropCategory.IMPLICIT_MIN)
    prop.label = "Total v4 32 Endpoints minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4EpMin", prop)

    prop = PropMeta("str", "v4EpPer", "v4EpPer", 43981, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Total v4 32 Endpoints periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4EpPer", prop)

    prop = PropMeta("str", "v4EpRate", "v4EpRate", 43988, PropCategory.IMPLICIT_RATE)
    prop.label = "Total v4 32 Endpoints rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4EpRate", prop)

    prop = PropMeta("str", "v4EpSpct", "v4EpSpct", 43985, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Total v4 32 Endpoints suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4EpSpct", prop)

    prop = PropMeta("str", "v4EpThr", "v4EpThr", 43986, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Total v4 32 Endpoints thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("v4EpThr", prop)

    prop = PropMeta("str", "v4EpTr", "v4EpTr", 43987, PropCategory.IMPLICIT_TREND)
    prop.label = "Total v4 32 Endpoints trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4EpTr", prop)

    prop = PropMeta("str", "v4McAvg", "v4McAvg", 44005, PropCategory.IMPLICIT_AVG)
    prop.label = "Total v4 32 MC Routes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4McAvg", prop)

    prop = PropMeta("str", "v4McCum", "v4McCum", 44001, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Total v4 32 MC Routes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4McCum", prop)

    prop = PropMeta("str", "v4McMax", "v4McMax", 44004, PropCategory.IMPLICIT_MAX)
    prop.label = "Total v4 32 MC Routes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4McMax", prop)

    prop = PropMeta("str", "v4McMin", "v4McMin", 44003, PropCategory.IMPLICIT_MIN)
    prop.label = "Total v4 32 MC Routes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4McMin", prop)

    prop = PropMeta("str", "v4McPer", "v4McPer", 44002, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Total v4 32 MC Routes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4McPer", prop)

    prop = PropMeta("str", "v4McRate", "v4McRate", 44009, PropCategory.IMPLICIT_RATE)
    prop.label = "Total v4 32 MC Routes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4McRate", prop)

    prop = PropMeta("str", "v4McSpct", "v4McSpct", 44006, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Total v4 32 MC Routes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4McSpct", prop)

    prop = PropMeta("str", "v4McThr", "v4McThr", 44007, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Total v4 32 MC Routes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("v4McThr", prop)

    prop = PropMeta("str", "v4McTr", "v4McTr", 44008, PropCategory.IMPLICIT_TREND)
    prop.label = "Total v4 32 MC Routes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4McTr", prop)

    prop = PropMeta("str", "v4TotalAvg", "v4TotalAvg", 44026, PropCategory.IMPLICIT_AVG)
    prop.label = "Total v4 32 Routes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4TotalAvg", prop)

    prop = PropMeta("str", "v4TotalCum", "v4TotalCum", 44022, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Total v4 32 Routes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4TotalCum", prop)

    prop = PropMeta("str", "v4TotalMax", "v4TotalMax", 44025, PropCategory.IMPLICIT_MAX)
    prop.label = "Total v4 32 Routes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4TotalMax", prop)

    prop = PropMeta("str", "v4TotalMin", "v4TotalMin", 44024, PropCategory.IMPLICIT_MIN)
    prop.label = "Total v4 32 Routes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4TotalMin", prop)

    prop = PropMeta("str", "v4TotalPer", "v4TotalPer", 44023, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Total v4 32 Routes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4TotalPer", prop)

    prop = PropMeta("str", "v4TotalRate", "v4TotalRate", 44030, PropCategory.IMPLICIT_RATE)
    prop.label = "Total v4 32 Routes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4TotalRate", prop)

    prop = PropMeta("str", "v4TotalSpct", "v4TotalSpct", 44027, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Total v4 32 Routes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4TotalSpct", prop)

    prop = PropMeta("str", "v4TotalThr", "v4TotalThr", 44028, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Total v4 32 Routes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("v4TotalThr", prop)

    prop = PropMeta("str", "v4TotalTr", "v4TotalTr", 44029, PropCategory.IMPLICIT_TREND)
    prop.label = "Total v4 32 Routes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4TotalTr", prop)

    prop = PropMeta("str", "v4UcAvg", "v4UcAvg", 44047, PropCategory.IMPLICIT_AVG)
    prop.label = "Total v4 32 UC Routes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4UcAvg", prop)

    prop = PropMeta("str", "v4UcCum", "v4UcCum", 44043, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Total v4 32 UC Routes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4UcCum", prop)

    prop = PropMeta("str", "v4UcMax", "v4UcMax", 44046, PropCategory.IMPLICIT_MAX)
    prop.label = "Total v4 32 UC Routes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4UcMax", prop)

    prop = PropMeta("str", "v4UcMin", "v4UcMin", 44045, PropCategory.IMPLICIT_MIN)
    prop.label = "Total v4 32 UC Routes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4UcMin", prop)

    prop = PropMeta("str", "v4UcPer", "v4UcPer", 44044, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Total v4 32 UC Routes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4UcPer", prop)

    prop = PropMeta("str", "v4UcRate", "v4UcRate", 44051, PropCategory.IMPLICIT_RATE)
    prop.label = "Total v4 32 UC Routes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4UcRate", prop)

    prop = PropMeta("str", "v4UcSpct", "v4UcSpct", 44048, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Total v4 32 UC Routes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4UcSpct", prop)

    prop = PropMeta("str", "v4UcThr", "v4UcThr", 44049, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Total v4 32 UC Routes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("v4UcThr", prop)

    prop = PropMeta("str", "v4UcTr", "v4UcTr", 44050, PropCategory.IMPLICIT_TREND)
    prop.label = "Total v4 32 UC Routes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("v4UcTr", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

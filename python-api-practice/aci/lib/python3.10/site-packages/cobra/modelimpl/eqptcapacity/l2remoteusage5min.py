# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class L2RemoteUsage5min(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.eqptcapacity.L2RemoteUsage5min", "Layer2 remote entries usage count")

    counter = CounterMeta("remoteNormalized", CounterCategory.GAUGE, "percentage", "Remote L2 entries usage")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "remoteNormalizedLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "remoteNormalizedMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "remoteNormalizedMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "remoteNormalizedAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "remoteNormalizedSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "remoteNormalizedTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "remoteNormalizedThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "remoteNormalizedTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "remoteNormalizedTr"
    meta._counters.append(counter)

    counter = CounterMeta("remoteEpCap", CounterCategory.GAUGE, "count", "Remote L2 Endpoints capacity")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "remoteEpCapLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "remoteEpCapMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "remoteEpCapMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "remoteEpCapAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "remoteEpCapSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "remoteEpCapTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "remoteEpCapThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "remoteEpCapTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "remoteEpCapTr"
    meta._counters.append(counter)

    counter = CounterMeta("remoteEp", CounterCategory.GAUGE, "count", "Remote L2 Endpoints")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "remoteEpLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "remoteEpMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "remoteEpMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "remoteEpAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "remoteEpSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "remoteEpTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "remoteEpThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "remoteEpTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "remoteEpTr"
    meta._counters.append(counter)

    meta.moClassName = "eqptcapacityL2RemoteUsage5min"
    meta.rnFormat = "CDeqptcapacityL2RemoteUsage5min"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current Layer2 remote entries usage count stats in 5 minute"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.eqptcapacity.Entity")

    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.eqptcapacity.L2RemoteUsage")
    meta.superClasses.add("cobra.model.stats.Item")

    meta.rnPrefixes = [
        ('CDeqptcapacityL2RemoteUsage5min', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "remoteEpAvg", "remoteEpAvg", 36461, PropCategory.IMPLICIT_AVG)
    prop.label = "Remote L2 Endpoints average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpAvg", prop)

    prop = PropMeta("str", "remoteEpCapAvg", "remoteEpCapAvg", 36440, PropCategory.IMPLICIT_AVG)
    prop.label = "Remote L2 Endpoints capacity average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpCapAvg", prop)

    prop = PropMeta("str", "remoteEpCapLast", "remoteEpCapLast", 36434, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Remote L2 Endpoints capacity current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpCapLast", prop)

    prop = PropMeta("str", "remoteEpCapMax", "remoteEpCapMax", 36439, PropCategory.IMPLICIT_MAX)
    prop.label = "Remote L2 Endpoints capacity maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpCapMax", prop)

    prop = PropMeta("str", "remoteEpCapMin", "remoteEpCapMin", 36438, PropCategory.IMPLICIT_MIN)
    prop.label = "Remote L2 Endpoints capacity minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpCapMin", prop)

    prop = PropMeta("str", "remoteEpCapSpct", "remoteEpCapSpct", 36441, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Remote L2 Endpoints capacity suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpCapSpct", prop)

    prop = PropMeta("str", "remoteEpCapThr", "remoteEpCapThr", 36442, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Remote L2 Endpoints capacity thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("remoteEpCapThr", prop)

    prop = PropMeta("str", "remoteEpCapTr", "remoteEpCapTr", 36444, PropCategory.IMPLICIT_TREND)
    prop.label = "Remote L2 Endpoints capacity trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpCapTr", prop)

    prop = PropMeta("str", "remoteEpCapTrBase", "remoteEpCapTrBase", 36443, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Remote L2 Endpoints capacity trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpCapTrBase", prop)

    prop = PropMeta("str", "remoteEpCapTtl", "remoteEpCapTtl", 45287, PropCategory.IMPLICIT_TOTAL)
    prop.label = "Remote L2 Endpoints capacity total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpCapTtl", prop)

    prop = PropMeta("str", "remoteEpLast", "remoteEpLast", 36455, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Remote L2 Endpoints current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpLast", prop)

    prop = PropMeta("str", "remoteEpMax", "remoteEpMax", 36460, PropCategory.IMPLICIT_MAX)
    prop.label = "Remote L2 Endpoints maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpMax", prop)

    prop = PropMeta("str", "remoteEpMin", "remoteEpMin", 36459, PropCategory.IMPLICIT_MIN)
    prop.label = "Remote L2 Endpoints minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpMin", prop)

    prop = PropMeta("str", "remoteEpSpct", "remoteEpSpct", 36462, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Remote L2 Endpoints suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpSpct", prop)

    prop = PropMeta("str", "remoteEpThr", "remoteEpThr", 36463, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Remote L2 Endpoints thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("remoteEpThr", prop)

    prop = PropMeta("str", "remoteEpTr", "remoteEpTr", 36465, PropCategory.IMPLICIT_TREND)
    prop.label = "Remote L2 Endpoints trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpTr", prop)

    prop = PropMeta("str", "remoteEpTrBase", "remoteEpTrBase", 36464, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Remote L2 Endpoints trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpTrBase", prop)

    prop = PropMeta("str", "remoteEpTtl", "remoteEpTtl", 45288, PropCategory.IMPLICIT_TOTAL)
    prop.label = "Remote L2 Endpoints total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteEpTtl", prop)

    prop = PropMeta("str", "remoteNormalizedAvg", "remoteNormalizedAvg", 36479, PropCategory.IMPLICIT_AVG)
    prop.label = "Remote L2 entries usage average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteNormalizedAvg", prop)

    prop = PropMeta("str", "remoteNormalizedLast", "remoteNormalizedLast", 36476, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Remote L2 entries usage current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteNormalizedLast", prop)

    prop = PropMeta("str", "remoteNormalizedMax", "remoteNormalizedMax", 36478, PropCategory.IMPLICIT_MAX)
    prop.label = "Remote L2 entries usage maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteNormalizedMax", prop)

    prop = PropMeta("str", "remoteNormalizedMin", "remoteNormalizedMin", 36477, PropCategory.IMPLICIT_MIN)
    prop.label = "Remote L2 entries usage minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteNormalizedMin", prop)

    prop = PropMeta("str", "remoteNormalizedSpct", "remoteNormalizedSpct", 36480, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Remote L2 entries usage suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteNormalizedSpct", prop)

    prop = PropMeta("str", "remoteNormalizedThr", "remoteNormalizedThr", 36482, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Remote L2 entries usage thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("remoteNormalizedThr", prop)

    prop = PropMeta("str", "remoteNormalizedTr", "remoteNormalizedTr", 36484, PropCategory.IMPLICIT_TREND)
    prop.label = "Remote L2 entries usage trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteNormalizedTr", prop)

    prop = PropMeta("str", "remoteNormalizedTrBase", "remoteNormalizedTrBase", 36483, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Remote L2 entries usage trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteNormalizedTrBase", prop)

    prop = PropMeta("str", "remoteNormalizedTtl", "remoteNormalizedTtl", 36481, PropCategory.IMPLICIT_TOTAL)
    prop.label = "Remote L2 entries usage total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("remoteNormalizedTtl", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class NodeStatus(Mo):
    meta = ClassMeta("cobra.model.dbgexp.NodeStatus")

    meta.isAbstract = True
    meta.moClassName = "dbgexpNodeStatus"


    meta.moClassName = "dbgexpNodeStatus"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "Abstract Class for Node Status for Export Policy"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.dbgexp.PolicyStatusInstance")

    meta.concreteSubClasses.add("cobra.model.dbgexp.CoreStatus")
    meta.concreteSubClasses.add("cobra.model.dbgexp.TechSupStatus")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "collectionTime", "collectionTime", 4703, PropCategory.REGULAR)
    prop.label = "Collection Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("collectionTime", prop)

    prop = PropMeta("str", "dataType", "dataType", 4701, PropCategory.REGULAR)
    prop.label = "Core Vs Techsupport"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "techSupport"
    prop._addConstant("cores", "cores", 1)
    prop._addConstant("techSupport", "techsupport", 0)
    meta.props.add("dataType", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "exportFileUri", "exportFileUri", 4702, PropCategory.REGULAR)
    prop.label = "Download Location"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("exportFileUri", prop)

    prop = PropMeta("str", "exportStatus", "exportStatus", 4697, PropCategory.REGULAR)
    prop.label = "Status"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "pending"
    prop._addConstant("failed", "failed", 3)
    prop._addConstant("oldTracker", "oldtracker", 5)
    prop._addConstant("pending", "pending", 1)
    prop._addConstant("preInit", "preinit", 0)
    prop._addConstant("success", "success", 2)
    prop._addConstant("timedOut", "timedout", 4)
    meta.props.add("exportStatus", prop)

    prop = PropMeta("str", "exportStatusStr", "exportStatusStr", 4698, PropCategory.REGULAR)
    prop.label = "Status String"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("exportStatusStr", prop)

    prop = PropMeta("str", "exportedToController", "exportedToController", 15512, PropCategory.REGULAR)
    prop.label = "Destination Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("exportedToController", prop)

    prop = PropMeta("str", "fileSize", "fileSize", 23296, PropCategory.REGULAR)
    prop.label = "File size"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("fileSize", prop)

    prop = PropMeta("str", "hostName", "hostName", 25850, PropCategory.REGULAR)
    prop.label = "Fqdn of the Host"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("hostName", prop)

    prop = PropMeta("str", "nodeId", "nodeId", 4696, PropCategory.REGULAR)
    prop.label = "Node ID"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("nodeId", prop)

    prop = PropMeta("str", "polName", "polName", 4699, PropCategory.REGULAR)
    prop.label = "Policy Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("polName", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

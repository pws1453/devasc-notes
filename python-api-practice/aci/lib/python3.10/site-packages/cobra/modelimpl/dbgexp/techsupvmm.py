# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class TechSupVmm(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.dbgexp.TechSupVmm")

    meta.moClassName = "dbgexpTechSupVmm"
    meta.rnFormat = "tsvmm-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "TechSupport Export Policy for VMM"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.dbgexp.RsData")
    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.dbgexp.TSDomain")
    meta.childClasses.add("cobra.model.dbgexp.RsExportDest")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.dbgexp.RtExportPol")
    meta.childClasses.add("cobra.model.dbgexp.RsUserCtx")
    meta.childClasses.add("cobra.model.trig.RsTriggerable")
    meta.childClasses.add("cobra.model.dbgexp.RsTsSrc")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.trig.RsTriggerable", "rsTriggerable"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dbgexp.RsExportDest", "rsexportDest"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dbgexp.RtExportPol", "rtexportPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dbgexp.RsUserCtx", "rsUserCtx"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dbgexp.RsTsSrc", "rstsSrc-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dbgexp.RsData", "rsdata"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dbgexp.TSDomain", "tsdom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.fabric.Inst")

    meta.superClasses.add("cobra.model.pol.Comp")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.dbgexp.TechSupOnDBase")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.trig.Executable")
    meta.superClasses.add("cobra.model.dbgexp.ExportP")

    meta.rnPrefixes = [
        ('tsvmm-', True),
    ]

    prop = PropMeta("str", "adminSt", "adminSt", 1665, PropCategory.REGULAR)
    prop.label = "Administrative State"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "untriggered"
    prop._addConstant("triggered", "yes", 1)
    prop._addConstant("untriggered", "no", 0)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "annotation", "annotation", 38348, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "apicPath", "apicPath", 53883, PropCategory.REGULAR)
    prop.label = "APIC path to export the tech-support files"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("apicPath", prop)

    prop = PropMeta("str", "appName", "appName", 28360, PropCategory.REGULAR)
    prop.label = "app name to collect tech-support from appstore"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("appName", prop)

    prop = PropMeta("str", "category", "category", 20455, PropCategory.REGULAR)
    prop.label = "Category of feature to be collected"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "all"
    prop._addConstant("L4L7", "l4l7", 4)
    prop._addConstant("all", "all", 1)
    prop._addConstant("dme", "dme", 512)
    prop._addConstant("forwarding", "forwarding", 128)
    prop._addConstant("infra", "infrastructure", 32)
    prop._addConstant("monitoring", "monitoring", 16)
    prop._addConstant("nx-os", "nxos", 256)
    prop._addConstant("policy", "policy", 2)
    prop._addConstant("stats", "statistics", 64)
    prop._addConstant("virtualization", "virtualization", 8)
    meta.props.add("category", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "compression", "compression", 22559, PropCategory.REGULAR)
    prop.label = "Compression"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "gzip"
    prop._addConstant("gzip", "gzip", 0)
    prop._addConstant("none", "none", 1)
    meta.props.add("compression", prop)

    prop = PropMeta("str", "controllerLocation", "controllerLocation", 53059, PropCategory.REGULAR)
    prop.label = "Export location"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "apic"
    prop._addConstant("apic", "apic", 0)
    prop._addConstant("apicx", "apicx", 1)
    meta.props.add("controllerLocation", prop)

    prop = PropMeta("str", "dbMetadata", "dbMetadata", 55991, PropCategory.REGULAR)
    prop.label = "Include DB Metadata file"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("dbMetadata", prop)

    prop = PropMeta("str", "descr", "descr", 5582, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "endTime", "endTime", 20457, PropCategory.REGULAR)
    prop.label = "End time for techsupport collection"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("endTime", prop)

    prop = PropMeta("str", "exportToController", "exportToController", 15511, PropCategory.REGULAR)
    prop.label = "Export to Controller"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("exportToController", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 40487, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "extensiveLogs", "extensiveLogs", 52160, PropCategory.REGULAR)
    prop.label = "Include extensive/full event/fault/audit logs"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("extensiveLogs", prop)

    prop = PropMeta("str", "internalSource", "internalSource", 45516, PropCategory.REGULAR)
    prop.label = "Internal Trigger Source"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("internalSource", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "maximumRetryCount", "maximumRetryCount", 4684, PropCategory.REGULAR)
    prop.label = "Max Retry Count"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 5)]
    prop.defaultValue = 3
    prop.defaultValueStr = "3"
    meta.props.add("maximumRetryCount", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 22573, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 22568, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "seqNum", "seqNum", 15995, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("seqNum", prop)

    prop = PropMeta("str", "startTime", "startTime", 20456, PropCategory.REGULAR)
    prop.label = "Start time for techsupport collection"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("startTime", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "triggerTime", "triggerTime", 1666, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("triggerTime", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    prop = PropMeta("str", "upgradeLogs", "upgradeLogs", 23038, PropCategory.REGULAR)
    prop.label = "Include pre-upgrade logs"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("upgradeLogs", prop)

    prop = PropMeta("str", "vendorName", "vendorName", 28361, PropCategory.REGULAR)
    prop.label = "app vendor name to collect tech-support from appstore"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("vendorName", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Policy"

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

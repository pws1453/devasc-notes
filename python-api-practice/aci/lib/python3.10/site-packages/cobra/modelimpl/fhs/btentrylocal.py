# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class BtEntryLocal(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.fhs.BtEntryLocal")

    meta.moClassName = "fhsBtEntryLocal"
    meta.rnFormat = "localip-[%(ip)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "BtEntryLocal"
    meta.writeAccessMask = 0xc408421042001
    meta.readAccessMask = 0xc408421042001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.fhs.IpInspectProto")

    meta.superClasses.add("cobra.model.fhs.BtEntry")

    meta.rnPrefixes = [
        ('localip-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "createTs", "createTs", 33363, PropCategory.REGULAR)
    prop.label = "Create Timestamp"
    prop.isOper = True
    meta.props.add("createTs", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "epgEncap", "epgEncap", 31072, PropCategory.REGULAR)
    prop.label = "EPG Encapsulation"
    prop.isOper = True
    meta.props.add("epgEncap", prop)

    prop = PropMeta("str", "epgMode", "epgMode", 31071, PropCategory.REGULAR)
    prop.label = "EPG Mode"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("ip", "ip-based-epg", 2)
    prop._addConstant("mac", "mac-based-epg", 3)
    prop._addConstant("unknown", "unknown-epg-mode", 0)
    prop._addConstant("vlan", "vlan-based-epg", 1)
    prop._addConstant("vxlan", "vxlan-based-epg", 4)
    meta.props.add("epgMode", prop)

    prop = PropMeta("str", "if", "if", 28817, PropCategory.REGULAR)
    prop.label = "EP Interface"
    prop.isOper = True
    meta.props.add("if", prop)

    prop = PropMeta("str", "ip", "ip", 28940, PropCategory.REGULAR)
    prop.label = "EP IP Address"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("ip", prop)

    prop = PropMeta("str", "leasePeriod", "leasePeriod", 28822, PropCategory.REGULAR)
    prop.label = "Lease Period"
    prop.isOper = True
    meta.props.add("leasePeriod", prop)

    prop = PropMeta("str", "leaseRefreshTs", "leaseRefreshTs", 28821, PropCategory.REGULAR)
    prop.label = "Lease Refresh Timestamp"
    prop.isOper = True
    meta.props.add("leaseRefreshTs", prop)

    prop = PropMeta("str", "mac", "mac", 28816, PropCategory.REGULAR)
    prop.label = "EP MAC Address"
    prop.isOper = True
    meta.props.add("mac", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "pcTag", "pcTag", 28818, PropCategory.REGULAR)
    prop.label = "EP Policy Control Tag"
    prop.isOper = True
    prop._addConstant("any", "any", 0)
    meta.props.add("pcTag", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "state", "state", 28820, PropCategory.REGULAR)
    prop.label = "State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("creating", "creating", 6)
    prop._addConstant("down", "down", 2)
    prop._addConstant("incomplete", "incomplete", 8)
    prop._addConstant("none", "none", 1)
    prop._addConstant("reachable", "reachable", 4)
    prop._addConstant("stale", "stale", 5)
    prop._addConstant("tentative", "tentative", 7)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("verify", "verify", 3)
    prop._addConstant("waiting", "waiting", 9)
    meta.props.add("state", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "trustLevel", "trustLevel", 28819, PropCategory.REGULAR)
    prop.label = "Type"
    prop.isOper = True
    prop._addConstant("dhcp-assigned", "dhcp-assigned", 8)
    prop._addConstant("invalid", "invalid", 0)
    prop._addConstant("lla-mac-match", "lla-mac-match", 4)
    prop._addConstant("static-authenticated", "static-authenticated", 16)
    prop._addConstant("trusted-access", "trusted-access", 2)
    prop._addConstant("undetermined-trust", "undetermined-trust", 32)
    prop._addConstant("untrusted-access", "untrusted-access", 1)
    meta.props.add("trustLevel", prop)

    prop = PropMeta("str", "tunif", "tunif", 35504, PropCategory.REGULAR)
    prop.label = "EP Tunnel Interface"
    prop.isOper = True
    meta.props.add("tunif", prop)

    meta.namingProps.append(getattr(meta.props, "ip"))
    getattr(meta.props, "ip").needDelimiter = True

    def __init__(self, parentMoOrDn, ip, markDirty=True, **creationProps):
        namingVals = [ip]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

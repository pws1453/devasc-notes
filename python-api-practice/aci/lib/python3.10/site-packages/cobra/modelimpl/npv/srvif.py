# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class SrvIf(Mo):
    """
    Runtime Server Interface.

    """

    meta = ClassMeta("cobra.model.npv.SrvIf")

    meta.moClassName = "npvSrvIf"
    meta.rnFormat = "srvif-[%(id)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "NPV Runtime Server Interface"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.npv.SrvIfFlogi")
    meta.childClasses.add("cobra.model.npv.TargetIf")
    meta.childClasses.add("cobra.model.npv.SrvVsan")

    meta.childNamesAndRnPrefix.append(("cobra.model.npv.TargetIf", "targetif-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.npv.SrvIfFlogi", "srvif-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.npv.SrvVsan", "vsan-"))

    meta.parentClasses.add("cobra.model.npv.Inst")

    meta.superClasses.add("cobra.model.npv.If")

    meta.rnPrefixes = [
        ('srvif-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "defaultExtIf", "defaultExtIf", 24666, PropCategory.REGULAR)
    prop.label = "default external interface"
    prop.isOper = True
    meta.props.add("defaultExtIf", prop)

    prop = PropMeta("str", "defaultVsan", "defaultVsan", 24665, PropCategory.REGULAR)
    prop.label = "Server Interface Default Vsan"
    prop.isOper = True
    prop.range = [(1, 4094)]
    meta.props.add("defaultVsan", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "fcid", "fcid", 24667, PropCategory.REGULAR)
    prop.label = "Fc-id"
    prop.isOper = True
    meta.props.add("fcid", prop)

    prop = PropMeta("str", "flags", "flags", 24664, PropCategory.REGULAR)
    prop.label = "Flags Of Enable/disable In SrvIf"
    prop.isOper = True
    prop._addConstant("npiv", "npiv-enable", 1)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "fsmSt", "fsmSt", 24668, PropCategory.REGULAR)
    prop.label = "Runtime Srv Interface FSM"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no-transition"
    prop._addConstant("any", "fsm_st_any", 2)
    prop._addConstant("flogi-cleanup", "npivp_svr_if_st_flogi_cleanup", 7)
    prop._addConstant("if-down", "npivp_svr_if_st_interface_down", 3)
    prop._addConstant("if-up", "npivp_svr_if_st_interface_up", 6)
    prop._addConstant("no-change", "fsm_st_no_change", 1)
    prop._addConstant("no-transition", "fsm_st_no_transition", 0)
    prop._addConstant("wait-ext-if", "npivp_svr_if_st_waiting_external_interface", 4)
    prop._addConstant("wait-ext-if-stable", "npivp_svr_if_st_waiting_for_ext_if_stable", 10)
    prop._addConstant("wait-fc-add", "npivp_svr_if_st_waiting_fc_add", 8)
    prop._addConstant("wait-fc-del", "npivp_svr_if_st_waiting_fc_del", 9)
    prop._addConstant("wait-flogi", "npivp_svr_if_st_waiting_for_flogi", 5)
    meta.props.add("fsmSt", prop)

    prop = PropMeta("str", "id", "id", 24770, PropCategory.REGULAR)
    prop.label = "Interface ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "wwnn", "wwnn", 24663, PropCategory.REGULAR)
    prop.label = "World Wide Node Name"
    prop.isOper = True
    meta.props.add("wwnn", prop)

    prop = PropMeta("str", "wwpn", "wwpn", 24662, PropCategory.REGULAR)
    prop.label = "World Wide Port Name"
    prop.isOper = True
    meta.props.add("wwpn", prop)

    meta.namingProps.append(getattr(meta.props, "id"))
    getattr(meta.props, "id").needDelimiter = True

    def __init__(self, parentMoOrDn, id, markDirty=True, **creationProps):
        namingVals = [id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

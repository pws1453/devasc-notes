# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class ExtIf(Mo):
    """
     Runtime Ext Interface 

    """

    meta = ClassMeta("cobra.model.npv.ExtIf")

    meta.moClassName = "npvExtIf"
    meta.rnFormat = "extif-[%(id)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "NPV Runtime Ext Interface"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.npv.TargetIf")
    meta.childClasses.add("cobra.model.npv.ExtVsan")

    meta.childNamesAndRnPrefix.append(("cobra.model.npv.TargetIf", "targetif-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.npv.ExtVsan", "vsan-"))

    meta.parentClasses.add("cobra.model.npv.Inst")

    meta.superClasses.add("cobra.model.npv.If")

    meta.rnPrefixes = [
        ('extif-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "defaultVsan", "defaultVsan", 24672, PropCategory.REGULAR)
    prop.label = "External Interface Default Vsan"
    prop.isOper = True
    prop.range = [(1, 4094)]
    meta.props.add("defaultVsan", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "fcid", "fcid", 24677, PropCategory.REGULAR)
    prop.label = "Fc-id"
    prop.isOper = True
    meta.props.add("fcid", prop)

    prop = PropMeta("str", "flags", "flags", 24676, PropCategory.REGULAR)
    prop.label = "Flags Of Enable/disable In ExtIf"
    prop.isOper = True
    prop._addConstant("npiv", "npiv-enable", 1)
    prop._addConstant("pc", "port-channel", 2)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "flogiVsan", "flogiVsan", 24673, PropCategory.REGULAR)
    prop.label = "Interface Flogi Vsan"
    prop.isOper = True
    prop.range = [(1, 4094)]
    meta.props.add("flogiVsan", prop)

    prop = PropMeta("str", "fsmSt", "fsmSt", 24669, PropCategory.REGULAR)
    prop.label = "Runtime Ext Interface FSM state"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no-transition"
    prop._addConstant("any", "fsm_st_any", 2)
    prop._addConstant("down", "npivp_ext_if_st_down", 3)
    prop._addConstant("flogi-fail-retry", "npivp_ext_if_st_flogi_fail_retry", 11)
    prop._addConstant("flogi-failed", "npivp_ext_if_st_flogi_failed", 7)
    prop._addConstant("no-change", "fsm_st_no_change", 1)
    prop._addConstant("no-transition", "fsm_st_no_transition", 0)
    prop._addConstant("pc-member-add", "npivp_ext_if_st_pc_member_add", 14)
    prop._addConstant("pc-member-del", "npivp_ext_if_st_pc_member_del", 15)
    prop._addConstant("preinit-done", "npivp_ext_if_st_preinit_done", 4)
    prop._addConstant("up", "npivp_ext_if_st_up", 6)
    prop._addConstant("wait-fcid-add", "npivp_ext_if_st_waiting_fcid_addition", 8)
    prop._addConstant("wait-fcid-del", "npivp_ext_if_st_waiting_fcid_deletion", 9)
    prop._addConstant("wait-flogi-response", "npivp_ext_if_st_waiting_flogi_response", 5)
    prop._addConstant("wait-for-vsan-up", "npivp_ext_if_st_waiting_for_vsan_up", 12)
    prop._addConstant("wait-lc-port-config", "npivp_ext_if_st_waiting_lc_port_config", 13)
    prop._addConstant("wait-ns-registration", "npivp_ext_if_st_waiting_ns_registration", 10)
    meta.props.add("fsmSt", prop)

    prop = PropMeta("str", "id", "id", 24769, PropCategory.REGULAR)
    prop.label = "Interface ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "logIfIndex", "logIfIndex", 24675, PropCategory.REGULAR)
    prop.label = "Logic Interface Index"
    prop.isOper = True
    meta.props.add("logIfIndex", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "numVsan", "numVsan", 24671, PropCategory.REGULAR)
    prop.label = "Number of Vsans"
    prop.isOper = True
    meta.props.add("numVsan", prop)

    prop = PropMeta("str", "operPortMode", "operPortMode", 24674, PropCategory.REGULAR)
    prop.label = "Oper Port Mode"
    prop.isOper = True
    prop.defaultValue = 32
    prop.defaultValueStr = "f"
    prop._addConstant("all", "all", 65535)
    prop._addConstant("auto", "auto", 1)
    prop._addConstant("f", "f", 32)
    prop._addConstant("np", "np", 16384)
    prop._addConstant("tf", "tf", 67108864)
    prop._addConstant("tnp", "tnp", 134217728)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("operPortMode", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "wwnn", "wwnn", 24663, PropCategory.REGULAR)
    prop.label = "World Wide Node Name"
    prop.isOper = True
    meta.props.add("wwnn", prop)

    prop = PropMeta("str", "wwpn", "wwpn", 24662, PropCategory.REGULAR)
    prop.label = "World Wide Port Name"
    prop.isOper = True
    meta.props.add("wwpn", prop)

    meta.namingProps.append(getattr(meta.props, "id"))
    getattr(meta.props, "id").needDelimiter = True

    def __init__(self, parentMoOrDn, id, markDirty=True, **creationProps):
        namingVals = [id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

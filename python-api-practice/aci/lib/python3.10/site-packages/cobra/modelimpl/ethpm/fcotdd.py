# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class FcotDD(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.ethpm.FcotDD")

    meta.moClassName = "ethpmFcotDD"
    meta.rnFormat = "fcotdd"
    meta.category = MoCategory.REGULAR
    meta.label = "DD Fcot"
    meta.writeAccessMask = 0x100000000001
    meta.readAccessMask = 0x100000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.ethpm.PhysIf")

    meta.superClasses.add("cobra.model.ethpm.AFcotDD")
    meta.superClasses.add("cobra.model.ethpm.FcotBase")

    meta.rnPrefixes = [
        ('fcotdd', False),
    ]

    prop = PropMeta("str", "actualType", "actualType", 28640, PropCategory.REGULAR)
    prop.label = "ActualType"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("cfp", "cfp", 8)
    prop._addConstant("cfp-100g", "cfp-100g", 7)
    prop._addConstant("cfp-40g", "cfp-40g", 6)
    prop._addConstant("dummy", "dummy", 3)
    prop._addConstant("qsa", "qsa", 12)
    prop._addConstant("qsfp", "qsfp", 5)
    prop._addConstant("qsfp28", "qsfp28", 10)
    prop._addConstant("qsfpdd", "qsfpdd", 11)
    prop._addConstant("sfp", "sfp", 4)
    prop._addConstant("sfp28", "sfp28", 9)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("x2", "x2", 2)
    prop._addConstant("xfp", "xfp", 1)
    meta.props.add("actualType", prop)

    prop = PropMeta("str", "advertisingCode", "advertisingCode", 55693, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("advertisingCode", prop)

    prop = PropMeta("str", "cableAttenuation", "cableAttenuation", 55689, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("cableAttenuation", prop)

    prop = PropMeta("str", "cableLength", "cableLength", 55696, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("cableLength", prop)

    prop = PropMeta("str", "checksum", "checksum", 52974, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("checksum", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cleiCode", "cleiCode", 55686, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("cleiCode", prop)

    prop = PropMeta("str", "connectType", "connectType", 52973, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("connectType", prop)

    prop = PropMeta("str", "dateCode", "dateCode", 52972, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("dateCode", prop)

    prop = PropMeta("str", "description", "description", 3897, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isOper = True
    meta.props.add("description", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "fCTxType", "fCTxType", 52979, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("fCTxType", prop)

    prop = PropMeta("str", "farEndLaneCodeFor8Lanes", "farEndLaneCodeFor8Lanes", 55691, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("farEndLaneCodeFor8Lanes", prop)

    prop = PropMeta("str", "fcotNum", "fcotNum", 52977, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("fcotNum", prop)

    prop = PropMeta("str", "fcotStatus", "fcotStatus", 3894, PropCategory.REGULAR)
    prop.label = "Status"
    prop.isOper = True
    meta.props.add("fcotStatus", prop)

    prop = PropMeta("str", "fcotType", "fcotType", 52978, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("fcotType", prop)

    prop = PropMeta("str", "firmwareVersion", "firmwareVersion", 55684, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("firmwareVersion", prop)

    prop = PropMeta("str", "flags", "flags", 3900, PropCategory.REGULAR)
    prop.label = "Flags"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("access-failed", "access-failed", 1)
    prop._addConstant("auth-failed", "auth-failed", 10)
    prop._addConstant("checksum-failed", "checksum-failed", 2)
    prop._addConstant("delayed-auth-failed", "delayed-auth-failed", 12)
    prop._addConstant("emphasis-checksum-failed", "emphasis-checksum-failed", 7)
    prop._addConstant("eth-compalint-failed", "eth-compalint-failed", 5)
    prop._addConstant("init-failed", "init-failed", 8)
    prop._addConstant("ok", "ok", 14)
    prop._addConstant("ok-auth-success-no-md5", "ok-auth-success-no-md5", 9)
    prop._addConstant("ok-delayed-auth-success", "ok-delayed-auth-success", 11)
    prop._addConstant("ok-no-md5", "ok-no-md5", 13)
    prop._addConstant("sfp-speed-mismatch", "sfp-speed-mismatch", 4)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("unknown-xcvr-type", "unknown-xcvr-type", 6)
    prop._addConstant("vendor-crc-failed", "vendor-crc-failed", 3)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "guiCiscoEID", "guiCiscoEID", 3908, PropCategory.REGULAR)
    prop.label = "GUI Cisco EID"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("guiCiscoEID", prop)

    prop = PropMeta("str", "guiCiscoPID", "guiCiscoPID", 3907, PropCategory.REGULAR)
    prop.label = "GUI Cisco PID"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("guiCiscoPID", prop)

    prop = PropMeta("str", "guiCiscoPN", "guiCiscoPN", 3906, PropCategory.REGULAR)
    prop.label = "GUI Cisco PN"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("guiCiscoPN", prop)

    prop = PropMeta("str", "guiName", "guiName", 3902, PropCategory.REGULAR)
    prop.label = "GUI Name"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("guiName", prop)

    prop = PropMeta("str", "guiPN", "guiPN", 3903, PropCategory.REGULAR)
    prop.label = "GUI PN"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("guiPN", prop)

    prop = PropMeta("str", "guiRev", "guiRev", 3904, PropCategory.REGULAR)
    prop.label = "GUI Rev"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("guiRev", prop)

    prop = PropMeta("str", "guiSN", "guiSN", 3905, PropCategory.REGULAR)
    prop.label = "GUI SN"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("guiSN", prop)

    prop = PropMeta("str", "hostElectricalInterfaceCode", "hostElectricalInterfaceCode", 55694, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("hostElectricalInterfaceCode", prop)

    prop = PropMeta("str", "isFcotPresent", "isFcotPresent", 3898, PropCategory.REGULAR)
    prop.label = "Presence Status"
    prop.isOper = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("isFcotPresent", prop)

    prop = PropMeta("str", "maxPower", "maxPower", 55688, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("maxPower", prop)

    prop = PropMeta("str", "maxSpeed", "maxSpeed", 52975, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("maxSpeed", prop)

    prop = PropMeta("str", "mediaInterface", "mediaInterface", 55692, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("mediaInterface", prop)

    prop = PropMeta("str", "mediaInterfaceAdvertisingCode", "mediaInterfaceAdvertisingCode", 55695, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("mediaInterfaceAdvertisingCode", prop)

    prop = PropMeta("str", "minSpeed", "minSpeed", 52976, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("minSpeed", prop)

    prop = PropMeta("str", "modAdvCode", "modAdvCode", 52967, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("modAdvCode", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 52988, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "nearEndLanesUsed", "nearEndLanesUsed", 55690, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("nearEndLanesUsed", prop)

    prop = PropMeta("str", "partNumber", "partNumber", 3895, PropCategory.REGULAR)
    prop.label = "Part Number"
    prop.isOper = True
    meta.props.add("partNumber", prop)

    prop = PropMeta("str", "powerClass", "powerClass", 55687, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("powerClass", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "state", "state", 3899, PropCategory.REGULAR)
    prop.label = "State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("hw-failure", "hw-failure", 3)
    prop._addConstant("inserted", "inserted", 1)
    prop._addConstant("inserted-initializing", "inserted-initializing", 4)
    prop._addConstant("removed", "removed", 2)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("state", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "type", "type", 3901, PropCategory.REGULAR)
    prop.label = "Type"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("cfp", "cfp", 8)
    prop._addConstant("cfp-100g", "cfp-100g", 7)
    prop._addConstant("cfp-40g", "cfp-40g", 6)
    prop._addConstant("dummy", "dummy", 3)
    prop._addConstant("qsa", "qsa", 12)
    prop._addConstant("qsfp", "qsfp", 5)
    prop._addConstant("qsfp28", "qsfp28", 10)
    prop._addConstant("qsfpdd", "qsfpdd", 11)
    prop._addConstant("sfp", "sfp", 4)
    prop._addConstant("sfp28", "sfp28", 9)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("x2", "x2", 2)
    prop._addConstant("xfp", "xfp", 1)
    meta.props.add("type", prop)

    prop = PropMeta("str", "typeName", "typeName", 18085, PropCategory.REGULAR)
    prop.label = "Type Name"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("typeName", prop)

    prop = PropMeta("str", "vendorName", "vendorName", 52968, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("vendorName", prop)

    prop = PropMeta("str", "vendorOui", "vendorOui", 55685, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("vendorOui", prop)

    prop = PropMeta("str", "vendorPn", "vendorPn", 52969, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("vendorPn", prop)

    prop = PropMeta("str", "vendorRev", "vendorRev", 52970, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("vendorRev", prop)

    prop = PropMeta("str", "vendorSerNo", "vendorSerNo", 52971, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("vendorSerNo", prop)

    prop = PropMeta("str", "verId", "verId", 52966, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("verId", prop)

    prop = PropMeta("str", "versionId", "versionId", 3896, PropCategory.REGULAR)
    prop.label = "Version ID"
    prop.isOper = True
    meta.props.add("versionId", prop)

    prop = PropMeta("str", "xcvrExtId", "xcvrExtId", 55986, PropCategory.REGULAR)
    prop.label = "Transceiver Extended ID"
    prop.isOper = True
    meta.props.add("xcvrExtId", prop)

    prop = PropMeta("str", "xcvrId", "xcvrId", 55985, PropCategory.REGULAR)
    prop.label = "Transceiver ID"
    prop.isOper = True
    meta.props.add("xcvrId", prop)

    prop = PropMeta("str", "xcvrType", "xcvrType", 52965, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("xcvrType", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("l1EthIfToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

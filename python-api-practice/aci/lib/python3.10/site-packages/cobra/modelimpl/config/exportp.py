# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class ExportP(Mo):
    """
    A configuration export policy is used to backup the system configuration.

    """

    meta = ClassMeta("cobra.model.config.ExportP")

    meta.moClassName = "configExportP"
    meta.rnFormat = "configexp-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Configuration Export Policy"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.config.RsExportDestination")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.trig.RsTriggerable")
    meta.childClasses.add("cobra.model.config.RsRemotePath")
    meta.childClasses.add("cobra.model.config.RtDbgrConfigExportP")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.config.RsExportScheduler")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.config.RtDbgrConfigExportP", "rtpolDbgrConfigExportP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.config.RsExportDestination", "rsExportDestination"))
    meta.childNamesAndRnPrefix.append(("cobra.model.config.RsExportScheduler", "rsExportScheduler"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.trig.RsTriggerable", "rsTriggerable"))
    meta.childNamesAndRnPrefix.append(("cobra.model.config.RsRemotePath", "rsRemotePath"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.fabric.Inst")
    meta.parentClasses.add("cobra.model.config.Job")

    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.trig.Executable")
    meta.superClasses.add("cobra.model.pol.Comp")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.config.ABackupP")

    meta.rnPrefixes = [
        ('configexp-', True),
    ]

    prop = PropMeta("str", "adminSt", "adminSt", 1665, PropCategory.REGULAR)
    prop.label = "Administrative State"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "untriggered"
    prop._addConstant("triggered", "yes", 1)
    prop._addConstant("untriggered", "no", 0)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "annotation", "annotation", 37298, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5582, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 39437, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "format", "format", 440, PropCategory.REGULAR)
    prop.label = "Export Format"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "json"
    prop._addConstant("json", "json", 1)
    prop._addConstant("xml", "xml", 0)
    meta.props.add("format", prop)

    prop = PropMeta("str", "includeSecureFields", "includeSecureFields", 21513, PropCategory.REGULAR)
    prop.label = "Include secure fields in export"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = True
    prop.defaultValueStr = "yes"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("includeSecureFields", prop)

    prop = PropMeta("str", "internalSource", "internalSource", 45516, PropCategory.REGULAR)
    prop.label = "Internal Trigger Source"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("internalSource", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "maxSnapshotCount", "maxSnapshotCount", 22548, PropCategory.REGULAR)
    prop.label = "Maximum snapshot file count for this policy"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 10)]
    prop.defaultValue = 0
    prop.defaultValueStr = "global-limit"
    prop._addConstant("global-limit", "global-limit", 0)
    meta.props.add("maxSnapshotCount", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 13800, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 5991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "seqNum", "seqNum", 15995, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("seqNum", prop)

    prop = PropMeta("str", "snapshot", "snapshot", 20142, PropCategory.REGULAR)
    prop.label = "Snapshot backup job, use controller storage"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("snapshot", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "targetDn", "targetDn", 441, PropCategory.REGULAR)
    prop.label = "DN to Export"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("targetDn", prop)

    prop = PropMeta("str", "triggerTime", "triggerTime", 1666, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("triggerTime", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    prop = PropMeta("str", "userName", "userName", 439, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("userName", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class EPGTarget(Mo):
    """
    Creating a monitoring target will allow you to associate certain monitoring policies to the target object for this tenant. These associated policies can be related to stats collection, stats export, Callhome/SNMP/Syslog, event severities, fault severities, and fault lifecycle policies. The target object will be found in the Monitoring Object drop-down menu in the sub-folders of this monitoring policy, if available.

    """

    meta = ClassMeta("cobra.model.mon.EPGTarget")

    meta.moClassName = "monEPGTarget"
    meta.rnFormat = "tarepg-%(scope)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Monitoring Target"
    meta.writeAccessMask = 0x800000000200001
    meta.readAccessMask = 0x800040000200001
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.stats.Reportable")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.syslog.Src")
    meta.childClasses.add("cobra.model.fault.LcP")
    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.snmp.Src")
    meta.childClasses.add("cobra.model.stats.HierColl")
    meta.childClasses.add("cobra.model.event.SevAsnP")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.tacacs.Src")
    meta.childClasses.add("cobra.model.callhome.Src")
    meta.childClasses.add("cobra.model.health.Pol")
    meta.childClasses.add("cobra.model.callhome.SmartSrc")
    meta.childClasses.add("cobra.model.stats.ExportP")
    meta.childClasses.add("cobra.model.tag.Annotation")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.fault.SevAsnP")

    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tacacs.Src", "tacacssrc-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.callhome.SmartSrc", "smartchsrc"))
    meta.childNamesAndRnPrefix.append(("cobra.model.snmp.Src", "snmpsrc-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Pol", "health-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.syslog.Src", "slsrc-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.event.SevAsnP", "esevp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.callhome.Src", "chsrc-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.SevAsnP", "fsevp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.stats.Reportable", "stat-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.LcP", "flcp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.stats.HierColl", "coll-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.stats.ExportP", "exp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.mon.EPGPol")

    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Comp")
    meta.superClasses.add("cobra.model.mon.Target")
    meta.superClasses.add("cobra.model.mon.ATarget")

    meta.rnPrefixes = [
        ('tarepg-', True),
    ]

    prop = PropMeta("str", "annotation", "annotation", 37296, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5582, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 39435, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 13798, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "scope", "scope", 433, PropCategory.REGULAR)
    prop.label = "Target Scope"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("aaaDomainRef", "reference-to-domain-tag-for-parent-object-(aaa.domainref)", 1562)
    prop._addConstant("aaaIDomainRef", "reference-to-domain-tag-for-parent-object-(aaa.idomainref)", 5294)
    prop._addConstant("aaaPartialRbacRule", "partial-rbac-rule-(aaa.partialrbacrule)", 6801)
    prop._addConstant("actrlMgmtRule", "managment-rule-(actrl.mgmtrule)", 2483)
    prop._addConstant("actrlRule", "rule-(actrl.rule)", 2481)
    prop._addConstant("authRsSvrToMonPol", "monitoring-policy-(auth.rssvrtomonpol)", 12670)
    prop._addConstant("authSvr", "auth-server-(auth.svr)", 12667)
    prop._addConstant("authSvrGroup", "auth-server-group-(auth.svrgroup)", 12666)
    prop._addConstant("bfdIfP", "interface-profile-(bfd.ifp)", 8228)
    prop._addConstant("bfdRsIfPol", "interface-policy-(bfd.rsifpol)", 8229)
    prop._addConstant("bgpAsP", "autonomous-system-profile-(bgp.asp)", 637)
    prop._addConstant("bgpCtxPol", "bgp-timers-policy-(bgp.ctxpol)", 643)
    prop._addConstant("bgpExtP", "external-profile-(bgp.extp)", 653)
    prop._addConstant("bgpInfraPeerDef", "infra-peer-connectivity-profile-definition-(bgp.infrapeerdef)", 7225)
    prop._addConstant("bgpInfraPeerP", "infra-peer-connectivity-profile-(bgp.infrapeerp)", 7223)
    prop._addConstant("bgpLocalAsnP", "local-autonomous-system-profile-(bgp.localasnp)", 5888)
    prop._addConstant("bgpPeerDef", "peer-connectivity-profile-definition-(bgp.peerdef)", 651)
    prop._addConstant("bgpPeerP", "peer-connectivity-profile-(bgp.peerp)", 648)
    prop._addConstant("bgpProtP", "protocol-profile-(bgp.protp)", 9549)
    prop._addConstant("bgpRsBestPathCtrlPol", "as-path-policy-(bgp.rsbestpathctrlpol)", 16206)
    prop._addConstant("bgpRsBgpNodeCtxPol", "bgp-context-policy-per-profile-(bgp.rsbgpnodectxpol)", 9550)
    prop._addConstant("bgpRsPeerPfxPol", "peer-prefix-policy-(bgp.rspeerpfxpol)", 649)
    prop._addConstant("bgpRsPeerToProfile", "route-control-profile-(bgp.rspeertoprofile)", 16017)
    prop._addConstant("callhomeRsDestGroup", "relation-to-callhome-destination-group-(callhome.rsdestgroup)", 1695)
    prop._addConstant("callhomeRsQueryGroupRel", "relation-to-callhome-querygroup-(callhome.rsquerygrouprel)", 1697)
    prop._addConstant("callhomeRsSmartdestGroup", "relation-to-callhome-destination-smart-group-(callhome.rssmartdestgroup)", 11767)
    prop._addConstant("callhomeSmartSrc", "smart-callhome-source-(callhome.smartsrc)", 11766)
    prop._addConstant("callhomeSrc", "callhome-source-(callhome.src)", 1694)
    prop._addConstant("cloudAccount", "account-(cloud.account)", 16110)
    prop._addConstant("cloudApp", "cloud-application-container-(cloud.app)", 14640)
    prop._addConstant("cloudAwsFlowLogPol", "flow-log-policy-(cloud.awsflowlogpol)", 14630)
    prop._addConstant("cloudCDevDef", "cloud-cdev-resolved-data-(cloud.cdevdef)", 15161)
    prop._addConstant("cloudCertStore", "certificate-store-(cloud.certstore)", 15191)
    prop._addConstant("cloudCidr", "cloud-cidr-pool-(cloud.cidr)", 14604)
    prop._addConstant("cloudCredentials", "access-credential-to-manage-the-cloud-resources-(cloud.credentials)", 16113)
    prop._addConstant("cloudCtxProfile", "cloud-context-profile-(cloud.ctxprofile)", 14596)
    prop._addConstant("cloudEPg", "cloud-epg-(cloud.epg)", 14644)
    prop._addConstant("cloudEpInfoHolder", "endpoint-stats-holder-(cloud.epinfoholder)", 15237)
    prop._addConstant("cloudEpP", "cloud-epg-resolved-(cloud.epp)", 14617)
    prop._addConstant("cloudExtEPg", "cloud-external-epg-(cloud.extepg)", 14645)
    prop._addConstant("cloudExtNetworkP", "external-network-policy-(cloud.extnetworkp)", 14409)
    prop._addConstant("cloudHostIfP", "cloud-host-router-interface-profile-(cloud.hostifp)", 14422)
    prop._addConstant("cloudHostRouterInfoHolder", "hostrouter-stats-holder-(cloud.hostrouterinfoholder)", 15867)
    prop._addConstant("cloudHostRouterRgInfoHolder", "hostrouter-region-stats-holder-(cloud.hostrouterrginfoholder)", 15865)
    prop._addConstant("cloudHostRouterToInfoHolder", "to-region/ip-stats-holder-(cloud.hostroutertoinfoholder)", 15868)
    prop._addConstant("cloudHostRouterTunnelInfoHolder", "hostrouter-tunnel-stats-holder-(cloud.hostroutertunnelinfoholder)", 15869)
    prop._addConstant("cloudHostRouterUserRgInfoHolder", "hostrouter-user-region-stats-holder-(cloud.hostrouteruserrginfoholder)", 15866)
    prop._addConstant("cloudISvcEPg", "cloud-implicit-service-epg-(cloud.isvcepg)", 15164)
    prop._addConstant("cloudIntNetworkP", "internal-network-policy-(cloud.intnetworkp)", 14407)
    prop._addConstant("cloudIpSecTunnelIfP", "ipsec-specific-l3tunnelifp-(cloud.ipsectunnelifp)", 14434)
    prop._addConstant("cloudL3TunnelIfP", "l3-tunnel-interface-policy-(cloud.l3tunnelifp)", 14432)
    prop._addConstant("cloudLB", "cloud-l4-l7-load-balancer-(cloud.lb)", 15157)
    prop._addConstant("cloudLDevDef", "cloud-ldev-resolved-data-(cloud.ldevdef)", 15160)
    prop._addConstant("cloudLIfDef", "cloud-lif-resolved-data-(cloud.lifdef)", 15162)
    prop._addConstant("cloudListener", "cloud-load-balancer-listener-(cloud.listener)", 15167)
    prop._addConstant("cloudListenerDef", "resolved-cloud-load-balancer-listener-(cloud.listenerdef)", 15185)
    prop._addConstant("cloudListenerRuleDef", "resolved-cloud-load-balancer-listener-rule-(cloud.listenerruledef)", 15187)
    prop._addConstant("cloudRgInfoHolder", "epg-region-stats-holder-(cloud.rginfoholder)", 15232)
    prop._addConstant("cloudRouterP", "cloud-router-profile-(cloud.routerp)", 14399)
    prop._addConstant("cloudRsAD", "attachment-to-billing-account-(cloud.rsad)", 16114)
    prop._addConstant("cloudRsActionDefToPoolDef", "relation-from-resolved-listener-rule-action-to-pool-(cloud.rsactiondeftopooldef)", 15325)
    prop._addConstant("cloudRsCloudEPgCtx", "relationship-to-the-fvctx-of-belonging-(cloud.rscloudepgctx)", 14642)
    prop._addConstant("cloudRsCredentials", "credentials-to-use-to-manage-the-account-(cloud.rscredentials)", 16111)
    prop._addConstant("cloudRsCtxProfileToRegion", "attachment-to-cloud-region-(cloud.rsctxprofiletoregion)", 14599)
    prop._addConstant("cloudRsCtxProfileToStatsPol", "attachment-to-stats-pol-(cloud.rsctxprofiletostatspol)", 16347)
    prop._addConstant("cloudRsCtxToFlowLog", "relationship-to-flow-log-policy-(cloud.rsctxtoflowlog)", 14601)
    prop._addConstant("cloudRsISvcEPgCtx", "relationship-to-the-fvctx-of-belonging-(cloud.rsisvcepgctx)", 15502)
    prop._addConstant("cloudRsIsakmpPhase1Pol", "isakmp-phase1-policy-(cloud.rsisakmpphase1pol)", 14435)
    prop._addConstant("cloudRsIsakmpPhase2Pol", "isakmp-phase2-policy-(cloud.rsisakmpphase2pol)", 14437)
    prop._addConstant("cloudRsLDevToCloudSubnet", "relation-from-cloud-ldev-to-cloud-subnet-(cloud.rsldevtocloudsubnet)", 15155)
    prop._addConstant("cloudRsListenerToCert", "relation-from-listener-to-certificate-(cloud.rslistenertocert)", 15170)
    prop._addConstant("cloudRsToCtx", "attachment-to-fvctx-(cloud.rstoctx)", 14597)
    prop._addConstant("cloudRsToHostRouterPol", "attachment-to-host-router-pol-(cloud.rstohostrouterpol)", 14404)
    prop._addConstant("cloudRsToLogGrp", "relationship-to-log-group-(cloud.rstologgrp)", 14631)
    prop._addConstant("cloudRsToVpnGwPol", "attachment-to-vpn-gw-pol-(cloud.rstovpngwpol)", 14400)
    prop._addConstant("cloudRsZoneAttach", "attachment-to-cloud-zone-(cloud.rszoneattach)", 14607)
    prop._addConstant("cloudRtCloudAccount", "tenant-(cloud.rtcloudaccount)", 16119)
    prop._addConstant("cloudRuleActionDef", "resolved-cloud-load-balancer-listener-rule-action-(cloud.ruleactiondef)", 15189)
    prop._addConstant("cloudSubnet", "cloud-subnet-(cloud.subnet)", 14606)
    prop._addConstant("cloudSvcPolicy", "cloud-load-balancer-policy-(cloud.svcpolicy)", 15165)
    prop._addConstant("cloudSvcPolicyDef", "resolved-cloud-load-balancer-policy-(cloud.svcpolicydef)", 15184)
    prop._addConstant("cloudsecCapabilityLocal", "cloudsec-local-site-capability-exchanged-with-msc-(cloudsec.capabilitylocal)", 12979)
    prop._addConstant("cloudsecControl", "cloudsec-site-control-(cloudsec.control)", 12288)
    prop._addConstant("cloudsecIfPol", "cloudsec-interface-policy-(cloudsec.ifpol)", 12289)
    prop._addConstant("cloudsecPreSharedKey", "cloudsec-pre-shared-key-(cloudsec.presharedkey)", 12291)
    prop._addConstant("compDNic", "discovered-nic-(comp.dnic)", 1128)
    prop._addConstant("compEpPConn", "endpoint-to-epg-connection-(comp.eppconn)", 1263)
    prop._addConstant("compPrimaryEncapDef", "primary-encap-(comp.primaryencapdef)", 8258)
    prop._addConstant("compRsUsegEpPD", "vmm-port-group-(comp.rsusegeppd)", 7973)
    prop._addConstant("compVNic", "vm-virtual-interface-(comp.vnic)", 1125)
    prop._addConstant("compVm", "virtual-machine-(comp.vm)", 1294)
    prop._addConstant("dbgacAnyToEp", "any-to-an-end-point-atomic-counter-policy-(dbgac.anytoep)", 4094)
    prop._addConstant("dbgacEpToAny", "end-point-to-any-atomic-counter-policy-(dbgac.eptoany)", 4093)
    prop._addConstant("dbgacEpToEp", "end-point-to-end-point-atomic-counter-policy-(dbgac.eptoep)", 4095)
    prop._addConstant("dbgacEpToEpg", "from-an-ep-to-an-epg-atomic-counter-policy-(dbgac.eptoepg)", 4081)
    prop._addConstant("dbgacEpToExt", "end-point-to-ext.-ip-address-atomic-counter-policy-(dbgac.eptoext)", 4098)
    prop._addConstant("dbgacEpgToEp", "from-an-epg-to-an-ep-atomic-counter-policy-(dbgac.epgtoep)", 4084)
    prop._addConstant("dbgacEpgToEpg", "application-component-to-aplication-component-atomic-counter-policy-(dbgac.epgtoepg)", 4072)
    prop._addConstant("dbgacEpgToIp", "end-point-group-to-an-external-ip-address-atomic-counter-policy-(dbgac.epgtoip)", 4075)
    prop._addConstant("dbgacExtToEp", "ext-ip-address-to-end-point-atomic-counter-policy-(dbgac.exttoep)", 4101)
    prop._addConstant("dbgacFromEpgSummary", "summary-of-source-epg-mo-(dbgac.fromepgsummary)", 4016)
    prop._addConstant("dbgacIpToEpg", "from-an-extipernal-ip-address-to-an-epg-atomic-counter-policy-(dbgac.iptoepg)", 4078)
    prop._addConstant("dbgacIpToIp", "ext-ip-address-to-ext-ip-address-atomic-counter-policy-(dbgac.iptoip)", 7823)
    prop._addConstant("dbgacL3OutCont", "atomic-counter-l3out-container-mo-(dbgac.l3outcont)", 7901)
    prop._addConstant("dbgacRsAcExtPolToContext", "context-name-(dbgac.rsacextpoltocontext)", 7899)
    prop._addConstant("dbgacRsContext", "context-name-(dbgac.rscontext)", 7824)
    prop._addConstant("dbgacRsFromAbsEpg", "source-l3out-epg-relation-for-atomic-counter-policy-(dbgac.rsfromabsepg)", 6262)
    prop._addConstant("dbgacRsFromEp", "source-ep-relation-for-atomic-counter-policy-(dbgac.rsfromep)", 4088)
    prop._addConstant("dbgacRsFromEpForEpToEpg", "source-ep-relation-for-ep-to-epg-atomic-counter-policy-(dbgac.rsfromepforeptoepg)", 4082)
    prop._addConstant("dbgacRsFromEpIp", "source-ep-relation-for-atomic-counter-policy-(dbgac.rsfromepip)", 5344)
    prop._addConstant("dbgacRsFromEpIpForEpToEpg", "source-ep-relation-for-ep-to-epg-atomic-counter-policy-(dbgac.rsfromepipforeptoepg)", 5340)
    prop._addConstant("dbgacRsFromEpg", "source-epg-relation-for-atomic-counter-policy-(dbgac.rsfromepg)", 4067)
    prop._addConstant("dbgacRsFromLDevForExtToEp", "source-ldev-relation-for-ext.-ip-to-end-point-address-atomic-counter-policy-(dbgac.rsfromldevforexttoep)", 4102)
    prop._addConstant("dbgacRsFromLDevForIpToEpg", "source-ldev-relation-for-ip-to-epg-atomic-counter-policy-(dbgac.rsfromldevforiptoepg)", 4079)
    prop._addConstant("dbgacRsToAbsEpg", "destination-l3out-epg-relation-for-atomic-counter-policy-(dbgac.rstoabsepg)", 6264)
    prop._addConstant("dbgacRsToAbsEpgForEpgToEpg", "destination-l3out-epg-relation-for-atomic-counter-policy-(dbgac.rstoabsepgforepgtoepg)", 11261)
    prop._addConstant("dbgacRsToEp", "destination-ep-relation-for-atomic-counter-policy-(dbgac.rstoep)", 4091)
    prop._addConstant("dbgacRsToEpForEpToEp", "destination-ep-relation-for-end-point-to-end-point-atomic-counter-policy-(dbgac.rstoepforeptoep)", 4096)
    prop._addConstant("dbgacRsToEpForEpgToEp", "destination-ep-relation-for-epg-to-ep-atomic-counter-policy-(dbgac.rstoepforepgtoep)", 4085)
    prop._addConstant("dbgacRsToEpIp", "destination-ep-relation-for-atomic-counter-policy-(dbgac.rstoepip)", 5346)
    prop._addConstant("dbgacRsToEpIpForEpToEp", "destination-ep-relation-for-end-point-to-end-point-atomic-counter-policy-(dbgac.rstoepipforeptoep)", 5348)
    prop._addConstant("dbgacRsToEpIpForEpgToEp", "destination-ep-relation-for-epg-to-ep-atomic-counter-policy-(dbgac.rstoepipforepgtoep)", 5342)
    prop._addConstant("dbgacRsToEpg", "destination-epg-relation-for-atomic-counter-policy-(dbgac.rstoepg)", 4070)
    prop._addConstant("dbgacRsToEpgForEpgToEpg", "destination-epg-relation-for-epg-to-epg-atomic-counter-policy-(dbgac.rstoepgforepgtoepg)", 4073)
    prop._addConstant("dbgacRsToLDevForEpToExt", "destination-ldev-relation-for-end-point-to-ext.-ip-address-atomic-counter-policy-(dbgac.rstoldevforeptoext)", 4099)
    prop._addConstant("dbgacRsToLDevForEpgToIp", "destination-ldev-relation-for-epg-to-ip-atomic-counter-policy-(dbgac.rstoldevforepgtoip)", 4076)
    prop._addConstant("dbgacTenantSpaceCmnDef", "tenant-atomic-counter-policy-definition-(dbgac.tenantspacecmndef)", 4011)
    prop._addConstant("dbgacToEpgSummary", "summary-of-destination-epg-mo-(dbgac.toepgsummary)", 4017)
    prop._addConstant("dhcpCRelPg", "dhcp-relay-epg-(dhcp.crelpg)", 1467)
    prop._addConstant("dhcpDiscNode", "dhcp-discovered-client-node-(dhcp.discnode)", 2705)
    prop._addConstant("dhcpLbl", "dhcp-relay-label-(dhcp.lbl)", 1434)
    prop._addConstant("dhcpLblDef", "dhcp-relay-label-(dhcp.lbldef)", 1437)
    prop._addConstant("dhcpOptionDef", "dhcp-option-(dhcp.optiondef)", 1446)
    prop._addConstant("dhcpPRelPg", "dhcp-relay-function-provider-(dhcp.prelpg)", 1466)
    prop._addConstant("dhcpProvDhcp", "dhcp-provider-(dhcp.provdhcp)", 1464)
    prop._addConstant("dhcpRelayP", "dhcp-relay-policy-(dhcp.relayp)", 1430)
    prop._addConstant("dhcpRsDhcpOptionPol", "dhcp-option-policy-(dhcp.rsdhcpoptionpol)", 1435)
    prop._addConstant("dhcpRsLblDefToRelayP", "dhcp-relay-policy-(dhcp.rslbldeftorelayp)", 1438)
    prop._addConstant("dhcpRsProv", "dhcp-provider-(dhcp.rsprov)", 1431)
    prop._addConstant("dnsLblDef", "dns-profile-label-(dns.lbldef)", 287)
    prop._addConstant("dnsRsDnsProfile", "dns-policy-(dns.rsdnsprofile)", 288)
    prop._addConstant("dnsepgDomain", "dns-domain-(dnsepg.domain)", 10677)
    prop._addConstant("dnsepgNwIssues", "dns-server-(dnsepg.nwissues)", 10781)
    prop._addConstant("dnsepgRsSvrEpg", "relation-from-a-dnsepgsvrgrp-to-an-epg-(dnsepg.rssvrepg)", 10670)
    prop._addConstant("dnsepgSvr", "dns-server-(dnsepg.svr)", 10675)
    prop._addConstant("dnsepgSvrGrp", "dns-server-group-(dnsepg.svrgrp)", 10672)
    prop._addConstant("eigrpAuthIfP", "keychainpol-holder-mo-(eigrp.authifp)", 14319)
    prop._addConstant("eigrpIfP", "interface-profile-(eigrp.ifp)", 6044)
    prop._addConstant("eigrpRsIfPol", "interface-policy-(eigrp.rsifpol)", 6045)
    prop._addConstant("eigrpRsKeyChainPol", "keychain-policy-(eigrp.rskeychainpol)", 14320)
    prop._addConstant("epmAnycastIpEp", "anycast-fault-ip-endpoint-(epm.anycastipep)", 11957)
    prop._addConstant("epmDb", "database-(epm.db)", 2269)
    prop._addConstant("epmRogueIpEp", "ip-endpoint-(epm.rogueipep)", 11385)
    prop._addConstant("epmRogueMacEp", "mac-endpoint-(epm.roguemacep)", 11785)
    prop._addConstant("epmSviIpEp", "ip-endpoint-(epm.sviipep)", 11386)
    prop._addConstant("eventSevAsnP", "event-severity-assignment-policy-(event.sevasnp)", 1684)
    prop._addConstant("faultSevAsnP", "fault-severity-assignment-policy-(fault.sevasnp)", 1733)
    prop._addConstant("fileRsARemoteHostToEpp", "relation-to-remote-host-reachability-epp-(file.rsaremotehosttoepp)", 5360)
    prop._addConstant("fmcastTree", "multicast-tree-(fmcast.tree)", 3603)
    prop._addConstant("fvAEPg", "application-epg-(fv.aepg)", 1981)
    prop._addConstant("fvAEPgCont", "application-epg-container-(fv.aepgcont)", 2081)
    prop._addConstant("fvAEPgLagPolAtt", "application-epg-lag-policy-(fv.aepglagpolatt)", 13009)
    prop._addConstant("fvAp", "application-profile-(fv.ap)", 1978)
    prop._addConstant("fvAttEntPDepl", "attached-entity-profile-deployment-(fv.attentpdepl)", 1844)
    prop._addConstant("fvAttEntityPathAtt", "epg-to-path-attachment-(fv.attentitypathatt)", 1957)
    prop._addConstant("fvBD", "bridge-domain-(fv.bd)", 1887)
    prop._addConstant("fvBDConfigIssues", "bd-configuration-issues-(fv.bdconfigissues)", 2118)
    prop._addConstant("fvBDDef", "bridge-domain-(fv.bddef)", 1871)
    prop._addConstant("fvBDHolder", "bridge-domain-holder-(fv.bdholder)", 5546)
    prop._addConstant("fvBDPublicSubnetHolder", "bridge-domain-public-subnet-holder-(fv.bdpublicsubnetholder)", 6846)
    prop._addConstant("fvBrEpP", "bridged-external-epp-(fv.brepp)", 1928)
    prop._addConstant("fvCEp", "client-end-point-(fv.cep)", 2033)
    prop._addConstant("fvCollectionCont", "contract-container-(fv.collectioncont)", 2083)
    prop._addConstant("fvConnDef", "connection-(fv.conndef)", 1922)
    prop._addConstant("fvCtrctCtxDefCont", "internal-mo-used-to-update-context-shard-with-contract-info-(fv.ctrctctxdefcont)", 5501)
    prop._addConstant("fvCtx", "vrf-(fv.ctx)", 1997)
    prop._addConstant("fvCtxConfigIssues", "ctx-configuration-issues-(fv.ctxconfigissues)", 2117)
    prop._addConstant("fvCtxDef", "private-network-(fv.ctxdef)", 2008)
    prop._addConstant("fvCtxSharedServiceUpdate", "ctx-shared-service-update-(fv.ctxsharedserviceupdate)", 7215)
    prop._addConstant("fvDomCont", "domain-container-(fv.domcont)", 1851)
    prop._addConstant("fvDomDef", "domain-(fv.domdef)", 1852)
    prop._addConstant("fvDyNodeAtt", "epg-to-path-attachment-(fv.dynodeatt)", 16505)
    prop._addConstant("fvDyPathAtt", "epg-to-path-attachment-(fv.dypathatt)", 1962)
    prop._addConstant("fvEPgSummaryDef", "to-fix---fv.epgsummarydef", 9531)
    prop._addConstant("fvEpAnycast", "anycast-endpoint-(fv.epanycast)", 11717)
    prop._addConstant("fvEpCont", "end-point-container-(fv.epcont)", 2027)
    prop._addConstant("fvEpDef", "endpoint-(fv.epdef)", 2051)
    prop._addConstant("fvEpDefRef", "endpoint-(fv.epdefref)", 2056)
    prop._addConstant("fvEpNlb", "nlb-endpoint-(fv.epnlb)", 14210)
    prop._addConstant("fvEpP", "end-point-group-(fv.epp)", 1936)
    prop._addConstant("fvEpPCont", "endpoint-profile-container-(fv.eppcont)", 1921)
    prop._addConstant("fvEpReachability", "epreachability-(fv.epreachability)", 10716)
    prop._addConstant("fvExtRoutableRemoteSitePodSubnet", "external-routable-pod-subnet-associated-with-remote-site-(fv.extroutableremotesitepodsubnet)", 14193)
    prop._addConstant("fvExtRoutableUcastConnP", "unicast-dtep-ip-for-a-pod-(fv.extroutableucastconnp)", 13186)
    prop._addConstant("fvExtStPathAtt", "epg-to-path-attachment-(fv.extstpathatt)", 1961)
    prop._addConstant("fvFabricExtConnP", "intrasite/intersite-profile-(fv.fabricextconnp)", 7258)
    prop._addConstant("fvIPSLAMonitoringPol", "ip-sla-monitoring-policy-(fv.ipslamonitoringpol)", 10951)
    prop._addConstant("fvIfConn", "interface-connectivity-(fv.ifconn)", 1949)
    prop._addConstant("fvImplEpAnycast", "anycast-endpoint-(fv.implepanycast)", 11820)
    prop._addConstant("fvImplSubnet", "implsubnet-(fv.implsubnet)", 5335)
    prop._addConstant("fvInBEpP", "in-band-management-endpoint-profile-(fv.inbepp)", 1941)
    prop._addConstant("fvInstPEpP", "management-instance-profile-(fv.instpepp)", 5268)
    prop._addConstant("fvIntersiteConnP", "intersite-anycast-dtep-ip-for-a-pod-(fv.intersiteconnp)", 9985)
    prop._addConstant("fvIntersiteMcastConnP", "intersite-anycast-dtep-ip-for-a-pod-(fv.intersitemcastconnp)", 9986)
    prop._addConstant("fvIntersitePeeringP", "bgp-evpn-intersite-peering-profile-(fv.intersitepeeringp)", 9833)
    prop._addConstant("fvIp", "endpoint-ip-address-(fv.ip)", 5205)
    prop._addConstant("fvKeyChainPol", "tenant-keychain-policy-(fv.keychainpol)", 14328)
    prop._addConstant("fvKeyPol", "key-policy-(fv.keypol)", 14332)
    prop._addConstant("fvL3EpCont", "end-point-container-(fv.l3epcont)", 15529)
    prop._addConstant("fvL3EpDef", "endpoint-(fv.l3epdef)", 12963)
    prop._addConstant("fvLocale", "fabric-location-(fv.locale)", 1967)
    prop._addConstant("fvMgmtDepl", "management-deployment-(fv.mgmtdepl)", 1842)
    prop._addConstant("fvNlbStaticGroup", "nlb-static-group-(fv.nlbstaticgroup)", 14208)
    prop._addConstant("fvNwIssues", "network-configuration-issues-(fv.nwissues)", 2113)
    prop._addConstant("fvOoBEpP", "out-of-band-management-endpoint-profile-(fv.oobepp)", 1940)
    prop._addConstant("fvOrchsInfo", "orchestrator-configuration-for-this-epg-(fv.orchsinfo)", 5566)
    prop._addConstant("fvOutCont", "l2-out-container-(fv.outcont)", 5338)
    prop._addConstant("fvPodConnP", "pod-anycast-dtep-ip-(fv.podconnp)", 7263)
    prop._addConstant("fvPolDeliveryStatus", "policy-delivery-status-(fv.poldeliverystatus)", 5283)
    prop._addConstant("fvProtEPg", "protected-epg-(fv.protepg)", 2078)
    prop._addConstant("fvRInfoHolder", "rule-info-holder-(fv.rinfoholder)", 1896)
    prop._addConstant("fvRemoteId", "remote-site-id-mappings-(fv.remoteid)", 9506)
    prop._addConstant("fvRsABDPolMonPol", "monitoring-policy-(fv.rsabdpolmonpol)", 1865)
    prop._addConstant("fvRsAEPgMonPol", "monitoring-policy-(fv.rsaepgmonpol)", 1861)
    prop._addConstant("fvRsApMonPol", "monitoring-policy-(fv.rsapmonpol)", 1859)
    prop._addConstant("fvRsBDSubnetToOut", "outside-(fv.rsbdsubnettoout)", 1835)
    prop._addConstant("fvRsBDSubnetToProfile", "route-control-profile-(fv.rsbdsubnettoprofile)", 1833)
    prop._addConstant("fvRsBDToFhs", "fhs-bd-policy-(fv.rsbdtofhs)", 10749)
    prop._addConstant("fvRsBDToNdP", "nd-policy-(fv.rsbdtondp)", 5984)
    prop._addConstant("fvRsBDToNetflowMonitorPol", "netflow-monitor-policy-(fv.rsbdtonetflowmonitorpol)", 9229)
    prop._addConstant("fvRsBDToOut", "outside-(fv.rsbdtoout)", 1883)
    prop._addConstant("fvRsBDToProfile", "route-control-profile-(fv.rsbdtoprofile)", 1881)
    prop._addConstant("fvRsBDToProfileDef", "route-control-profile-def-(fv.rsbdtoprofiledef)", 6855)
    prop._addConstant("fvRsBDToRelayP", "relay-profile-(fv.rsbdtorelayp)", 1885)
    prop._addConstant("fvRsBd", "bridge-domain-for-the-epg-(fv.rsbd)", 1988)
    prop._addConstant("fvRsBdFloodTo", "filter-(fv.rsbdfloodto)", 1879)
    prop._addConstant("fvRsBdToEpRet", "end-point-retention-policy-(fv.rsbdtoepret)", 1877)
    prop._addConstant("fvRsBgpCtxPol", "bgp-context-policy-(fv.rsbgpctxpol)", 2004)
    prop._addConstant("fvRsCloudAccount", "tenant-to-account-association-(fv.rscloudaccount)", 16118)
    prop._addConstant("fvRsCons", "contract-consumer-(fv.rscons)", 1904)
    prop._addConstant("fvRsConsIf", "contract-interface-(fv.rsconsif)", 1906)
    prop._addConstant("fvRsCtx", "private-network-(fv.rsctx)", 1873)
    prop._addConstant("fvRsCtxMonPol", "monitoring-policy-(fv.rsctxmonpol)", 1863)
    prop._addConstant("fvRsCtxToBgpCtxAfPol", "bgp-address-family-context-policy-(fv.rsctxtobgpctxafpol)", 5905)
    prop._addConstant("fvRsCtxToEigrpCtxAfPol", "eigrp-address-family-context-policy-(fv.rsctxtoeigrpctxafpol)", 6060)
    prop._addConstant("fvRsCtxToEpRet", "end-point-retention-policy-(fv.rsctxtoepret)", 1998)
    prop._addConstant("fvRsCtxToExtRouteTagPol", "relationship-to-external/transit-route-tag-policy-(fv.rsctxtoextroutetagpol)", 6250)
    prop._addConstant("fvRsCtxToOspfCtxPol", "ospf-context-policy-(fv.rsctxtoospfctxpol)", 5903)
    prop._addConstant("fvRsCtxToSDWanVpn", "relationship-to-external-sdwan-vpn-(fv.rsctxtosdwanvpn)", 16319)
    prop._addConstant("fvRsCustQosPol", "custom-qos-policy-(fv.rscustqospol)", 1900)
    prop._addConstant("fvRsDomAtt", "domain-(fv.rsdomatt)", 1986)
    prop._addConstant("fvRsDomDefNsLocal", "vxlan-pool-(fv.rsdomdefnslocal)", 1855)
    prop._addConstant("fvRsDppPol", "qos-dpp-policy-(fv.rsdpppol)", 10522)
    prop._addConstant("fvRsEppBgpCtxPol", "bgp-timers-policy-(fv.rseppbgpctxpol)", 1930)
    prop._addConstant("fvRsIgmpsn", "igmp-snoop-policy-(fv.rsigmpsn)", 1875)
    prop._addConstant("fvRsIntraEpg", "intra-epg-contract-(fv.rsintraepg)", 10690)
    prop._addConstant("fvRsIpslaMonPol", "track-member-to-ipsla-policy-(fv.rsipslamonpol)", 13174)
    prop._addConstant("fvRsMldsn", "mld-snoop-policy-(fv.rsmldsn)", 13616)
    prop._addConstant("fvRsNdPfxPol", "nd-prefix-policy-(fv.rsndpfxpol)", 6121)
    prop._addConstant("fvRsNodeAtt", "fabric-node-(fv.rsnodeatt)", 1982)
    prop._addConstant("fvRsNodePortAtt", "ethernet-interface-(fv.rsnodeportatt)", 1968)
    prop._addConstant("fvRsOspfCtxPol", "ospf-context-policy-(fv.rsospfctxpol)", 2006)
    prop._addConstant("fvRsOtmListMember", "track-list-to-track-member-relation-(fv.rsotmlistmember)", 13171)
    prop._addConstant("fvRsPathAtt", "static-path-(fv.rspathatt)", 1984)
    prop._addConstant("fvRsProtBy", "taboo-contract-association-(fv.rsprotby)", 1916)
    prop._addConstant("fvRsProv", "contract-provider-(fv.rsprov)", 1902)
    prop._addConstant("fvRsSecInherited", "security-inheritance-(fv.rssecinherited)", 10023)
    prop._addConstant("fvRsStGrpAtt", "abstraction-of-leaf-access-policy-group-(fv.rsstgrpatt)", 1955)
    prop._addConstant("fvRsStPathAtt", "network-path-endpoint-(fv.rsstpathatt)", 1953)
    prop._addConstant("fvRsTenantMonPol", "monitoring-policy-(fv.rstenantmonpol)", 1857)
    prop._addConstant("fvRsTnDenyRule", "deny-filters-(fv.rstndenyrule)", 1976)
    prop._addConstant("fvRsTnlCtx", "private-network-(fv.rstnlctx)", 9371)
    prop._addConstant("fvRsTrustCtrl", "fhs-trust-control-policy-(fv.rstrustctrl)", 9319)
    prop._addConstant("fvRsVmmVSwitchEnhancedLagPol", "relation-to-enhanced-lacp-lag-policy-(fv.rsvmmvswitchenhancedlagpol)", 13010)
    prop._addConstant("fvRsVrfValidationPol", "vrf-validation-policy-(fv.rsvrfvalidationpol)", 11388)
    prop._addConstant("fvRtAcExtPolToContext", "to-fix---fv.rtacextpoltocontext", 7900)
    prop._addConstant("fvRtDestEpg", "span-destination-(fv.rtdestepg)", 4161)
    prop._addConstant("fvRtProv", "dhcp-relay-policy-(fv.rtprov)", 1432)
    prop._addConstant("fvRtToEp", "atomic-counter-policy-with-ep-as-destination-(fv.rttoep)", 4092)
    prop._addConstant("fvRtToEpForEpToEp", "end-point-to-end-point-atomic-counter-policy-(fv.rttoepforeptoep)", 4097)
    prop._addConstant("fvRtToEpForEpgToEp", "from-an-epg-to-an-ep-atomic-counter-policy-(fv.rttoepforepgtoep)", 4086)
    prop._addConstant("fvRtToEpIp", "atomic-counter-policy-with-ep-as-destination-(fv.rttoepip)", 5347)
    prop._addConstant("fvRtToEpIpForEpToEp", "end-point-to-end-point-atomic-counter-policy-(fv.rttoepipforeptoep)", 5349)
    prop._addConstant("fvRtToEpIpForEpgToEp", "from-an-epg-to-an-ep-atomic-counter-policy-(fv.rttoepipforepgtoep)", 5343)
    prop._addConstant("fvRtToEpg", "abstract-object-with-destination-epg-for-atomic-counter-policy-(fv.rttoepg)", 4071)
    prop._addConstant("fvRtToEpgForEpgToEpg", "application-component-to-aplication-component-atomic-counter-policy-(fv.rttoepgforepgtoepg)", 4074)
    prop._addConstant("fvRtdEpP", "routed-external-epp-(fv.rtdepp)", 1929)
    prop._addConstant("fvSharedService", "alloc-pctag-from-shared-service-pool-(fv.sharedservice)", 5306)
    prop._addConstant("fvSiteAssociated", "remote-site-id-container-(fv.siteassociated)", 9505)
    prop._addConstant("fvSiteConnP", "intersite-anycast-dtep-ip-for-a-pod-(fv.siteconnp)", 9991)
    prop._addConstant("fvSlaDef", "ip-sla-monitoring-policy-def-mo-(fv.sladef)", 14199)
    prop._addConstant("fvStCEp", "static-end-point-(fv.stcep)", 2040)
    prop._addConstant("fvStNodeAtt", "epg-to-path-attachment-(fv.stnodeatt)", 16506)
    prop._addConstant("fvStPathAtt", "epg-to-path-attachment-(fv.stpathatt)", 1960)
    prop._addConstant("fvStorageIssues", "storage-configuration-issues-(fv.storageissues)", 2115)
    prop._addConstant("fvSubnet", "subnet-(fv.subnet)", 1832)
    prop._addConstant("fvSubnetBDDefCont", "implicit-bridge-domain-container-mo-used-to-update-bd-with-epg-subnet-info-(fv.subnetbddefcont)", 5498)
    prop._addConstant("fvSvcBD", "bridge-domain-(fv.svcbd)", 1888)
    prop._addConstant("fvSvcEpP", "service-endpoint-profile-(fv.svcepp)", 1942)
    prop._addConstant("fvTabooCtxDefCont", "internal-mo-used-to-update-context-shard-with-taboo-info-(fv.tabooctxdefcont)", 5500)
    prop._addConstant("fvTenant", "tenant-(fv.tenant)", 1975)
    prop._addConstant("fvTnlCtx", "tunnel-vrf-(fv.tnlctx)", 9373)
    prop._addConstant("fvTnlEPg", "dot1q-tunnel-(fv.tnlepg)", 9196)
    prop._addConstant("fvTnlEpP", "dot1q-tunnel-epp-(fv.tnlepp)", 9201)
    prop._addConstant("fvTrackList", "track-list-(fv.tracklist)", 13170)
    prop._addConstant("fvTrackMember", "track-member-(fv.trackmember)", 13173)
    prop._addConstant("fvTunDef", "tunnel-(fv.tundef)", 2062)
    prop._addConstant("fvTunDefRef", "tunnel-(fv.tundefref)", 2063)
    prop._addConstant("fvVDEp", "vleaf-discovered-endpoint-(fv.vdep)", 2067)
    prop._addConstant("fvVNodeAtt", "epg-to-path-attachment-(fv.vnodeatt)", 10950)
    prop._addConstant("fvVipUpdate", "vip-update-(fv.vipupdate)", 6624)
    prop._addConstant("hostprotPol", "host-protection-domain-policy-(hostprot.pol)", 9837)
    prop._addConstant("hostprotRemoteIp", "remote-cidr-(hostprot.remoteip)", 9846)
    prop._addConstant("hostprotRule", "host-protection-domain-rule-(hostprot.rule)", 9843)
    prop._addConstant("hostprotSubj", "host-protection-domain-subject-(hostprot.subj)", 9840)
    prop._addConstant("hsrpGroupDef", "hsrp-group-definition-(hsrp.groupdef)", 9194)
    prop._addConstant("hsrpGroupP", "hsrp-group-profile-(hsrp.groupp)", 9182)
    prop._addConstant("hsrpIfDef", "interface-profile-definition-(hsrp.ifdef)", 9192)
    prop._addConstant("hsrpIfP", "interface-profile-(hsrp.ifp)", 9188)
    prop._addConstant("hsrpRsGroupPol", "group-policy-(hsrp.rsgrouppol)", 9183)
    prop._addConstant("hsrpRsIfPol", "interface-policy-(hsrp.rsifpol)", 9189)
    prop._addConstant("hsrpSecVip", "secondary-virtual-ip-policy-(hsrp.secvip)", 9186)
    prop._addConstant("igmpIfDef", "interface-profile-definition-(igmp.ifdef)", 8804)
    prop._addConstant("igmpIfP", "interface-profile-(igmp.ifp)", 8801)
    prop._addConstant("igmpIfPol", "igmp-interface-policy-(igmp.ifpol)", 8799)
    prop._addConstant("igmpRepDef", "report-policy-(igmp.repdef)", 8941)
    prop._addConstant("igmpRepPol", "report-policy-(igmp.reppol)", 8808)
    prop._addConstant("igmpRsIfPol", "interface-policy-(igmp.rsifpol)", 8802)
    prop._addConstant("igmpRsSnoopAccessGroupFilterRMap", "profile-that-specify-what-to-accept-using-a-pimroutemappol-(igmp.rssnoopaccessgroupfilterrmap)", 9247)
    prop._addConstant("igmpSnoopAccessGroup", "igmp-snooping-access-group-configuration-(igmp.snoopaccessgroup)", 9249)
    prop._addConstant("igmpStRepDef", "static-report-policy-(igmp.strepdef)", 8940)
    prop._addConstant("igmpStRepPol", "static-report-policy-(igmp.streppol)", 8807)
    prop._addConstant("igmpStateLDef", "state-limit-policy-(igmp.stateldef)", 8942)
    prop._addConstant("igmpStateLPol", "state-limit-policy-(igmp.statelpol)", 8809)
    prop._addConstant("infraCEPg", "access-client-epg-(infra.cepg)", 4326)
    prop._addConstant("infraClP", "access-client-profile-(infra.clp)", 4520)
    prop._addConstant("infraPEPg", "access-function-provider-(infra.pepg)", 4325)
    prop._addConstant("infraProvP", "access-provider-profile-(infra.provp)", 4519)
    prop._addConstant("infraRsInfraBD", "bridge-domain-(infra.rsinfrabd)", 4321)
    prop._addConstant("infraRsVipAddrNs", "relation-to-vip-range-(infra.rsvipaddrns)", 5568)
    prop._addConstant("infraRsVlanNs", "relation-to-vlan-pool-(infra.rsvlanns)", 4515)
    prop._addConstant("infraRtDomDef", "container-for-domain-relations-(infra.rtdomdef)", 12678)
    prop._addConstant("ipNexthopEpP", "nexthop-epp-reachability-(ip.nexthopepp)", 10718)
    prop._addConstant("ipNexthopP", "nexthop-profile-(ip.nexthopp)", 4282)
    prop._addConstant("ipRouteP", "static-route-(ip.routep)", 4279)
    prop._addConstant("ipRsNHTrackMember", "track-member-policy-(ip.rsnhtrackmember)", 13748)
    prop._addConstant("ipRsNexthopRouteTrack", "tracking-policy-(ip.rsnexthoproutetrack)", 13202)
    prop._addConstant("ipRsRouteTrack", "tracking-policy-(ip.rsroutetrack)", 13184)
    prop._addConstant("isakmpProfile", "isakmp-profile-(isakmp.profile)", 15126)
    prop._addConstant("isakmpRsProfileToKeyring", "profile-attachment-to-keyring-(isakmp.rsprofiletokeyring)", 15127)
    prop._addConstant("l2BD", "bridge-domain-(l2.bd)", 3377)
    prop._addConstant("l2CfgMacEp", "config-mac-endpoint-(l2.cfgmacep)", 11789)
    prop._addConstant("l2L2AnycastEP", "l2-anycast-mac-endpoint-(l2.l2anycastep)", 11811)
    prop._addConstant("l2MacCktEp", "mac-circuit-endpoint-(l2.maccktep)", 6903)
    prop._addConstant("l2PortSecurityPolDef", "port-security-policy-(l2.portsecuritypoldef)", 9101)
    prop._addConstant("l2RsDot1pRuleAtt", "dot1p-rule-attachment-(l2.rsdot1pruleatt)", 3425)
    prop._addConstant("l2RsDscpRuleAtt", "dscp-rule-attachment-(l2.rsdscpruleatt)", 3423)
    prop._addConstant("l2RsPathDomAtt", "port-domain-attachment-(l2.rspathdomatt)", 3412)
    prop._addConstant("l2extDomDef", "l2-domain-profile-definition-(l2ext.domdef)", 1745)
    prop._addConstant("l2extInstP", "external-network-instance-profile-(l2ext.instp)", 1746)
    prop._addConstant("l2extLIfP", "logical-interface-profile-(l2ext.lifp)", 1753)
    prop._addConstant("l2extLNodeP", "logical-node-profile-(l2ext.lnodep)", 1750)
    prop._addConstant("l2extOut", "l2-outside-(l2ext.out)", 1738)
    prop._addConstant("l2extRsEBd", "bridge-domain-(l2ext.rsebd)", 1741)
    prop._addConstant("l2extRsL2DomAtt", "domain-profile-(l2ext.rsl2domatt)", 1739)
    prop._addConstant("l3Ctx", "context-(l3.ctx)", 3750)
    prop._addConstant("l3CtxSubstitute", "context-(l3.ctxsubstitute)", 7278)
    prop._addConstant("l3EncRtdIf", "encapsulated-routed-interface-(l3.encrtdif)", 3767)
    prop._addConstant("l3FwdCtx", "forwarding-context-(l3.fwdctx)", 5926)
    prop._addConstant("l3Inst", "overlay-instance-(l3.inst)", 3753)
    prop._addConstant("l3IpCktEp", "ip-circuit-endpoint-(l3.ipcktep)", 6904)
    prop._addConstant("l3LbRtdIf", "routed-loopback-interface-(l3.lbrtdif)", 3787)
    prop._addConstant("l3RsL3dot1pRuleAtt", "dot1p-rule-attachment-(l3.rsl3dot1pruleatt)", 12250)
    prop._addConstant("l3RsL3dscpRuleAtt", "dscp-rule-attachment-(l3.rsl3dscpruleatt)", 12248)
    prop._addConstant("l3RtdIf", "routed-interface-(l3.rtdif)", 3761)
    prop._addConstant("l3extCtxUpdater", "update-context-(l3ext.ctxupdater)", 7534)
    prop._addConstant("l3extDomDef", "outside-l3-domain-(l3ext.domdef)", 1780)
    prop._addConstant("l3extEncapLocale", "abstraction-of-fabric-locale-(l3ext.encaplocale)", 1807)
    prop._addConstant("l3extExtEncapDef", "ext-encap-(l3ext.extencapdef)", 1806)
    prop._addConstant("l3extFabricExtRoutingP", "fabric-external-routing-profile-(l3ext.fabricextroutingp)", 7253)
    prop._addConstant("l3extForwarderAddr", "forwarding-ip-address-(l3ext.forwarderaddr)", 16053)
    prop._addConstant("l3extInfraNodeP", "infra-logical-node-profile-(l3ext.infranodep)", 7251)
    prop._addConstant("l3extInstP", "external-network-instance-profile-(l3ext.instp)", 1775)
    prop._addConstant("l3extInstPDef", "external-network-instance-profile-def-(l3ext.instpdef)", 5987)
    prop._addConstant("l3extIntersiteLoopBackIfP", "intersite-loop-back-interface-profile-(l3ext.intersiteloopbackifp)", 10980)
    prop._addConstant("l3extIp", "secondary-ip-address-(l3ext.ip)", 6083)
    prop._addConstant("l3extLIfP", "logical-interface-profile-(l3ext.lifp)", 1789)
    prop._addConstant("l3extLIfPDef", "logical-interface-profile-(l3ext.lifpdef)", 1792)
    prop._addConstant("l3extLNodeP", "logical-node-profile-(l3ext.lnodep)", 1782)
    prop._addConstant("l3extLNodePDef", "logical-node-profile-(l3ext.lnodepdef)", 1785)
    prop._addConstant("l3extLoopBackIfP", "loop-back-interface-profile-(l3ext.loopbackifp)", 5988)
    prop._addConstant("l3extMember", "member-node-configuration-(l3ext.member)", 1796)
    prop._addConstant("l3extOut", "l3-outside-(l3ext.out)", 1770)
    prop._addConstant("l3extOutDef", "l3-outside-def-(l3ext.outdef)", 5986)
    prop._addConstant("l3extRsArpIfPol", "arp-policy-(l3ext.rsarpifpol)", 15242)
    prop._addConstant("l3extRsDampeningPol", "l3-out-dampening-policy-(l3ext.rsdampeningpol)", 8043)
    prop._addConstant("l3extRsDynPathAtt", "vmm-path-attributes-(l3ext.rsdynpathatt)", 15822)
    prop._addConstant("l3extRsEctx", "private-network-(l3ext.rsectx)", 1771)
    prop._addConstant("l3extRsEgressQosDppPol", "data-plane-policy-egress-(l3ext.rsegressqosdpppol)", 7849)
    prop._addConstant("l3extRsIngressQosDppPol", "data-plane-policy-ingress-(l3ext.rsingressqosdpppol)", 7847)
    prop._addConstant("l3extRsInstPToNatMappingEPg", "relation-to-nat-mapping-epg-(l3ext.rsinstptonatmappingepg)", 7494)
    prop._addConstant("l3extRsInstPToProfile", "relation-to-route-control-profile-(l3ext.rsinstptoprofile)", 5935)
    prop._addConstant("l3extRsInterleakPol", "context-interleak-policy-(l3ext.rsinterleakpol)", 8032)
    prop._addConstant("l3extRsL3DomAtt", "domain-profile-(l3ext.rsl3domatt)", 1773)
    prop._addConstant("l3extRsLIfPCustQosPol", "custom-qos-policy-(l3ext.rslifpcustqospol)", 12303)
    prop._addConstant("l3extRsLIfPToNetflowMonitorPol", "netflow-monitor-pol-(l3ext.rslifptonetflowmonitorpol)", 9227)
    prop._addConstant("l3extRsNdIfPol", "nd-policy-(l3ext.rsndifpol)", 6119)
    prop._addConstant("l3extRsNodeL3OutAtt", "fabric-node-(l3ext.rsnodel3outatt)", 1783)
    prop._addConstant("l3extRsPathDefL3OutAtt", "leaf-port-(l3ext.rspathdefl3outatt)", 1793)
    prop._addConstant("l3extRsPathL3OutAtt", "leaf-port-(l3ext.rspathl3outatt)", 1790)
    prop._addConstant("l3extRsRedistributePol", "context-policy-for-ospf,-eigrp-or-static-routes-redistribution-(l3ext.rsredistributepol)", 16051)
    prop._addConstant("l3extRsSubnetToProfile", "route-control-profile-(l3ext.rssubnettoprofile)", 1799)
    prop._addConstant("l3extRsSubnetToRtSumm", "route-summarization-policy-(l3ext.rssubnettortsumm)", 8039)
    prop._addConstant("l3extRsVSwitchEnhancedLagPol", "relation-to-enhanced-lacp-lag-policy-(l3ext.rsvswitchenhancedlagpol)", 16425)
    prop._addConstant("l3extRtLIfCtxToOut", "logical-interface-context-(l3ext.rtlifctxtoout)", 5990)
    prop._addConstant("l3extRtOutDefContToOut", "l3-outside-def-container-(l3ext.rtoutdefconttoout)", 10613)
    prop._addConstant("l3extRtdNodeDef", "routed-node-location-(l3ext.rtdnodedef)", 11839)
    prop._addConstant("l3extRtdOutCont", "routed-outdef-container-(l3ext.rtdoutcont)", 11837)
    prop._addConstant("l3extRtdOutDef", "routed-out-definition-(l3ext.rtdoutdef)", 11838)
    prop._addConstant("l3extSubnet", "subnet-(l3ext.subnet)", 1801)
    prop._addConstant("l3extSubnetDef", "abstraction-of-external-network-instance-(l3ext.subnetdef)", 1802)
    prop._addConstant("l3extVirtualLIfP", "logical-interface-profile-(l3ext.virtuallifp)", 15819)
    prop._addConstant("l3extVirtualLIfPDef", "logical-interface-profile-(l3ext.virtuallifpdef)", 15825)
    prop._addConstant("l3extVirtualLIfPLagPolAtt", "virtuallifp-lag-policy-(l3ext.virtuallifplagpolatt)", 16424)
    prop._addConstant("l3extVrfValidationPol", "vrf-validation-policy-(l3ext.vrfvalidationpol)", 11387)
    prop._addConstant("mgmtAddrCont", "container-of-configured-ip-addresses-(mgmt.addrcont)", 6652)
    prop._addConstant("mgmtCollectionCont", "contract-container-(mgmt.collectioncont)", 2199)
    prop._addConstant("mgmtConfigAddr", "configured-address-(mgmt.configaddr)", 6653)
    prop._addConstant("mgmtConfigNode", "configured-node-(mgmt.confignode)", 6927)
    prop._addConstant("mgmtExtMgmtEntity", "external-entities-(mgmt.extmgmtentity)", 2182)
    prop._addConstant("mgmtInB", "in-band-management-epg-(mgmt.inb)", 2194)
    prop._addConstant("mgmtInstP", "external-management-network-instance-profile-(mgmt.instp)", 2183)
    prop._addConstant("mgmtInstPDef", "attachable-target-group-(mgmt.instpdef)", 2186)
    prop._addConstant("mgmtMgmtP", "management-profile-(mgmt.mgmtp)", 2190)
    prop._addConstant("mgmtNodeDef", "node-where-epg-will-be-deployed-(mgmt.nodedef)", 2198)
    prop._addConstant("mgmtOoB", "out-of-band-management-epg-(mgmt.oob)", 2191)
    prop._addConstant("mgmtRsInstPCtx", "private-network-(mgmt.rsinstpctx)", 5532)
    prop._addConstant("mgmtRsMgmtBD", "bridge-domain-(mgmt.rsmgmtbd)", 2195)
    prop._addConstant("mgmtRsOoBCons", "out-of-band-contract-(mgmt.rsoobcons)", 2184)
    prop._addConstant("mgmtRsOoBCtx", "private-network-(mgmt.rsoobctx)", 5528)
    prop._addConstant("mgmtRsOoBProv", "out-of-band-contract-(mgmt.rsoobprov)", 2192)
    prop._addConstant("mgmtRtdMgmtIf", "routed-management-interface-(mgmt.rtdmgmtif)", 3784)
    prop._addConstant("mgmtZoneDef", "management-zone-definition-(mgmt.zonedef)", 2197)
    prop._addConstant("mldRsMldsnoopAccessGroupFilterRMap", "profile-that-specify-what-to-accept-using-a-pimroutemappol-(mld.rsmldsnoopaccessgroupfilterrmap)", 15603)
    prop._addConstant("mldSnoopAccessGroup", "mld-snooping-access-group-configuration-(mld.snoopaccessgroup)", 15602)
    prop._addConstant("monEPGPol", "monitoring-policy-(mon.epgpol)", 253)
    prop._addConstant("monEPGTarget", "monitoring-target-(mon.epgtarget)", 254)
    prop._addConstant("ndPfxP", "nd-prefix-profile-(nd.pfxp)", 11328)
    prop._addConstant("ndRaSubnet", "nd-proxy-subnet-(nd.rasubnet)", 6258)
    prop._addConstant("ndRsPfxPToNdPfxPol", "nd-prefix-policy-(nd.rspfxptondpfxpol)", 11329)
    prop._addConstant("ndRsRaSubnetToNdPfxPol", "nd-prefix-policy-(nd.rsrasubnettondpfxpol)", 6259)
    prop._addConstant("netflowExporterPol", "external-collector-reachability-(netflow.exporterpol)", 9207)
    prop._addConstant("netflowMonitorPol", "netflow-monitor-(netflow.monitorpol)", 9213)
    prop._addConstant("netflowRsExporterToCtx", "relation-to-ctx-behind-which-the-exporter-resides-(netflow.rsexportertoctx)", 9363)
    prop._addConstant("netflowRsExporterToEPg", "relation-to-epg-behind-which-the-exporter-resides-(netflow.rsexportertoepg)", 9205)
    prop._addConstant("netflowRsMonitorToExporter", "exporter-policy-attachment-(netflow.rsmonitortoexporter)", 9216)
    prop._addConstant("netflowRsMonitorToRecord", "record-policy-attachment-(netflow.rsmonitortorecord)", 9214)
    prop._addConstant("opflexEncapCont", "encap-container-(opflex.encapcont)", 8921)
    prop._addConstant("opflexIDEp", "inband-discovered-endpoint-(opflex.idep)", 1104)
    prop._addConstant("opflexIDEpFaultInfo", "concrete-class-to-raise-faults-for-idep-issues-(opflex.idepfaultinfo)", 8819)
    prop._addConstant("opflexPathAtt", "path-attribute-(opflex.pathatt)", 7290)
    prop._addConstant("opflexpVmmIDEpFaultInfo", "concrete-class-to-raise-faults-for-idep-issues-in-vpod-ave-(opflexp.vmmidepfaultinfo)", 12919)
    prop._addConstant("orchsConfig", "orchestration-related-config-under-context-(orchs.config)", 9467)
    prop._addConstant("orchsFuncProfileCont", "container-for-function-profiles-(orchs.funcprofilecont)", 11078)
    prop._addConstant("orchsLdevCont", "container-for-ldevvips-(orchs.ldevcont)", 9573)
    prop._addConstant("orchsRsAbsGraphRef", "common-graph-template-(orchs.rsabsgraphref)", 11076)
    prop._addConstant("orchsRsAllocLDev", "real-logical-l4-l7-device-(orchs.rsallocldev)", 9577)
    prop._addConstant("orchsRsFromRPToL3Dom", "encap-pool-for-internal/external-services-stitching-(orchs.rsfromrptol3dom)", 9570)
    prop._addConstant("orchsRsFromRPToL3OutInstP", "relation-from-l4-l7-resource-pool-to-l3outinstp-(orchs.rsfromrptol3outinstp)", 9568)
    prop._addConstant("orchsRsIpPoolRef", "external-ip-address-pool-(orchs.rsippoolref)", 9566)
    prop._addConstant("orchsRsIpPoolRefv2", "external/public-ip-address-pool-(orchs.rsippoolrefv2)", 11074)
    prop._addConstant("orchsRsLDevItem", "logical-l4-l7-device-(orchs.rsldevitem)", 9574)
    prop._addConstant("orchsRsSvcsEncapToSvcAlloc", "link-ip-address-to-allocated-ldevvip-(orchs.rssvcsencaptosvcalloc)", 9579)
    prop._addConstant("orchsRsSvcsIpToIpPoolRef", "link-ip-address-to-ip-pool-reference-(orchs.rssvcsiptoippoolref)", 11263)
    prop._addConstant("orchsRsSvcsIpToSvcAlloc", "link-ip-address-to-allocated-ldevvip-(orchs.rssvcsiptosvcalloc)", 9581)
    prop._addConstant("orchsRsToFuncProfile", "association-to-function-profile-(orchs.rstofuncprofile)", 11081)
    prop._addConstant("orchsRsToMdev", "association-to-mdev-(orchs.rstomdev)", 11079)
    prop._addConstant("orchsSvcAlloc", "request-to-allocate/de-allocate-services-for-an-epg-(orchs.svcalloc)", 9576)
    prop._addConstant("orchsSvcRsrcPool", "services-resource-pool-(orchs.svcrsrcpool)", 9565)
    prop._addConstant("orchsSvcsEncap", "ip-pool-resource-instance-(orchs.svcsencap)", 9468)
    prop._addConstant("orchsSvcsIp", "ip-pool-resource-instance-(orchs.svcsip)", 9469)
    prop._addConstant("orchsTnSvcsSubnet", "subnet-(orchs.tnsvcssubnet)", 9572)
    prop._addConstant("ospfExtP", "external-profile-(ospf.extp)", 1427)
    prop._addConstant("ospfIfP", "interface-profile-(ospf.ifp)", 1420)
    prop._addConstant("ospfIfPol", "ospf-interface-policy-(ospf.ifpol)", 1418)
    prop._addConstant("ospfRsIfPol", "interface-policy-(ospf.rsifpol)", 1421)
    prop._addConstant("pimASMPatDef", "any-source-multicast-pattern-definition-(pim.asmpatdef)", 8549)
    prop._addConstant("pimASMPatPol", "any-source-multicast-pattern-policy-(pim.asmpatpol)", 8548)
    prop._addConstant("pimAutoRPDef", "autorp-policy-definition-(pim.autorpdef)", 8525)
    prop._addConstant("pimAutoRPPol", "auto-rp-pim-policy-(pim.autorppol)", 8524)
    prop._addConstant("pimBSRFilterDef", "pim-bs-filter-policy-definition-(pim.bsrfilterdef)", 8535)
    prop._addConstant("pimBSRFilterPol", "pim-bs-filter-policy-(pim.bsrfilterpol)", 8534)
    prop._addConstant("pimBSRPDef", "bootstrap-rp-policy-definition-(pim.bsrpdef)", 8527)
    prop._addConstant("pimBSRPPol", "bootstrap-rp-pim-policy-(pim.bsrppol)", 8526)
    prop._addConstant("pimCtxDef", "pim-context-level-policy-definition-(pim.ctxdef)", 8523)
    prop._addConstant("pimCtxP", "context-level-pim-policy-(pim.ctxp)", 8522)
    prop._addConstant("pimExtP", "external-profile-(pim.extp)", 8520)
    prop._addConstant("pimFabricRPDef", "fabricrp-policy-definition-(pim.fabricrpdef)", 12546)
    prop._addConstant("pimFabricRPPol", "fabric-rp-pim-policy-(pim.fabricrppol)", 12545)
    prop._addConstant("pimIPV6CtxDef", "pim-ipv6-context-level-policy-definition-(pim.ipv6ctxdef)", 13626)
    prop._addConstant("pimIPV6CtxP", "context-level-pim-ipv6-policy-(pim.ipv6ctxp)", 13625)
    prop._addConstant("pimIPV6IfP", "interface-profile-(pim.ipv6ifp)", 13624)
    prop._addConstant("pimIfDef", "interface-profile-definition-(pim.ifdef)", 8513)
    prop._addConstant("pimIfP", "interface-profile-(pim.ifp)", 8510)
    prop._addConstant("pimIfPol", "pim-interface-policy-(pim.ifpol)", 8508)
    prop._addConstant("pimInterVRFDef", "intervrf-policy-definition-(pim.intervrfdef)", 12378)
    prop._addConstant("pimInterVRFEntryDef", "pim-inter-vrf-entry-policy-definition-(pim.intervrfentrydef)", 12380)
    prop._addConstant("pimInterVRFEntryPol", "pim-inter-vrf-entry-policy-(pim.intervrfentrypol)", 12379)
    prop._addConstant("pimInterVRFPol", "inter-vrf-pim-policy-(pim.intervrfpol)", 12377)
    prop._addConstant("pimJPInbFilterDef", "jp-inbound-filter-definition-(pim.jpinbfilterdef)", 8710)
    prop._addConstant("pimJPInbFilterPol", "jp-inbound-filter-policy-(pim.jpinbfilterpol)", 8517)
    prop._addConstant("pimJPOutbFilterDef", "jp-inbound-filter-policy-(pim.jpoutbfilterdef)", 8711)
    prop._addConstant("pimJPOutbFilterPol", "jp-inbound-filter-policy-(pim.jpoutbfilterpol)", 8518)
    prop._addConstant("pimMAFilterDef", "pim-ma-filter-policy-definition-(pim.mafilterdef)", 8533)
    prop._addConstant("pimMAFilterPol", "pim-ma-filter-policy-(pim.mafilterpol)", 8532)
    prop._addConstant("pimNbrFilterDef", "neighbor-fiter-policy-(pim.nbrfilterdef)", 8712)
    prop._addConstant("pimNbrFilterPol", "neighbor-fiter-policy-(pim.nbrfilterpol)", 8519)
    prop._addConstant("pimRPGrpRangeDef", "pim-rp-group-range-policy-definition-(pim.rpgrprangedef)", 8539)
    prop._addConstant("pimRPGrpRangePol", "pim-rp-group-range-policy-(pim.rpgrprangepol)", 8538)
    prop._addConstant("pimRegTrDef", "pim-register-traffic-policy-definition-(pim.regtrdef)", 8545)
    prop._addConstant("pimRegTrPol", "pim-register-traffic-policy-(pim.regtrpol)", 8544)
    prop._addConstant("pimResDef", "pim-resource-definition-(pim.resdef)", 8547)
    prop._addConstant("pimResPol", "pim-resource-policy-(pim.respol)", 8546)
    prop._addConstant("pimRsIfPol", "interface-policy-(pim.rsifpol)", 8511)
    prop._addConstant("pimRsV6IfPol", "interface-policy-(pim.rsv6ifpol)", 13745)
    prop._addConstant("pimSGRangeExpDef", "(s,g)-expiry-definition-(pim.sgrangeexpdef)", 8551)
    prop._addConstant("pimSGRangeExpPol", "(s,g)-expiry-policy-(pim.sgrangeexppol)", 8550)
    prop._addConstant("pimSSMPatDef", "source-specific-multicast-pattern-definition-(pim.ssmpatdef)", 8555)
    prop._addConstant("pimSSMPatPol", "source-specific-multicast-pattern-policy-(pim.ssmpatpol)", 8554)
    prop._addConstant("pimSSMRangeDef", "ssm-group-range-definition-(pim.ssmrangedef)", 8557)
    prop._addConstant("pimSSMRangePol", "ssm-group-range-policy-(pim.ssmrangepol)", 8556)
    prop._addConstant("pimSharedRangeDef", "shared-tree-definition-(pim.sharedrangedef)", 8553)
    prop._addConstant("pimSharedRangePol", "shared-tree-policy-(pim.sharedrangepol)", 8552)
    prop._addConstant("pimStaticRPDef", "staticrp-policy-definition-(pim.staticrpdef)", 8529)
    prop._addConstant("pimStaticRPEntryDef", "pim-static-rp-entry-policy-definition-(pim.staticrpentrydef)", 8531)
    prop._addConstant("pimStaticRPEntryPol", "pim-static-rp-entry-policy-(pim.staticrpentrypol)", 8530)
    prop._addConstant("pimStaticRPPol", "static-rp-pim-policy-(pim.staticrppol)", 8528)
    prop._addConstant("pkiKeyRing", "key-ring-(pki.keyring)", 1482)
    prop._addConstant("pkiTP", "certificate-authority-(pki.tp)", 1483)
    prop._addConstant("ptpEpgCfg", "ptp-epg-configuration-(ptp.epgcfg)", 16488)
    prop._addConstant("ptpRsLatencyPtpMode", "relation-to-latencyptpmode-(ptp.rslatencyptpmode)", 18268)
    prop._addConstant("ptpRsProfile", "relation-to-ptp-user-profile-(ptp.rsprofile)", 16557)
    prop._addConstant("ptpRtdEpgCfg", "ptp-l3out-configuration-(ptp.rtdepgcfg)", 16489)
    prop._addConstant("qinqCktEp", "vlan-(qinq.cktep)", 10644)
    prop._addConstant("resConsumer", "resource-consumer-(res.consumer)", 308)
    prop._addConstant("rmonIfStorm", "interface-storm-drop-counters-(rmon.ifstorm)", 5907)
    prop._addConstant("rtctrlCtxP", "route-control-context-(rtctrl.ctxp)", 598)
    prop._addConstant("rtctrlProfile", "route-control-profile-(rtctrl.profile)", 602)
    prop._addConstant("rtctrlRsCtxPToSubjP", "subject-profile-(rtctrl.rsctxptosubjp)", 599)
    prop._addConstant("rtctrlRsScopeToAttrP", "attribute-profile-(rtctrl.rsscopetoattrp)", 604)
    prop._addConstant("rtctrlScope", "route-context-scope-(rtctrl.scope)", 603)
    prop._addConstant("rtdmcIPV6McastIfDefCont", "ipv6-multicast-interface-profile-container-(rtdmc.ipv6mcastifdefcont)", 14338)
    prop._addConstant("rtdmcMcastIfDefCont", "multicast-interface-profile-container-(rtdmc.mcastifdefcont)", 8934)
    prop._addConstant("rtdmcRsFilterToRtMapPol", "pim-route-map-filter-(rtdmc.rsfiltertortmappol)", 8708)
    prop._addConstant("snmpRsDestGroup", "snmp-destination-group-(snmp.rsdestgroup)", 1689)
    prop._addConstant("snmpSrc", "snmp-source-(snmp.src)", 1688)
    prop._addConstant("spanDest", "span-destination-(span.dest)", 4166)
    prop._addConstant("spanDestGrp", "span-destination-group-(span.destgrp)", 4158)
    prop._addConstant("spanEpgSummary", "span-destination-epg-summary-(span.epgsummary)", 4169)
    prop._addConstant("spanRsDestApic", "relation-to-span-destination-apic-(span.rsdestapic)", 6230)
    prop._addConstant("spanRsDestEpg", "relation-to-span-destination-epg-(span.rsdestepg)", 4160)
    prop._addConstant("spanRsDestPathEp", "relation-to-span-destination-path-(span.rsdestpathep)", 4164)
    prop._addConstant("spanRsDestToVPort", "relation-to-vspan-destination-vport-(span.rsdesttovport)", 4189)
    prop._addConstant("spanRsDestToVPortDef", "relation-to-vspan-destination-vport-(span.rsdesttovportdef)", 5583)
    prop._addConstant("spanRsProvDestGrp", "relation-to-span-destination-provider-group-(span.rsprovdestgrp)", 4171)
    prop._addConstant("spanRsProvToVDestGrp", "relation-to-vspan-vdestination-provider-to-group-(span.rsprovtovdestgrp)", 4195)
    prop._addConstant("spanRsSrcToBDDef", "source-to-bddef-relation-(span.rssrctobddef)", 4148)
    prop._addConstant("spanRsSrcToCtxDef", "source-to-ctxdef-relation-(span.rssrctoctxdef)", 4152)
    prop._addConstant("spanRsSrcToEpP", "relation-to-span-source-to-end-point-profile-(span.rssrctoepp)", 4144)
    prop._addConstant("spanRsSrcToEpg", "relation-to-span-source-to-epg-(span.rssrctoepg)", 4141)
    prop._addConstant("spanRsSrcToPathEp", "relation-to-span-source-to-path-endpoint-(span.rssrctopathep)", 4137)
    prop._addConstant("spanRsSrcToVPort", "relation-to-span-source-to-port-(span.rssrctovport)", 4176)
    prop._addConstant("spanRsSrcToVPortDef", "relation-to-span-source-to-port-(span.rssrctovportdef)", 5581)
    prop._addConstant("spanRsVSrcGrpToFilterGrp", "relation-from-vspan-source-grp-to-span-filtergrp-(span.rsvsrcgrptofiltergrp)", 16341)
    prop._addConstant("spanSpanLbl", "span-source-destination-group-match-label-(span.spanlbl)", 4156)
    prop._addConstant("spanSpanLblDef", "span-label-def.-(span.spanlbldef)", 4157)
    prop._addConstant("spanSpanProv", "span-destination-provider-(span.spanprov)", 4170)
    prop._addConstant("spanSrc", "span-source-(span.src)", 4143)
    prop._addConstant("spanSrcDef", "span-source-definition-(span.srcdef)", 4154)
    prop._addConstant("spanSrcGrp", "span-source-group-(span.srcgrp)", 4131)
    prop._addConstant("spanSrcGrpDef", "span-source-group-def.-(span.srcgrpdef)", 4132)
    prop._addConstant("spanTaskParam", "relation-to-span-src-epg-container-(span.taskparam)", 4174)
    prop._addConstant("spanVDest", "vspan-vdestination-(span.vdest)", 4191)
    prop._addConstant("spanVDestGrp", "vspan-destination-group-(span.vdestgrp)", 4186)
    prop._addConstant("spanVEpgSummary", "vspan-destination-epg-summary-(span.vepgsummary)", 5329)
    prop._addConstant("spanVEpgSummaryDef", "copy-of-vspan-epg-summary-definition-(span.vepgsummarydef)", 4193)
    prop._addConstant("spanVSpanProv", "vspan-vdestination-provider-(span.vspanprov)", 4194)
    prop._addConstant("spanVSrc", "vspan-vsource-(span.vsrc)", 4178)
    prop._addConstant("spanVSrcDef", "abstract-vspan-source-definition-(span.vsrcdef)", 4179)
    prop._addConstant("spanVSrcGrp", "vspan-session-(span.vsrcgrp)", 4183)
    prop._addConstant("spanVSrcGrpDef", "vspan-source-group-def.-(span.vsrcgrpdef)", 4184)
    prop._addConstant("statsDestP", "stats-destination-(stats.destp)", 332)
    prop._addConstant("statsExportP", "export-policy-of-an-user-(stats.exportp)", 331)
    prop._addConstant("statsReportable", "statistics-policy-(stats.reportable)", 54)
    prop._addConstant("sviIf", "routed-vlan-interface-(svi.if)", 3757)
    prop._addConstant("syslogRsDestGroup", "relation-to-syslog-destination-group-(syslog.rsdestgroup)", 1714)
    prop._addConstant("syslogSrc", "syslog-source-(syslog.src)", 1713)
    prop._addConstant("tacacsRsDestGroup", "tacacs-destination-group-(tacacs.rsdestgroup)", 11989)
    prop._addConstant("tacacsSrc", "tacacs-source-(tacacs.src)", 11988)
    prop._addConstant("tagAliasDelInst", "deleted-alias-(tag.aliasdelinst)", 1660)
    prop._addConstant("tagAliasInst", "alias-tag-(tag.aliasinst)", 1659)
    prop._addConstant("tagInst", "tag-instance-(tag.inst)", 1658)
    prop._addConstant("traceroutepRsTrEpDst", "relation-to-destination-end-point-(traceroutep.rstrepdst)", 4221)
    prop._addConstant("traceroutepRsTrEpExtIpSrc", "source-end-point-(traceroutep.rstrepextipsrc)", 6373)
    prop._addConstant("traceroutepRsTrEpIpDst", "relation-to-destination-end-point-(traceroutep.rstrepipdst)", 5352)
    prop._addConstant("traceroutepRsTrEpIpSrc", "source-end-point-(traceroutep.rstrepipsrc)", 5350)
    prop._addConstant("traceroutepRsTrEpSrc", "source-end-point-(traceroutep.rstrepsrc)", 4217)
    prop._addConstant("traceroutepRsTrExtEpIpDst", "relation-to-destination-end-point-(traceroutep.rstrextepipdst)", 12552)
    prop._addConstant("traceroutepTrEp", "endpoint-to-endpoint-traceroute-policy-(traceroutep.trep)", 4216)
    prop._addConstant("traceroutepTrEpExt", "endpoint-to-external-ip-traceroute-policy-(traceroutep.trepext)", 6372)
    prop._addConstant("traceroutepTrExtEp", "external-ip-to-endpoint-traceroute-policy-(traceroutep.trextep)", 12551)
    prop._addConstant("unspecified", "unspecified", 0)
    prop._addConstant("vlanCktEp", "vlan-(vlan.cktep)", 3390)
    prop._addConstant("vnsAbsCfgRel", "l4-l7-services-relation-(vns.abscfgrel)", 4641)
    prop._addConstant("vnsAbsConnection", "connection-(vns.absconnection)", 4689)
    prop._addConstant("vnsAbsDevCfg", "l4-l7-services-device-shared-config-(vns.absdevcfg)", 4647)
    prop._addConstant("vnsAbsFolder", "l4-l7-services-folder-(vns.absfolder)", 4640)
    prop._addConstant("vnsAbsFuncCfg", "l4-l7-services-function-config-(vns.absfunccfg)", 4651)
    prop._addConstant("vnsAbsFuncConn", "function-connector-(vns.absfuncconn)", 4686)
    prop._addConstant("vnsAbsFuncProf", "l4-l7-services-function-profile-(vns.absfuncprof)", 4644)
    prop._addConstant("vnsAbsFuncProfContr", "l4-l7-services-function-profile-group-(vns.absfuncprofcontr)", 4642)
    prop._addConstant("vnsAbsFuncProfGrp", "l4-l7-services-function-profile-group-(vns.absfuncprofgrp)", 4643)
    prop._addConstant("vnsAbsFuncProfNormalized", "l4-l7-services-normalized-function-profile-(vns.absfuncprofnormalized)", 11020)
    prop._addConstant("vnsAbsGraph", "l4-l7-service-graph-template-(vns.absgraph)", 4624)
    prop._addConstant("vnsAbsGrpCfg", "l4-l7-services-group-shared-config-(vns.absgrpcfg)", 4650)
    prop._addConstant("vnsAbsNode", "function-node-(vns.absnode)", 4629)
    prop._addConstant("vnsAbsParam", "l4-l7-services-parameter-(vns.absparam)", 4639)
    prop._addConstant("vnsAbsTermConn", "terminal-connector-(vns.abstermconn)", 4687)
    prop._addConstant("vnsAbsTermNodeCon", "consumer-terminal-node-(vns.abstermnodecon)", 5203)
    prop._addConstant("vnsAbsTermNodeProv", "provider-terminal-node-(vns.abstermnodeprov)", 5204)
    prop._addConstant("vnsAdjacencyDefCont", "adjacency-definition-container-(vns.adjacencydefcont)", 8249)
    prop._addConstant("vnsBackupPol", "pbr-backup-policy-(vns.backuppol)", 16020)
    prop._addConstant("vnsByPassChain", "bypass-chain-(vns.bypasschain)", 15628)
    prop._addConstant("vnsCDev", "concrete-device-(vns.cdev)", 4924)
    prop._addConstant("vnsCFolder", "concrete-folder-(vns.cfolder)", 4863)
    prop._addConstant("vnsCIf", "concrete-interface-(vns.cif)", 4931)
    prop._addConstant("vnsCMgmt", "management-interface-(vns.cmgmt)", 4930)
    prop._addConstant("vnsCParam", "concrete-parameter-(vns.cparam)", 4866)
    prop._addConstant("vnsCRel", "concrete-relation-(vns.crel)", 4867)
    prop._addConstant("vnsCfgRelInst", "relation-to-l4-l7-services-param-relation-abstract-class-(vns.cfgrelinst)", 4797)
    prop._addConstant("vnsCfgRoot", "root-node-for-configuration-tree.-(vns.cfgroot)", 4857)
    prop._addConstant("vnsChassis", "chassis-for-cdevs-(vns.chassis)", 6169)
    prop._addConstant("vnsCloudSvcEPgDef", "cloudsvcepgdef-(vns.cloudsvcepgdef)", 15151)
    prop._addConstant("vnsConfIssue", "config-issue-holder-(vns.confissue)", 6249)
    prop._addConstant("vnsConnectionInst", "connection-(vns.connectioninst)", 4846)
    prop._addConstant("vnsCopyAdjacencyDef", "destination-of-copy-traffic-(vns.copyadjacencydef)", 7888)
    prop._addConstant("vnsCopyConnector", "copy-connector-(vns.copyconnector)", 7887)
    prop._addConstant("vnsCtrlrEp", "ctrlr-appliance-address-(vns.ctrlrep)", 4937)
    prop._addConstant("vnsCtrlrMgmtPol", "management-policy-(vns.ctrlrmgmtpol)", 4934)
    prop._addConstant("vnsDevCfgInst", "per-ldev-shared-cfg-(vns.devcfginst)", 4799)
    prop._addConstant("vnsDevFolder", "device-configuration-(vns.devfolder)", 4943)
    prop._addConstant("vnsDevMgr", "device-manager-(vns.devmgr)", 6174)
    prop._addConstant("vnsDevParam", "device-configuration-(vns.devparam)", 4946)
    prop._addConstant("vnsEPgDef", "epgdef-(vns.epgdef)", 4812)
    prop._addConstant("vnsEPgDefCons", "epg-definition-consumer-(vns.epgdefcons)", 5963)
    prop._addConstant("vnsEPpContr", "service-vdev-epp-container-(vns.eppcontr)", 4693)
    prop._addConstant("vnsEPpInfo", "service-vdev-epp-information-(vns.eppinfo)", 4694)
    prop._addConstant("vnsEpgDefXlate", "epgdefxlate-(vns.epgdefxlate)", 11855)
    prop._addConstant("vnsFolderInst", "l4-l7-folder-instance-(vns.folderinst)", 4794)
    prop._addConstant("vnsFuncCfgInst", "per-func-cfg-(vns.funccfginst)", 4803)
    prop._addConstant("vnsFuncConnInst", "connector-instance-(vns.funcconninst)", 4830)
    prop._addConstant("vnsGFolder", "l4-l7-services-folder-(vns.gfolder)", 4789)
    prop._addConstant("vnsGParam", "l4-l7-services-parameter-(vns.gparam)", 4788)
    prop._addConstant("vnsGRel", "l4-l7-services-relation-(vns.grel)", 4792)
    prop._addConstant("vnsGraphInst", "l4-l7-service-graph-instance-(vns.graphinst)", 4771)
    prop._addConstant("vnsGrpCfgInst", "per-function-group-shared-cfg-(vns.grpcfginst)", 4802)
    prop._addConstant("vnsHealthDest", "health-destination-(vns.healthdest)", 12352)
    prop._addConstant("vnsInTerm", "in-terminal-(vns.interm)", 4655)
    prop._addConstant("vnsInstPol", "l4-l7-device-policy-(vns.instpol)", 12359)
    prop._addConstant("vnsL1L2RedirectDest", "destination-of-l1/l2-redirected-traffic-(vns.l1l2redirectdest)", 12313)
    prop._addConstant("vnsLDevCtx", "logical-device-context-(vns.ldevctx)", 4666)
    prop._addConstant("vnsLDevIf", "logical-device-consumer-(vns.ldevif)", 4869)
    prop._addConstant("vnsLDevIfLIf", "logical-interface-(vns.ldeviflif)", 4891)
    prop._addConstant("vnsLDevInst", "ldev-instance-(vns.ldevinst)", 4786)
    prop._addConstant("vnsLDevVip", "l4-l7-devices-(vns.ldevvip)", 4894)
    prop._addConstant("vnsLIf", "logical-interface-(vns.lif)", 4892)
    prop._addConstant("vnsLIfCtx", "logical-interface-context-(vns.lifctx)", 4662)
    prop._addConstant("vnsLIfHint", "logical-interface-hint-(vns.lifhint)", 4661)
    prop._addConstant("vnsLIfHintInst", "logical-interface-hint-instance-(vns.lifhintinst)", 5559)
    prop._addConstant("vnsLegVNode", "legvnode-(vns.legvnode)", 4810)
    prop._addConstant("vnsMgmtLIf", "logical-interface-(vns.mgmtlif)", 4893)
    prop._addConstant("vnsMscGraphXlateCont", "msc-graph-internal-epgs-pc-tag-translation-container-(vns.mscgraphxlatecont)", 11854)
    prop._addConstant("vnsNextHopInfo", "nexthop-info-(vns.nexthopinfo)", 15629)
    prop._addConstant("vnsNodeInst", "node-instance-(vns.nodeinst)", 4780)
    prop._addConstant("vnsNodeInstDef", "function-node-abstract-class-(vns.nodeinstdef)", 4785)
    prop._addConstant("vnsOutTerm", "out-terminal-(vns.outterm)", 4656)
    prop._addConstant("vnsParamInst", "l4-l7-param-instance-(vns.paraminst)", 4793)
    prop._addConstant("vnsPbrByPassCont", "pbr-bypass-container-(vns.pbrbypasscont)", 15627)
    prop._addConstant("vnsREPpInfo", "service-vdev-epp-information-(vns.reppinfo)", 5959)
    prop._addConstant("vnsRedirectDest", "destination-of-redirected-traffic-(vns.redirectdest)", 7083)
    prop._addConstant("vnsRedirectHealthGroup", "l4-l7-redirect-health-group-(vns.redirecthealthgroup)", 10954)
    prop._addConstant("vnsRndrInfo", "service-vdev-rendering-information-(vns.rndrinfo)", 4692)
    prop._addConstant("vnsRsALDevToDevMgr", "device-manager-(vns.rsaldevtodevmgr)", 6167)
    prop._addConstant("vnsRsALDevToDomP", "relation-from-l4-l7-devices-to-a-vmm-domain-(vns.rsaldevtodomp)", 4875)
    prop._addConstant("vnsRsALDevToPhysDomP", "relation-from-l4-l7-devices-to-a-vlan-namespace-instance-profile-(vns.rsaldevtophysdomp)", 4877)
    prop._addConstant("vnsRsALDevToVxlanInstP", "relation-from-l4-l7-devices-to-a-vxlan-namespace-instance-profile-(vns.rsaldevtovxlaninstp)", 4879)
    prop._addConstant("vnsRsAbsConnectionConns", "relation-from-service-graph-connection-to-service-graph-connectors-(vns.rsabsconnectionconns)", 4690)
    prop._addConstant("vnsRsAbsCopyConnection", "relation-from-service-graph-connection-to-copyconnector-(vns.rsabscopyconnection)", 7885)
    prop._addConstant("vnsRsBackupPol", "pbr-backup-policy-(vns.rsbackuppol)", 16021)
    prop._addConstant("vnsRsCDevTemplateToAddrInst", "relation-to-ip-address-pool-(vns.rscdevtemplatetoaddrinst)", 12994)
    prop._addConstant("vnsRsCDevToChassis", "chassis-for-cdevs-(vns.rscdevtochassis)", 6179)
    prop._addConstant("vnsRsCDevToCtrlrP", "vmm-controller-(vns.rscdevtoctrlrp)", 6896)
    prop._addConstant("vnsRsCIfAtt", "relation-to-a-set-of-concrete-interfaces-from-the-device-in-the-cluster-(vns.rscifatt)", 4888)
    prop._addConstant("vnsRsCIfAttN", "relation-to-a-set-of-concrete-interfaces-from-the-device-in-the-cluster-(vns.rscifattn)", 7468)
    prop._addConstant("vnsRsCIfPathAtt", "relation-from-concrete-interface-to-the-physical-port-on-the-ileaf-(vns.rscifpathatt)", 4932)
    prop._addConstant("vnsRsCfgToConn", "relation-from-abstract-configuration-to-a-connector-(vns.rscfgtoconn)", 4859)
    prop._addConstant("vnsRsCfgToVConn", "relation-from-abstract-configuration-to-a-virtual-connector-(vns.rscfgtovconn)", 4861)
    prop._addConstant("vnsRsChassisEpg", "relation-from-a-device-cluster-to-an-epg-(vns.rschassisepg)", 6170)
    prop._addConstant("vnsRsChassisToMChassis", "l4-l7-chassis-type-(vns.rschassistomchassis)", 6172)
    prop._addConstant("vnsRsClusterPol", "relation-to-clusterpol-(vns.rsclusterpol)", 6905)
    prop._addConstant("vnsRsConnToAConn", "relation-from-a-function-connector-to-either-peer-function-connector-or-terminal-node-connector-(vns.rsconntoaconn)", 6984)
    prop._addConstant("vnsRsConnToAConnInst", "relation-from-a-connector-instance-to-a-function/terminal-connector-(vns.rsconntoaconninst)", 6986)
    prop._addConstant("vnsRsConnToCtxTerm", "relation-from-a-function-connector-to-terminal-node-(vns.rsconntoctxterm)", 4681)
    prop._addConstant("vnsRsConnToCtxTermInst", "relation-from-a-connector-instance-to-a-terminal-node-(vns.rsconntoctxterminst)", 4833)
    prop._addConstant("vnsRsConnToFlt", "relation-from-a-function-connector-to-a-filter-object-(vns.rsconntoflt)", 4679)
    prop._addConstant("vnsRsConnToFltInst", "relation-from-a-connector-instance-to-a-white-list-filter-(vns.rsconntofltinst)", 4831)
    prop._addConstant("vnsRsConnToLIfInst", "relation-from-a-connector-instance-to-a-logical-interface-(vns.rsconntolifinst)", 4835)
    prop._addConstant("vnsRsDefaultScopeToTerm", "relation-from-a-function-node-to-a-terminal-node-(vns.rsdefaultscopetoterm)", 4627)
    prop._addConstant("vnsRsDevEpg", "relation-from-a-l4-l7-devices-to-an-epg-(vns.rsdevepg)", 4883)
    prop._addConstant("vnsRsDevFolderToMFolder", "l4-l7-services-meta-folder-(vns.rsdevfoldertomfolder)", 4944)
    prop._addConstant("vnsRsDevMgrEpg", "relation-from-a-device-cluster-to-an-epg-(vns.rsdevmgrepg)", 6175)
    prop._addConstant("vnsRsDevMgrToMDevMgr", "l4-l7-device-manager-type-(vns.rsdevmgrtomdevmgr)", 6177)
    prop._addConstant("vnsRsFolderInstToMFolder", "l4-l7-services-meta-folder-(vns.rsfolderinsttomfolder)", 4795)
    prop._addConstant("vnsRsIPSLAMonitoringPol", "ip-sla-monitoring-policy-(vns.rsipslamonitoringpol)", 10952)
    prop._addConstant("vnsRsInstPolToVmmConfigFile", "vmm-configuration-file-(vns.rsinstpoltovmmconfigfile)", 12360)
    prop._addConstant("vnsRsL1L2RedirectHealthGroup", "l4-l7-redirect-health-group-(vns.rsl1l2redirecthealthgroup)", 12314)
    prop._addConstant("vnsRsLDevCtxToLDev", "relation-from-a-ldev-context-to-an-ldev-(vns.rsldevctxtoldev)", 4667)
    prop._addConstant("vnsRsLDevCtxToRtrCfg", "relation-from-lif-context-to-rtrcfg-(vns.rsldevctxtortrcfg)", 6649)
    prop._addConstant("vnsRsLDevInst", "ldev-instance-(vns.rsldevinst)", 4776)
    prop._addConstant("vnsRsLDevVipToInstPol", "service-instance-policy-(vns.rsldevviptoinstpol)", 12355)
    prop._addConstant("vnsRsLIfCtxToBD", "bridge-domain-(vns.rslifctxtobd)", 5486)
    prop._addConstant("vnsRsLIfCtxToCustQosPol", "relation-from-lif-context-to-qospolicy-(vns.rslifctxtocustqospol)", 12309)
    prop._addConstant("vnsRsLIfCtxToInstP", "relation-from-lif-context-to-fvepg-or-subclass-(vns.rslifctxtoinstp)", 6073)
    prop._addConstant("vnsRsLIfCtxToLIf", "relation-from-lif-context-to-lif-(vns.rslifctxtolif)", 4663)
    prop._addConstant("vnsRsLIfCtxToOut", "relation-from-lif-context-to-l3ext:out-(vns.rslifctxtoout)", 5989)
    prop._addConstant("vnsRsLIfCtxToOutDef", "relation-from-lif-context-to-l3ext:outdef-(vns.rslifctxtooutdef)", 10614)
    prop._addConstant("vnsRsLIfCtxToSvcEPgPol", "relation-from-lif-context-to-service-epg-profile-(vns.rslifctxtosvcepgpol)", 12987)
    prop._addConstant("vnsRsLIfCtxToSvcRedirectPol", "relation-from-lif-context-to-service-redirect-policy-(vns.rslifctxtosvcredirectpol)", 7079)
    prop._addConstant("vnsRsLdevIfToLDev", "relation-from-ldev-interface-to-an-ldev-(vns.rsldeviftoldev)", 4870)
    prop._addConstant("vnsRsMConnAtt", "relation-from-a-function-connector-to-a-meta-connector-from-package-(vns.rsmconnatt)", 4677)
    prop._addConstant("vnsRsMConnAttInst", "relation-from-a-function-connector-to-a-meta-connector-from-package-(vns.rsmconnattinst)", 5289)
    prop._addConstant("vnsRsMDevAtt", "relation-from-a-service-l4-l7-devices-to-meta-device-information-(vns.rsmdevatt)", 4873)
    prop._addConstant("vnsRsMetaIf", "relation-from-a-logical-interface-to-an-interface-label-(vns.rsmetaif)", 4886)
    prop._addConstant("vnsRsMgmtAddr", "relation-from-management-policy-for-ctrl-eps-to-ip-address-range-(vns.rsmgmtaddr)", 4935)
    prop._addConstant("vnsRsNodeInstToCloudLDev", "relation-from-a-node-instance-to-a-cloud-logical-device-(vns.rsnodeinsttocloudldev)", 15149)
    prop._addConstant("vnsRsNodeInstToLDevCtx", "relation-from-a-node-instance-to-a-logical-device-context-(vns.rsnodeinsttoldevctx)", 4781)
    prop._addConstant("vnsRsNodeToAbsFuncProf", "relation-from-an-function-node-to-an-service-graph-function-profile-(vns.rsnodetoabsfuncprof)", 4632)
    prop._addConstant("vnsRsNodeToCloudLDev", "relation-from-a-absnode-to-an-cloudldev-(vns.rsnodetocloudldev)", 15147)
    prop._addConstant("vnsRsNodeToLDev", "relation-from-a-absnode-to-an-ldev-(vns.rsnodetoldev)", 7017)
    prop._addConstant("vnsRsNodeToMFunc", "relation-from-an-function-node-to-meta-function-from-the-package-(vns.rsnodetomfunc)", 4630)
    prop._addConstant("vnsRsProfToCloudModeMDev", "relation-to-cloudmode-mdev.-(vns.rsproftocloudmodemdev)", 11702)
    prop._addConstant("vnsRsProfToMFunc", "relation-to-l4-l7-services-function-profile-meta-func.-(vns.rsproftomfunc)", 4645)
    prop._addConstant("vnsRsRedirectHealthGroup", "l4-l7-redirect-health-group-(vns.rsredirecthealthgroup)", 10955)
    prop._addConstant("vnsRsScopeToTerm", "relation-to-abstract-folder-contract-terminal-(vns.rsscopetoterm)", 4635)
    prop._addConstant("vnsRsTermToAny", "relation-from-a-terminal-node-to-any-(vns.rstermtoany)", 5713)
    prop._addConstant("vnsRsTermToEPg", "relation-from-a-terminal-node-to-an-epg-(vns.rstermtoepg)", 4653)
    prop._addConstant("vnsRsToCIf", "concrete-interface-(vns.rstocif)", 13199)
    prop._addConstant("vnsRsVDevDomainRefContToDomainRef", "relation-from-vdev-domainref-container-to-aaa-domain-ref-(vns.rsvdevdomainrefconttodomainref)", 6071)
    prop._addConstant("vnsRsVDevToDomainRef", "relation-from-vdev-to-aaa-domain-ref-(vns.rsvdevtodomainref)", 5295)
    prop._addConstant("vnsRsVLIfP", "relation-from-concrete-interface-to-the-floating-svi-interface-(vns.rsvlifp)", 15829)
    prop._addConstant("vnsRtrIdInfo", "service-vdev-router-id-information-(vns.rtridinfo)", 6651)
    prop._addConstant("vnsSHEPpInfo", "service-vdev-epp-information-(vns.sheppinfo)", 6131)
    prop._addConstant("vnsSLDevInstCons", "shared-ldevinst-consumer-(vns.sldevinstcons)", 5964)
    prop._addConstant("vnsSvcCont", "service-container-(vns.svccont)", 7081)
    prop._addConstant("vnsSvcEPgPol", "service-epg-policy-(vns.svcepgpol)", 12989)
    prop._addConstant("vnsSvcPol", "l4-l7-policy-container-(vns.svcpol)", 11021)
    prop._addConstant("vnsSvcRedirectPol", "service-redirect-policy-(vns.svcredirectpol)", 7082)
    prop._addConstant("vnsSvcVipUpdate", "svc-vip-update-(vns.svcvipupdate)", 6837)
    prop._addConstant("vnsTermConnInst", "connector-instance-(vns.termconninst)", 4845)
    prop._addConstant("vnsTermNodeInst", "input-node-instance-(vns.termnodeinst)", 4804)
    prop._addConstant("vnsVBgpDevCfg", "bgp-configuration-(vns.vbgpdevcfg)", 5994)
    prop._addConstant("vnsVBgpVEncapAsc", "bgp-connector-configuration-(vns.vbgpvencapasc)", 6152)
    prop._addConstant("vnsVConn", "function-connector-(vns.vconn)", 4906)
    prop._addConstant("vnsVDev", "virtual-device-(vns.vdev)", 4899)
    prop._addConstant("vnsVDevDomainRefCont", "vdev-domainref-container-(vns.vdevdomainrefcont)", 6070)
    prop._addConstant("vnsVDevOperInfo", "logical-device-operational-information-(vns.vdevoperinfo)", 5469)
    prop._addConstant("vnsVEncap", "encap-information-(vns.vencap)", 4940)
    prop._addConstant("vnsVEncapAsc", "encap-association-(vns.vencapasc)", 4919)
    prop._addConstant("vnsVFunc", "service-function-(vns.vfunc)", 4903)
    prop._addConstant("vnsVGrp", "function-group-(vns.vgrp)", 4902)
    prop._addConstant("vnsVGrpP", "function-group-(vns.vgrpp)", 9128)
    prop._addConstant("vnsVIf", "interface-(vns.vif)", 4916)
    prop._addConstant("vnsVOspfDevCfg", "ospf-configuration-(vns.vospfdevcfg)", 5993)
    prop._addConstant("vnsVOspfVEncapAsc", "ospf-connector-configuration-(vns.vospfvencapasc)", 6151)
    prop._addConstant("vsanCktEp", "cktep-(vsan.cktep)", 8439)
    prop._addConstant("vxlanCktEp", "vxlan-(vxlan.cktep)", 3393)
    prop._addConstant("vzAny", "any-(vz.any)", 1346)
    prop._addConstant("vzBrCP", "contract-(vz.brcp)", 1300)
    prop._addConstant("vzCPIf", "imported-contract-(vz.cpif)", 1308)
    prop._addConstant("vzCollectionCont", "contract-container-(vz.collectioncont)", 1408)
    prop._addConstant("vzCollectionDef", "collection-definition-(vz.collectiondef)", 1374)
    prop._addConstant("vzConsDef", "consumer-epg-(vz.consdef)", 1401)
    prop._addConstant("vzCtrctEPgCont", "contract-epg-container-(vz.ctrctepgcont)", 1378)
    prop._addConstant("vzCtrctEntityDef", "summary-of-epg:-contains-all-info-to-create-provdef/consdef-(vz.ctrctentitydef)", 5496)
    prop._addConstant("vzDirAssDef", "container-def-for-all-epgs-associating-directly-to-contract/bundle/group-(vz.dirassdef)", 1395)
    prop._addConstant("vzERFltP", "filter-profile-(vz.erfltp)", 5695)
    prop._addConstant("vzEntry", "filter-entry-(vz.entry)", 1368)
    prop._addConstant("vzEpgAnyDef", "contract-container-def-via-vzany-(vz.epganydef)", 1396)
    prop._addConstant("vzFilter", "filter-(vz.filter)", 1362)
    prop._addConstant("vzFromEPg", "contract-(vz.fromepg)", 1379)
    prop._addConstant("vzInTerm", "interm-subject-(vz.interm)", 1331)
    prop._addConstant("vzInheritedDef", "container-def-for-all-epgs-associating-to-contract/bundle/group-via-security-inheritance-(vz.inheriteddef)", 10018)
    prop._addConstant("vzIntDef", "contract/bundle-interface-container-def-(vz.intdef)", 1397)
    prop._addConstant("vzIntraEPgDef", "container-def-for-all-epgs-associating-directly-to-contract/bundle/group-(vz.intraepgdef)", 10714)
    prop._addConstant("vzIntraSecurityDef", "epg-with-intra-epg-security-enabled-(vz.intrasecuritydef)", 10715)
    prop._addConstant("vzOOBBrCP", "out-of-band-contract-(vz.oobbrcp)", 1305)
    prop._addConstant("vzOutTerm", "outterm-subject-(vz.outterm)", 1334)
    prop._addConstant("vzProvDef", "provider-epg-(vz.provdef)", 1400)
    prop._addConstant("vzRFltP", "filter-profile-(vz.rfltp)", 1369)
    prop._addConstant("vzRsAnyToCons", "contract-(vz.rsanytocons)", 1349)
    prop._addConstant("vzRsAnyToConsIf", "imported-contract-(vz.rsanytoconsif)", 1351)
    prop._addConstant("vzRsAnyToProv", "contract-(vz.rsanytoprov)", 1347)
    prop._addConstant("vzRsDenyRule", "deny-rule-(vz.rsdenyrule)", 1325)
    prop._addConstant("vzRsFiltAtt", "filter-(vz.rsfiltatt)", 1329)
    prop._addConstant("vzRsFiltGraphAtt", "relation-to-filter-graph-attachment-(vz.rsfiltgraphatt)", 1315)
    prop._addConstant("vzRsGraphAtt", "l4-l7-service-graph-template-(vz.rsgraphatt)", 1303)
    prop._addConstant("vzRsIf", "contract-(vz.rsif)", 1309)
    prop._addConstant("vzRsInTermGraphAtt", "l4-l7-service-graph-template-(vz.rsintermgraphatt)", 1332)
    prop._addConstant("vzRsOutTermGraphAtt", "l4-l7-service-graph-template-(vz.rsouttermgraphatt)", 1335)
    prop._addConstant("vzRsRFltAtt", "super-class-for-any-relation-to-rfltp-(vz.rsrfltatt)", 1383)
    prop._addConstant("vzRsSdwanPol", "relation-to-sdwan-sla-policy-(vz.rssdwanpol)", 14308)
    prop._addConstant("vzRsSubjFiltAtt", "subject-filter-(vz.rssubjfiltatt)", 1320)
    prop._addConstant("vzRsSubjGraphAtt", "l4-l7-service-graph-template-(vz.rssubjgraphatt)", 1322)
    prop._addConstant("vzSubj", "contract-subject-(vz.subj)", 1319)
    prop._addConstant("vzSubjDef", "contract-dependency-container-def-(vz.subjdef)", 1398)
    prop._addConstant("vzTSubj", "taboo-contract-subject-(vz.tsubj)", 1324)
    prop._addConstant("vzTaboo", "taboo-contract-(vz.taboo)", 1306)
    prop._addConstant("vzToEPg", "to-epg-(vz.toepg)", 1380)
    meta.props.add("scope", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    meta.namingProps.append(getattr(meta.props, "scope"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToHcloudIgw", "Tenant to IGW", "cobra.model.hcloud.SecurityGroup"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToHcloudSecurityGroup", "Tenant to Security Group", "cobra.model.hcloud.SecurityGroup"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToVzCPIf", "Tenant to vzCPIf", "cobra.model.vz.CPIf"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToVzFilter", "From fvTenant to vzFilter", "cobra.model.vz.Filter"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToVnsAbsGraph", "From fvTenant to vnsAbsGraph", "cobra.model.vns.AbsGraph"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToCloudLB", "From fvTenant to cloudLB", "cobra.model.cloud.LB"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToCloudZone", "From fvTenant to cloudZone", "cobra.model.cloud.Zone"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudCtxProfile", "Tenant to cloudCtxProfile", "cobra.model.cloud.CtxProfile"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToVzBrCP", "Tenant to vzBrCP", "cobra.model.vz.BrCP"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToHcloudCsr", "Tenant to hcloudCsr", "cobra.model.hcloud.Csr"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudExtEPg", "fv:Tenant to cloud:ExtEPg", "cobra.model.cloud.ExtEPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudRegion", "From fvTenant to cloudRegion", "cobra.model.cloud.Region"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToHcloudRegion", "Tenant to hcloudRegion", "cobra.model.hcloud.Region"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToFvCtx", "fvTenant to fvCtx", "cobra.model.fv.Ctx"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToHcloudCtx", "Tenant to Hcloud context", "cobra.model.hcloud.Ctx"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToHCloudEndPoint", "Tenant to hcloudEndPoint", "cobra.model.hcloud.EndPoint"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudApp", "Tenant to Application profile", "cobra.model.cloud.App"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudEPg", "Tenant to cloud EPg", "cobra.model.cloud.EPg"))

    def __init__(self, parentMoOrDn, scope, markDirty=True, **creationProps):
        namingVals = [scope]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

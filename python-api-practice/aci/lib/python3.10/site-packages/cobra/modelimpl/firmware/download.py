# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Download(Mo):
    """
    Information about the last download attempted from a specific source.

    """

    meta = ClassMeta("cobra.model.firmware.Download")

    meta.moClassName = "firmwareDownload"
    meta.rnFormat = "download-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Firmware Download Status"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x20000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.firmware.InternalSource")
    meta.parentClasses.add("cobra.model.firmware.Repo")
    meta.parentClasses.add("cobra.model.firmware.OSource")
    meta.parentClasses.add("cobra.model.vns.VmmConfigFile")
    meta.parentClasses.add("cobra.model.vns.SvcPkgSource")
    meta.parentClasses.add("cobra.model.firmware.CcoSource")

    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('download-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dnldPercent", "dnldPercent", 584, PropCategory.REGULAR)
    prop.label = "Download Percentage"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 100)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("dnldPercent", prop)

    prop = PropMeta("str", "lastPolled", "lastPolled", 581, PropCategory.REGULAR)
    prop.label = "Last Polled"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastPolled", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 13828, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 6519, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "operQual", "operQual", 583, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("disk-write-error", "error-while-writing-to-disk", 32)
    prop._addConstant("downloaded-image-bad", "bad-image", 1)
    prop._addConstant("downloaded-image-wrong-security-type", "wrong-security-type", 8)
    prop._addConstant("noerror", "no-error", 16)
    prop._addConstant("success", "success", 4)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("unknown-failure", "failure", 2)
    meta.props.add("operQual", prop)

    prop = PropMeta("str", "operQualStr", "operQualStr", 17557, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("operQualStr", prop)

    prop = PropMeta("str", "operSt", "operSt", 582, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "not-queued"
    prop._addConstant("download-failed", "download-failed", 4)
    prop._addConstant("downloaded", "downloaded", 3)
    prop._addConstant("downloading", "downloading", 2)
    prop._addConstant("not-queued", "not-queued", 0)
    prop._addConstant("queued", "queued", 1)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "url", "url", 44823, PropCategory.REGULAR)
    prop.label = "URL"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("url", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

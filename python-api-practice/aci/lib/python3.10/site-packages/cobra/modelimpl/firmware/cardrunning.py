# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class CardRunning(Mo):
    """
    Information about each card firmware that is running.

    """

    meta = ClassMeta("cobra.model.firmware.CardRunning")

    meta.moClassName = "firmwareCardRunning"
    meta.rnFormat = "running"
    meta.category = MoCategory.REGULAR
    meta.label = "Card Running Status"
    meta.writeAccessMask = 0x800000000000001
    meta.readAccessMask = 0x800000000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.eqpt.LC")
    meta.parentClasses.add("cobra.model.eqpt.SysC")
    meta.parentClasses.add("cobra.model.eqpt.SupC")
    meta.parentClasses.add("cobra.model.eqpt.FC")

    meta.superClasses.add("cobra.model.firmware.ARunning")

    meta.rnPrefixes = [
        ('running', False),
    ]

    prop = PropMeta("str", "biosVer", "biosVer", 3286, PropCategory.REGULAR)
    prop.label = "Loader Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("biosVer", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5615, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "expectedVer", "expectedVer", 17919, PropCategory.REGULAR)
    prop.label = "Expected Loader Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("expectedVer", prop)

    prop = PropMeta("str", "interimVer", "interimVer", 3287, PropCategory.REGULAR)
    prop.label = "Interim Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("interimVer", prop)

    prop = PropMeta("str", "internalLabel", "internalLabel", 603, PropCategory.REGULAR)
    prop.label = "Internal Label"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("internalLabel", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "mode", "mode", 605, PropCategory.REGULAR)
    prop.label = "Mode"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "normal"
    prop._addConstant("normal", "normal", 0)
    prop._addConstant("recovery", "reovery", 1)
    meta.props.add("mode", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 17923, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "operSt", "operSt", 17920, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("ok", "version-match", 0)
    prop._addConstant("ver-mismatch", "version-mismatch", 1)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "srFwFlashRecVer", "srFwFlashRecVer", 55341, PropCategory.REGULAR)
    prop.label = "SR Firmware Flash Recovery Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("srFwFlashRecVer", prop)

    prop = PropMeta("str", "srFwFlashVer", "srFwFlashVer", 53303, PropCategory.REGULAR)
    prop.label = "SR FW Flash Primary Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("srFwFlashVer", prop)

    prop = PropMeta("str", "srFwImageVer", "srFwImageVer", 53302, PropCategory.REGULAR)
    prop.label = "SR FW Image Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("srFwImageVer", prop)

    prop = PropMeta("str", "srFwRunningSrc", "srFwRunningSrc", 55342, PropCategory.REGULAR)
    prop.label = "SR Firmware Flash Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("flash-primary", "fw-source-flash-primary", 2)
    prop._addConstant("flash-recovery", "fw-source-flash-recovery", 3)
    prop._addConstant("image", "fw-source-image", 1)
    prop._addConstant("unknown", "fw-source-unknown", 0)
    meta.props.add("srFwRunningSrc", prop)

    prop = PropMeta("str", "srFwRunningVer", "srFwRunningVer", 53301, PropCategory.REGULAR)
    prop.label = "SR FW Running Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("srFwRunningVer", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "ts", "ts", 606, PropCategory.REGULAR)
    prop.label = "Timestamp"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("ts", prop)

    prop = PropMeta("str", "type", "type", 604, PropCategory.REGULAR)
    prop.label = "Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "switch"
    prop._addConstant("catalog", "catalog", 2)
    prop._addConstant("config", "config", 5)
    prop._addConstant("controller", "controller", 0)
    prop._addConstant("plugin", "plugin", 3)
    prop._addConstant("pluginPackage", "pluginpackage", 4)
    prop._addConstant("switch", "switch", 1)
    prop._addConstant("vpod", "vpod", 6)
    meta.props.add("type", prop)

    prop = PropMeta("str", "version", "version", 602, PropCategory.REGULAR)
    prop.label = "Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("version", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("EqptSlotToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

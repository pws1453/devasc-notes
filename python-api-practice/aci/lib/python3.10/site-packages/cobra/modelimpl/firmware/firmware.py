# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Firmware(Mo):
    """
    The firmware specification.

    """

    meta = ClassMeta("cobra.model.firmware.Firmware")

    meta.moClassName = "firmwareFirmware"
    meta.rnFormat = "fw-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Firmware"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x4000020000000001
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.firmware.RtPlgnFirmware")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.firmware.RtPrepackagedPlugin")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.firmware.RtFwFw")
    meta.childClasses.add("cobra.model.firmware.RtFirmware")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.firmware.RtPrepackagedPlugin", "rtprepackagedPlugin"))
    meta.childNamesAndRnPrefix.append(("cobra.model.firmware.RtPlgnFirmware", "rtpolPlgnFirmware-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.firmware.RtFirmware", "rtpolFirmware-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.firmware.RtFwFw", "rtpolFwFw-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))

    meta.parentClasses.add("cobra.model.firmware.Repo")

    meta.rnPrefixes = [
        ('fw-', True),
    ]

    prop = PropMeta("str", "annotation", "annotation", 37321, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "autoloadCatalog", "autoloadCatalog", 16138, PropCategory.REGULAR)
    prop.label = "Auto extracted catalog version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("autoloadCatalog", prop)

    prop = PropMeta("str", "checksum", "checksum", 591, PropCategory.REGULAR)
    prop.label = "Checksum"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("checksum", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "deleteIt", "deleteIt", 594, PropCategory.REGULAR)
    prop.label = "Action to Delete"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("deleteIt", prop)

    prop = PropMeta("str", "description", "description", 592, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("description", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dnldStatus", "dnldStatus", 599, PropCategory.REGULAR)
    prop.label = "Download Status"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "not-queued"
    prop._addConstant("download-failed", "download-failed", 4)
    prop._addConstant("downloaded", "downloaded", 3)
    prop._addConstant("downloading", "downloading", 2)
    prop._addConstant("not-queued", "not-queued", 0)
    prop._addConstant("queued", "queued", 1)
    meta.props.add("dnldStatus", prop)

    prop = PropMeta("str", "downloadDate", "downloadDate", 595, PropCategory.REGULAR)
    prop.label = "Download Date"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("downloadDate", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 39460, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "fullVersion", "fullVersion", 16606, PropCategory.REGULAR)
    prop.label = "Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("fullVersion", prop)

    prop = PropMeta("str", "iUrl", "iUrl", 598, PropCategory.REGULAR)
    prop.label = "Internal URL"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("iUrl", prop)

    prop = PropMeta("str", "isoname", "isoname", 588, PropCategory.REGULAR)
    prop.label = "ISO Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("isoname", prop)

    prop = PropMeta("str", "latest", "latest", 593, PropCategory.REGULAR)
    prop.label = "Whether Latest"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("latest", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "minorVersion", "minorVersion", 586, PropCategory.REGULAR)
    prop.label = "Minor Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("minorVersion", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 587, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 512)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "releaseDate", "releaseDate", 596, PropCategory.REGULAR)
    prop.label = "Release Date"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("releaseDate", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "size", "size", 590, PropCategory.REGULAR)
    prop.label = "Size"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("size", prop)

    prop = PropMeta("str", "size64", "size64", 27408, PropCategory.REGULAR)
    prop.label = "Size64"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("size64", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "type", "type", 589, PropCategory.REGULAR)
    prop.label = "Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "switch"
    prop._addConstant("catalog", "catalog", 2)
    prop._addConstant("config", "config", 5)
    prop._addConstant("controller", "controller", 0)
    prop._addConstant("plugin", "plugin", 3)
    prop._addConstant("pluginPackage", "pluginpackage", 4)
    prop._addConstant("switch", "switch", 1)
    prop._addConstant("vpod", "vpod", 6)
    meta.props.add("type", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    prop = PropMeta("str", "url", "url", 597, PropCategory.REGULAR)
    prop.label = "URL"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("url", prop)

    prop = PropMeta("str", "version", "version", 585, PropCategory.REGULAR)
    prop.label = "Version"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("version", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

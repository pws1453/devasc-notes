# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class ProtoPol(Mo):
    meta = ClassMeta("cobra.model.fabric.ProtoPol")

    meta.isAbstract = True
    meta.moClassName = "fabricProtoPol"


    meta.moClassName = "fabricProtoPol"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "None"
    meta.writeAccessMask = 0x0
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Def")

    meta.concreteSubClasses.add("cobra.model.poe.IfPol")
    meta.concreteSubClasses.add("cobra.model.cdp.InstPol")
    meta.concreteSubClasses.add("cobra.model.extdev.SDWanVpnCont")
    meta.concreteSubClasses.add("cobra.model.span.VDestGrpDef")
    meta.concreteSubClasses.add("cobra.model.bgp.CtxDef")
    meta.concreteSubClasses.add("cobra.model.bgp.RtTargetDef")
    meta.concreteSubClasses.add("cobra.model.pim.IPV6CtxDef")
    meta.concreteSubClasses.add("cobra.model.bgp.RtTargetInstrPDef")
    meta.concreteSubClasses.add("cobra.model.nws.FwPol")
    meta.concreteSubClasses.add("cobra.model.ospf.CtxPol")
    meta.concreteSubClasses.add("cobra.model.copp.ProtoClassP")
    meta.concreteSubClasses.add("cobra.model.mld.SnoopPol")
    meta.concreteSubClasses.add("cobra.model.macsec.FabIfPol")
    meta.concreteSubClasses.add("cobra.model.l2.InstPol")
    meta.concreteSubClasses.add("cobra.model.fabric.LinkFlapPol")
    meta.concreteSubClasses.add("cobra.model.igmp.SnoopPol")
    meta.concreteSubClasses.add("cobra.model.lacp.LagPol")
    meta.concreteSubClasses.add("cobra.model.edr.ErrDisRecoverPol")
    meta.concreteSubClasses.add("cobra.model.igmp.CtxDef")
    meta.concreteSubClasses.add("cobra.model.hsrp.GroupPol")
    meta.concreteSubClasses.add("cobra.model.ep.LoopProtectP")
    meta.concreteSubClasses.add("cobra.model.bgp.AutoRtTargetPDef")
    meta.concreteSubClasses.add("cobra.model.bgp.RtTargetPDef")
    meta.concreteSubClasses.add("cobra.model.ep.ControlP")
    meta.concreteSubClasses.add("cobra.model.span.VSrcGrpDef")
    meta.concreteSubClasses.add("cobra.model.lacp.LagPolDef")
    meta.concreteSubClasses.add("cobra.model.span.VSpanProv")
    meta.concreteSubClasses.add("cobra.model.nd.PfxPolDef")
    meta.concreteSubClasses.add("cobra.model.bfd.IfPol")
    meta.concreteSubClasses.add("cobra.model.span.SrcTargetShadow")
    meta.concreteSubClasses.add("cobra.model.igmp.IfPol")
    meta.concreteSubClasses.add("cobra.model.bgp.InstPol")
    meta.concreteSubClasses.add("cobra.model.l2.LoadBalancePol")
    meta.concreteSubClasses.add("cobra.model.span.SrcTargetShadowL3If")
    meta.concreteSubClasses.add("cobra.model.cdp.IfPolDef")
    meta.concreteSubClasses.add("cobra.model.copp.IfPol")
    meta.concreteSubClasses.add("cobra.model.twamp.ResponderPol")
    meta.concreteSubClasses.add("cobra.model.span.VSrcGrp")
    meta.concreteSubClasses.add("cobra.model.macsec.IfPol")
    meta.concreteSubClasses.add("cobra.model.mcp.InstPol")
    meta.concreteSubClasses.add("cobra.model.extdev.SDWanVpnEntry")
    meta.concreteSubClasses.add("cobra.model.arp.IfPol")
    meta.concreteSubClasses.add("cobra.model.l3ext.FabricExtRoutingP")
    meta.concreteSubClasses.add("cobra.model.l3.IfPol")
    meta.concreteSubClasses.add("cobra.model.macsec.KeyChainPol")
    meta.concreteSubClasses.add("cobra.model.extdev.SDWanVpnDef")
    meta.concreteSubClasses.add("cobra.model.stp.IfPolDef")
    meta.concreteSubClasses.add("cobra.model.netflow.VmmExporterPolDef")
    meta.concreteSubClasses.add("cobra.model.l2.IfPol")
    meta.concreteSubClasses.add("cobra.model.span.Dest")
    meta.concreteSubClasses.add("cobra.model.span.SrcTargetShadowBD")
    meta.concreteSubClasses.add("cobra.model.l3ext.RouteTagDef")
    meta.concreteSubClasses.add("cobra.model.l2.PortAuthPol")
    meta.concreteSubClasses.add("cobra.model.bfd.Ipv6InstPol")
    meta.concreteSubClasses.add("cobra.model.fv.EpRetPol")
    meta.concreteSubClasses.add("cobra.model.dwdm.FabIfPol")
    meta.concreteSubClasses.add("cobra.model.span.SpanProv")
    meta.concreteSubClasses.add("cobra.model.netflow.RecordPol")
    meta.concreteSubClasses.add("cobra.model.isis.DomPol")
    meta.concreteSubClasses.add("cobra.model.mld.SnoopDef")
    meta.concreteSubClasses.add("cobra.model.lldp.IfPolDef")
    meta.concreteSubClasses.add("cobra.model.netflow.ExporterPolDef")
    meta.concreteSubClasses.add("cobra.model.dnsepg.Domain")
    meta.concreteSubClasses.add("cobra.model.dns.Prof")
    meta.concreteSubClasses.add("cobra.model.fc.InstPol")
    meta.concreteSubClasses.add("cobra.model.bgp.RtTarget")
    meta.concreteSubClasses.add("cobra.model.pim.IPV6CtxP")
    meta.concreteSubClasses.add("cobra.model.bgp.RtTargetP")
    meta.concreteSubClasses.add("cobra.model.pim.CtxP")
    meta.concreteSubClasses.add("cobra.model.vpc.InstPol")
    meta.concreteSubClasses.add("cobra.model.netflow.ExporterPol")
    meta.concreteSubClasses.add("cobra.model.eigrp.CtxAfPol")
    meta.concreteSubClasses.add("cobra.model.nd.PfxPol")
    meta.concreteSubClasses.add("cobra.model.l2.PortSecurityPolDef")
    meta.concreteSubClasses.add("cobra.model.igmp.CtxP")
    meta.concreteSubClasses.add("cobra.model.pim.CtxDef")
    meta.concreteSubClasses.add("cobra.model.span.VDest")
    meta.concreteSubClasses.add("cobra.model.igmp.IfDef")
    meta.concreteSubClasses.add("cobra.model.lldp.InstPol")
    meta.concreteSubClasses.add("cobra.model.igmp.SnoopDef")
    meta.concreteSubClasses.add("cobra.model.pim.RouteMapDef")
    meta.concreteSubClasses.add("cobra.model.arp.IfPolDef")
    meta.concreteSubClasses.add("cobra.model.dnsepg.ZoneEntry")
    meta.concreteSubClasses.add("cobra.model.bgp.RtTargetInstrP")
    meta.concreteSubClasses.add("cobra.model.l4.VxlanInstPolDef")
    meta.concreteSubClasses.add("cobra.model.fc.FabricPol")
    meta.concreteSubClasses.add("cobra.model.l4.VxlanInstPol")
    meta.concreteSubClasses.add("cobra.model.pim.RouteMapPol")
    meta.concreteSubClasses.add("cobra.model.cdp.IfPol")
    meta.concreteSubClasses.add("cobra.model.ep.IpAgingP")
    meta.concreteSubClasses.add("cobra.model.nd.IfPolDef")
    meta.concreteSubClasses.add("cobra.model.mcp.IfPol")
    meta.concreteSubClasses.add("cobra.model.qos.DppPolDef")
    meta.concreteSubClasses.add("cobra.model.bgp.CtxAfDef")
    meta.concreteSubClasses.add("cobra.model.fabric.HIfPol")
    meta.concreteSubClasses.add("cobra.model.l3ext.FabricExtRoutingPDef")
    meta.concreteSubClasses.add("cobra.model.fc.IfPol")
    meta.concreteSubClasses.add("cobra.model.dwdm.IfPol")
    meta.concreteSubClasses.add("cobra.model.twamp.ServerPol")
    meta.concreteSubClasses.add("cobra.model.hsrp.IfPol")
    meta.concreteSubClasses.add("cobra.model.cloudsec.IfPol")
    meta.concreteSubClasses.add("cobra.model.poe.InstPol")
    meta.concreteSubClasses.add("cobra.model.netflow.VmmExporterPol")
    meta.concreteSubClasses.add("cobra.model.netflow.MonitorPol")
    meta.concreteSubClasses.add("cobra.model.ospf.IfPol")
    meta.concreteSubClasses.add("cobra.model.bgp.PeerPfxPol")
    meta.concreteSubClasses.add("cobra.model.pim.IfPol")
    meta.concreteSubClasses.add("cobra.model.span.SrcTargetShadowCtx")
    meta.concreteSubClasses.add("cobra.model.lldp.IfPol")
    meta.concreteSubClasses.add("cobra.model.macsec.ParamPol")
    meta.concreteSubClasses.add("cobra.model.l2.InstPolDef")
    meta.concreteSubClasses.add("cobra.model.dhcp.RelayP")
    meta.concreteSubClasses.add("cobra.model.span.DestGrp")
    meta.concreteSubClasses.add("cobra.model.bgp.CtxAfPol")
    meta.concreteSubClasses.add("cobra.model.netflow.RecordPolDef")
    meta.concreteSubClasses.add("cobra.model.span.SrcGrpDef")
    meta.concreteSubClasses.add("cobra.model.lbp.Pol")
    meta.concreteSubClasses.add("cobra.model.psu.InstPol")
    meta.concreteSubClasses.add("cobra.model.eigrp.IfPol")
    meta.concreteSubClasses.add("cobra.model.stp.IfPol")
    meta.concreteSubClasses.add("cobra.model.fabric.FLinkFlapPol")
    meta.concreteSubClasses.add("cobra.model.coop.Pol")
    meta.concreteSubClasses.add("cobra.model.eigrp.CtxAfDef")
    meta.concreteSubClasses.add("cobra.model.nd.IfPol")
    meta.concreteSubClasses.add("cobra.model.wwn.InstPol")
    meta.concreteSubClasses.add("cobra.model.netflow.MonitorPolDef")
    meta.concreteSubClasses.add("cobra.model.qos.DppPol")
    meta.concreteSubClasses.add("cobra.model.rtdmc.McastIfDefCont")
    meta.concreteSubClasses.add("cobra.model.macsec.FabParamPol")
    meta.concreteSubClasses.add("cobra.model.span.TaskParam")
    meta.concreteSubClasses.add("cobra.model.pim.IfDef")
    meta.concreteSubClasses.add("cobra.model.fv.EpRetDef")
    meta.concreteSubClasses.add("cobra.model.ospf.CtxDefAf")
    meta.concreteSubClasses.add("cobra.model.bgp.CtxPol")
    meta.concreteSubClasses.add("cobra.model.span.VDestDef")
    meta.concreteSubClasses.add("cobra.model.rtdmc.IPV6McastIfDefCont")
    meta.concreteSubClasses.add("cobra.model.fabric.FIfPol")
    meta.concreteSubClasses.add("cobra.model.stormctrl.IfPol")
    meta.concreteSubClasses.add("cobra.model.l3ext.RouteTagPol")
    meta.concreteSubClasses.add("cobra.model.span.SrcGrp")
    meta.concreteSubClasses.add("cobra.model.span.VDestGrp")
    meta.concreteSubClasses.add("cobra.model.extdev.SDWanPolCont")
    meta.concreteSubClasses.add("cobra.model.dns.Profile")
    meta.concreteSubClasses.add("cobra.model.dnsepg.ZoneDB")
    meta.concreteSubClasses.add("cobra.model.bgp.NodeCtxDef")
    meta.concreteSubClasses.add("cobra.model.lacp.IfPol")
    meta.concreteSubClasses.add("cobra.model.stp.InstPol")
    meta.concreteSubClasses.add("cobra.model.ospf.CtxDef")
    meta.concreteSubClasses.add("cobra.model.l2.NodeAuthPol")
    meta.concreteSubClasses.add("cobra.model.macsec.KeyPol")
    meta.concreteSubClasses.add("cobra.model.l2.PortSecurityPol")
    meta.concreteSubClasses.add("cobra.model.bfd.Ipv4InstPol")
    meta.concreteSubClasses.add("cobra.model.nws.FwPolDef")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5579, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

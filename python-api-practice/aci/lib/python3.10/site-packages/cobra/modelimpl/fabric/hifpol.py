# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class HIfPol(Mo):
    """
    The host interface policy specifies the layer 1 parameters of host facing ports.

    """

    meta = ClassMeta("cobra.model.fabric.HIfPol")

    meta.moClassName = "fabricHIfPol"
    meta.rnFormat = "hintfpol-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Link Level Policy"
    meta.writeAccessMask = 0x2100000000001
    meta.readAccessMask = 0x2100000000001
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.fabric.RtHIfPol")
    meta.childClasses.add("cobra.model.tag.AliasDelInst")
    meta.childClasses.add("cobra.model.fabric.RtHIfPolCons")
    meta.childClasses.add("cobra.model.tag.ExtMngdInst")
    meta.childClasses.add("cobra.model.tag.AliasInst")
    meta.childClasses.add("cobra.model.fabric.RtResHIfPol")
    meta.childClasses.add("cobra.model.tag.Inst")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.fabric.RtHIfPolCons", "rtl1HIfPolCons-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fabric.RtHIfPol", "rtinfraHIfPol-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fabric.RtResHIfPol", "rtresHIfPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.AliasDelInst", "aliasdel-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.ExtMngdInst", "extmngd"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.AliasInst", "alias"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Inst", "tag-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.infra.Infra")

    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.fabric.ProtoPol")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Def")
    meta.superClasses.add("cobra.model.fabric.IntfPol")

    meta.rnPrefixes = [
        ('hintfpol-', True),
    ]

    prop = PropMeta("str", "annotation", "annotation", 37414, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "autoNeg", "autoNeg", 884, PropCategory.REGULAR)
    prop.label = "Auto Negotiation (On/Off)"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "on"
    prop._addConstant("off", "off", 2)
    prop._addConstant("on", "on", 1)
    meta.props.add("autoNeg", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5579, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dfeDelayMs", "dfeDelayMs", 57449, PropCategory.REGULAR)
    prop.label = "Port delay in milliseconds when coming up"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 10000)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("dfeDelayMs", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 39553, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "fecMode", "fecMode", 25837, PropCategory.REGULAR)
    prop.label = "FEC Mode"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "inherit"
    prop._addConstant("cl74-fc-fec", "cl74-fc-fec", 3)
    prop._addConstant("cl91-rs-fec", "cl91-rs-fec", 2)
    prop._addConstant("cons16-rs-fec", "cons16-rs-fec", 5)
    prop._addConstant("disable-fec", "disable-fec", 7)
    prop._addConstant("ieee-rs-fec", "ieee-rs-fec", 4)
    prop._addConstant("inherit", "inherit", 1)
    prop._addConstant("kp-fec", "kp-fec", 6)
    meta.props.add("fecMode", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "linkDebounce", "linkDebounce", 885, PropCategory.REGULAR)
    prop.label = "Link Debounce Interval (msec)"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 5000)]
    prop.defaultValue = 100
    prop.defaultValueStr = "100"
    meta.props.add("linkDebounce", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 13966, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 6441, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "speed", "speed", 883, PropCategory.REGULAR)
    prop.label = "Speed"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 10
    prop.defaultValueStr = "inherit"
    prop._addConstant("100G", "100-gbps", 7)
    prop._addConstant("100M", "100-mbps", 1)
    prop._addConstant("10G", "10-gbps", 3)
    prop._addConstant("1G", "1-gbps", 2)
    prop._addConstant("200G", "200-gbps", 8)
    prop._addConstant("25G", "25-gbps", 4)
    prop._addConstant("400G", "400-gbps", 9)
    prop._addConstant("40G", "40-gbps", 5)
    prop._addConstant("50G", "50-gbps", 6)
    prop._addConstant("inherit", "inherit", 10)
    prop._addConstant("unknown", "unspecified", 0)
    meta.props.add("speed", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Path"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("HIfPolToEthIf", "Interface", "cobra.model.l1.EthIf"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

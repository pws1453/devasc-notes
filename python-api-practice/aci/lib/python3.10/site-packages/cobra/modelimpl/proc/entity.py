# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Entity(Mo):
    """
    A container of processes in the system. This object holds detailed information about various processes running on the APIC.

    """

    meta = ClassMeta("cobra.model.proc.Entity")

    meta.moClassName = "procEntity"
    meta.rnFormat = "proc"
    meta.category = MoCategory.REGULAR
    meta.label = "Process Entity"
    meta.writeAccessMask = 0x800000000000001
    meta.readAccessMask = 0x800000000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.proc.CPUHist1d")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.proc.CPU15min")
    meta.childClasses.add("cobra.model.proc.MemHist1qtr")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.proc.CPU5min")
    meta.childClasses.add("cobra.model.proc.CPU1mo")
    meta.childClasses.add("cobra.model.proc.CPUHist1w")
    meta.childClasses.add("cobra.model.proc.CPU1qtr")
    meta.childClasses.add("cobra.model.proc.Mem15min")
    meta.childClasses.add("cobra.model.proc.CPUHist15min")
    meta.childClasses.add("cobra.model.proc.CPU1d")
    meta.childClasses.add("cobra.model.proc.CPU1year")
    meta.childClasses.add("cobra.model.proc.Mem1w")
    meta.childClasses.add("cobra.model.proc.CPU1h")
    meta.childClasses.add("cobra.model.proc.MemHist15min")
    meta.childClasses.add("cobra.model.proc.MemHist1mo")
    meta.childClasses.add("cobra.model.proc.CPU1w")
    meta.childClasses.add("cobra.model.proc.Entry")
    meta.childClasses.add("cobra.model.proc.Mem1qtr")
    meta.childClasses.add("cobra.model.proc.Mem5min")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.proc.Mem1mo")
    meta.childClasses.add("cobra.model.proc.CPUHist5min")
    meta.childClasses.add("cobra.model.proc.CPUHist1qtr")
    meta.childClasses.add("cobra.model.proc.MemHist1year")
    meta.childClasses.add("cobra.model.proc.CPUHist1h")
    meta.childClasses.add("cobra.model.proc.Mem1year")
    meta.childClasses.add("cobra.model.proc.Mem1d")
    meta.childClasses.add("cobra.model.proc.Mem1h")
    meta.childClasses.add("cobra.model.proc.MemHist1w")
    meta.childClasses.add("cobra.model.proc.MemHist1d")
    meta.childClasses.add("cobra.model.proc.MemHist1h")
    meta.childClasses.add("cobra.model.proc.CPUHist1year")
    meta.childClasses.add("cobra.model.proc.MemHist5min")
    meta.childClasses.add("cobra.model.proc.CPUHist1mo")

    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPUHist15min", "HDprocCPU15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.MemHist15min", "HDprocMem15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.MemHist1year", "HDprocMem1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPUHist1year", "HDprocCPU1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPU15min", "CDprocCPU15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.MemHist1qtr", "HDprocMem1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.Mem15min", "CDprocMem15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPU1year", "CDprocCPU1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPUHist5min", "HDprocCPU5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPUHist1qtr", "HDprocCPU1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.Mem1year", "CDprocMem1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.MemHist5min", "HDprocMem5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPU5min", "CDprocCPU5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPU1qtr", "CDprocCPU1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.MemHist1mo", "HDprocMem1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.Mem1qtr", "CDprocMem1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.Mem5min", "CDprocMem5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPUHist1mo", "HDprocCPU1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPUHist1d", "HDprocCPU1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPU1mo", "CDprocCPU1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPUHist1w", "HDprocCPU1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.Mem1mo", "CDprocMem1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPUHist1h", "HDprocCPU1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.MemHist1w", "HDprocMem1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.MemHist1d", "HDprocMem1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.MemHist1h", "HDprocMem1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPU1d", "CDprocCPU1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.Mem1w", "CDprocMem1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPU1h", "CDprocCPU1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.CPU1w", "CDprocCPU1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.Mem1d", "CDprocMem1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.Mem1h", "CDprocMem1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.Entry", "proc-"))

    meta.parentClasses.add("cobra.model.top.System")

    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.CpEntity")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.GEp")

    meta.rnPrefixes = [
        ('proc', False),
    ]

    prop = PropMeta("str", "adminSt", "adminSt", 3670, PropCategory.REGULAR)
    prop.label = "Admin State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cpuPct", "cpuPct", 4375, PropCategory.REGULAR)
    prop.label = "CPU Usage"
    prop.isOper = True
    prop.range = [(1, 100)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("cpuPct", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "maxMemAlloc", "maxMemAlloc", 4373, PropCategory.REGULAR)
    prop.label = "Maximum Memory Allocated"
    prop.isOper = True
    meta.props.add("maxMemAlloc", prop)

    prop = PropMeta("str", "memFree", "memFree", 4374, PropCategory.REGULAR)
    prop.label = "Free Memory"
    prop.isOper = True
    meta.props.add("memFree", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14583, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 3669, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "operErr", "operErr", 3672, PropCategory.REGULAR)
    prop.label = "Operational Errors Qualifier"
    prop.isOper = True
    prop._addConstant("feature-unsupported", "feature-unsupported", 64)
    prop._addConstant("init-err", "initialization-error", 1)
    prop._addConstant("int-err", "internal-error", 8)
    prop._addConstant("ipc-err", "ipc-error", 4)
    prop._addConstant("mem-err", "memory-error", 2)
    prop._addConstant("proto-err", "protocol-error", 32)
    prop._addConstant("sock-err", "socket-error", 16)
    meta.props.add("operErr", prop)

    prop = PropMeta("str", "operSt", "operSt", 3671, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    prop._addConstant("failed", "failed", 4)
    prop._addConstant("initializing", "initializing", 3)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

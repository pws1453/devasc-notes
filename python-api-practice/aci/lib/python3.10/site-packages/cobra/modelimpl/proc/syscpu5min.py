# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class SysCPU5min(Mo):
    """
    A class that represents the most current statistics for  System cpu in a 5 minute sampling interval.  This class updates every 10 seconds.

    """

    meta = StatsClassMeta("cobra.model.proc.SysCPU5min", "System cpu")

    counter = CounterMeta("idleAverage1m", CounterCategory.GAUGE, "percentage", "1 minute idle CPU average")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "idleAverage1mLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "idleAverage1mMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "idleAverage1mMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "idleAverage1mAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "idleAverage1mSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "idleAverage1mTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "idleAverage1mThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "idleAverage1mTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "idleAverage1mTr"
    meta._counters.append(counter)

    counter = CounterMeta("kernelAverage1m", CounterCategory.GAUGE, "percentage", "1 minute kernel CPU average")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "kernelAverage1mLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "kernelAverage1mMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "kernelAverage1mMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "kernelAverage1mAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "kernelAverage1mSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "kernelAverage1mTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "kernelAverage1mThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "kernelAverage1mTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "kernelAverage1mTr"
    meta._counters.append(counter)

    counter = CounterMeta("userAverage1m", CounterCategory.GAUGE, "percentage", "1 minute user CPU average")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "userAverage1mLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "userAverage1mMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "userAverage1mMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "userAverage1mAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "userAverage1mSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "userAverage1mTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "userAverage1mThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "userAverage1mTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "userAverage1mTr"
    meta._counters.append(counter)

    counter = CounterMeta("idle", CounterCategory.GAUGE, "percentage", "idle CPU")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "idleLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "idleMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "idleMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "idleAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "idleSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "idleTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "idleThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "idleTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "idleTr"
    meta._counters.append(counter)

    counter = CounterMeta("kernel", CounterCategory.GAUGE, "percentage", "kernel CPU")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "kernelLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "kernelMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "kernelMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "kernelAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "kernelSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "kernelTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "kernelThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "kernelTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "kernelTr"
    meta._counters.append(counter)

    counter = CounterMeta("user", CounterCategory.GAUGE, "percentage", "user CPU")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "userLast"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "userMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "userMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "userAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "userSpct"
    counter._propRefs[PropCategory.IMPLICIT_TOTAL] = "userTtl"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "userThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "userTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "userTr"
    meta._counters.append(counter)

    meta.moClassName = "procSysCPU5min"
    meta.rnFormat = "CDprocSysCPU5min"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current System cpu stats in 5 minute"
    meta.writeAccessMask = 0x800000000000001
    meta.readAccessMask = 0x800000000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.proc.System")

    meta.superClasses.add("cobra.model.proc.SysCPU")
    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.stats.Item")

    meta.rnPrefixes = [
        ('CDprocSysCPU5min', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "idleAverage1mAvg", "idleAverage1mAvg", 21901, PropCategory.IMPLICIT_AVG)
    prop.label = "1 minute idle CPU average average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleAverage1mAvg", prop)

    prop = PropMeta("str", "idleAverage1mLast", "idleAverage1mLast", 21898, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "1 minute idle CPU average current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleAverage1mLast", prop)

    prop = PropMeta("str", "idleAverage1mMax", "idleAverage1mMax", 21900, PropCategory.IMPLICIT_MAX)
    prop.label = "1 minute idle CPU average maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleAverage1mMax", prop)

    prop = PropMeta("str", "idleAverage1mMin", "idleAverage1mMin", 21899, PropCategory.IMPLICIT_MIN)
    prop.label = "1 minute idle CPU average minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleAverage1mMin", prop)

    prop = PropMeta("str", "idleAverage1mSpct", "idleAverage1mSpct", 21902, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "1 minute idle CPU average suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleAverage1mSpct", prop)

    prop = PropMeta("str", "idleAverage1mThr", "idleAverage1mThr", 21904, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "1 minute idle CPU average thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("idleAverage1mThr", prop)

    prop = PropMeta("str", "idleAverage1mTr", "idleAverage1mTr", 21906, PropCategory.IMPLICIT_TREND)
    prop.label = "1 minute idle CPU average trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleAverage1mTr", prop)

    prop = PropMeta("str", "idleAverage1mTrBase", "idleAverage1mTrBase", 21905, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "1 minute idle CPU average trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleAverage1mTrBase", prop)

    prop = PropMeta("str", "idleAverage1mTtl", "idleAverage1mTtl", 21903, PropCategory.IMPLICIT_TOTAL)
    prop.label = "1 minute idle CPU average total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleAverage1mTtl", prop)

    prop = PropMeta("str", "idleAvg", "idleAvg", 10657, PropCategory.IMPLICIT_AVG)
    prop.label = "idle CPU average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleAvg", prop)

    prop = PropMeta("str", "idleLast", "idleLast", 10654, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "idle CPU current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleLast", prop)

    prop = PropMeta("str", "idleMax", "idleMax", 10656, PropCategory.IMPLICIT_MAX)
    prop.label = "idle CPU maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleMax", prop)

    prop = PropMeta("str", "idleMin", "idleMin", 10655, PropCategory.IMPLICIT_MIN)
    prop.label = "idle CPU minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleMin", prop)

    prop = PropMeta("str", "idleSpct", "idleSpct", 10658, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "idle CPU suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleSpct", prop)

    prop = PropMeta("str", "idleThr", "idleThr", 10660, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "idle CPU thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("idleThr", prop)

    prop = PropMeta("str", "idleTr", "idleTr", 10662, PropCategory.IMPLICIT_TREND)
    prop.label = "idle CPU trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleTr", prop)

    prop = PropMeta("str", "idleTrBase", "idleTrBase", 10661, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "idle CPU trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleTrBase", prop)

    prop = PropMeta("str", "idleTtl", "idleTtl", 10659, PropCategory.IMPLICIT_TOTAL)
    prop.label = "idle CPU total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("idleTtl", prop)

    prop = PropMeta("str", "kernelAverage1mAvg", "kernelAverage1mAvg", 21916, PropCategory.IMPLICIT_AVG)
    prop.label = "1 minute kernel CPU average average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelAverage1mAvg", prop)

    prop = PropMeta("str", "kernelAverage1mLast", "kernelAverage1mLast", 21913, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "1 minute kernel CPU average current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelAverage1mLast", prop)

    prop = PropMeta("str", "kernelAverage1mMax", "kernelAverage1mMax", 21915, PropCategory.IMPLICIT_MAX)
    prop.label = "1 minute kernel CPU average maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelAverage1mMax", prop)

    prop = PropMeta("str", "kernelAverage1mMin", "kernelAverage1mMin", 21914, PropCategory.IMPLICIT_MIN)
    prop.label = "1 minute kernel CPU average minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelAverage1mMin", prop)

    prop = PropMeta("str", "kernelAverage1mSpct", "kernelAverage1mSpct", 21917, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "1 minute kernel CPU average suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelAverage1mSpct", prop)

    prop = PropMeta("str", "kernelAverage1mThr", "kernelAverage1mThr", 21919, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "1 minute kernel CPU average thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("kernelAverage1mThr", prop)

    prop = PropMeta("str", "kernelAverage1mTr", "kernelAverage1mTr", 21921, PropCategory.IMPLICIT_TREND)
    prop.label = "1 minute kernel CPU average trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelAverage1mTr", prop)

    prop = PropMeta("str", "kernelAverage1mTrBase", "kernelAverage1mTrBase", 21920, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "1 minute kernel CPU average trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelAverage1mTrBase", prop)

    prop = PropMeta("str", "kernelAverage1mTtl", "kernelAverage1mTtl", 21918, PropCategory.IMPLICIT_TOTAL)
    prop.label = "1 minute kernel CPU average total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelAverage1mTtl", prop)

    prop = PropMeta("str", "kernelAvg", "kernelAvg", 10678, PropCategory.IMPLICIT_AVG)
    prop.label = "kernel CPU average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelAvg", prop)

    prop = PropMeta("str", "kernelLast", "kernelLast", 10675, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "kernel CPU current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelLast", prop)

    prop = PropMeta("str", "kernelMax", "kernelMax", 10677, PropCategory.IMPLICIT_MAX)
    prop.label = "kernel CPU maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelMax", prop)

    prop = PropMeta("str", "kernelMin", "kernelMin", 10676, PropCategory.IMPLICIT_MIN)
    prop.label = "kernel CPU minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelMin", prop)

    prop = PropMeta("str", "kernelSpct", "kernelSpct", 10679, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "kernel CPU suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelSpct", prop)

    prop = PropMeta("str", "kernelThr", "kernelThr", 10681, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "kernel CPU thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("kernelThr", prop)

    prop = PropMeta("str", "kernelTr", "kernelTr", 10683, PropCategory.IMPLICIT_TREND)
    prop.label = "kernel CPU trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelTr", prop)

    prop = PropMeta("str", "kernelTrBase", "kernelTrBase", 10682, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "kernel CPU trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelTrBase", prop)

    prop = PropMeta("str", "kernelTtl", "kernelTtl", 10680, PropCategory.IMPLICIT_TOTAL)
    prop.label = "kernel CPU total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("kernelTtl", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "userAverage1mAvg", "userAverage1mAvg", 21931, PropCategory.IMPLICIT_AVG)
    prop.label = "1 minute user CPU average average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userAverage1mAvg", prop)

    prop = PropMeta("str", "userAverage1mLast", "userAverage1mLast", 21928, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "1 minute user CPU average current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userAverage1mLast", prop)

    prop = PropMeta("str", "userAverage1mMax", "userAverage1mMax", 21930, PropCategory.IMPLICIT_MAX)
    prop.label = "1 minute user CPU average maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userAverage1mMax", prop)

    prop = PropMeta("str", "userAverage1mMin", "userAverage1mMin", 21929, PropCategory.IMPLICIT_MIN)
    prop.label = "1 minute user CPU average minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userAverage1mMin", prop)

    prop = PropMeta("str", "userAverage1mSpct", "userAverage1mSpct", 21932, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "1 minute user CPU average suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userAverage1mSpct", prop)

    prop = PropMeta("str", "userAverage1mThr", "userAverage1mThr", 21934, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "1 minute user CPU average thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("userAverage1mThr", prop)

    prop = PropMeta("str", "userAverage1mTr", "userAverage1mTr", 21936, PropCategory.IMPLICIT_TREND)
    prop.label = "1 minute user CPU average trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userAverage1mTr", prop)

    prop = PropMeta("str", "userAverage1mTrBase", "userAverage1mTrBase", 21935, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "1 minute user CPU average trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userAverage1mTrBase", prop)

    prop = PropMeta("str", "userAverage1mTtl", "userAverage1mTtl", 21933, PropCategory.IMPLICIT_TOTAL)
    prop.label = "1 minute user CPU average total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userAverage1mTtl", prop)

    prop = PropMeta("str", "userAvg", "userAvg", 10699, PropCategory.IMPLICIT_AVG)
    prop.label = "user CPU average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userAvg", prop)

    prop = PropMeta("str", "userLast", "userLast", 10696, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "user CPU current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userLast", prop)

    prop = PropMeta("str", "userMax", "userMax", 10698, PropCategory.IMPLICIT_MAX)
    prop.label = "user CPU maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userMax", prop)

    prop = PropMeta("str", "userMin", "userMin", 10697, PropCategory.IMPLICIT_MIN)
    prop.label = "user CPU minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userMin", prop)

    prop = PropMeta("str", "userSpct", "userSpct", 10700, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "user CPU suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userSpct", prop)

    prop = PropMeta("str", "userThr", "userThr", 10702, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "user CPU thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("userThr", prop)

    prop = PropMeta("str", "userTr", "userTr", 10704, PropCategory.IMPLICIT_TREND)
    prop.label = "user CPU trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userTr", prop)

    prop = PropMeta("str", "userTrBase", "userTrBase", 10703, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "user CPU trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userTrBase", prop)

    prop = PropMeta("str", "userTtl", "userTtl", 10701, PropCategory.IMPLICIT_TOTAL)
    prop.label = "user CPU total sum"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("userTtl", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class App(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.proc.App")

    meta.moClassName = "procApp"
    meta.rnFormat = "app-%(processId)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Application Process Entry"
    meta.writeAccessMask = 0x800000000000001
    meta.readAccessMask = 0x800000000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.proc.ApplicationMemoryHist15min")
    meta.childClasses.add("cobra.model.proc.ApplicationMemoryHist1year")
    meta.childClasses.add("cobra.model.proc.ApplicationCPUHist5min")
    meta.childClasses.add("cobra.model.proc.ApplicationCPUHist1w")
    meta.childClasses.add("cobra.model.proc.ApplicationCPUHist1h")
    meta.childClasses.add("cobra.model.proc.ApplicationMemory1year")
    meta.childClasses.add("cobra.model.proc.ApplicationCPUHist1year")
    meta.childClasses.add("cobra.model.proc.ApplicationCPU5min")
    meta.childClasses.add("cobra.model.proc.ApplicationCPU1w")
    meta.childClasses.add("cobra.model.proc.ApplicationCPUHist1qtr")
    meta.childClasses.add("cobra.model.proc.ApplicationCPUHist1d")
    meta.childClasses.add("cobra.model.proc.ApplicationCPU1d")
    meta.childClasses.add("cobra.model.proc.ApplicationMemory5min")
    meta.childClasses.add("cobra.model.proc.ApplicationMemoryHist1mo")
    meta.childClasses.add("cobra.model.proc.ApplicationCPU1year")
    meta.childClasses.add("cobra.model.proc.ApplicationCPUHist15min")
    meta.childClasses.add("cobra.model.proc.ApplicationMemoryHist1d")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.proc.ApplicationCPU1qtr")
    meta.childClasses.add("cobra.model.proc.ApplicationMemoryHist1h")
    meta.childClasses.add("cobra.model.proc.ApplicationMemoryHist5min")
    meta.childClasses.add("cobra.model.proc.ApplicationCPUHist1mo")
    meta.childClasses.add("cobra.model.proc.ApplicationMemoryHist1qtr")
    meta.childClasses.add("cobra.model.proc.ApplicationCPU15min")
    meta.childClasses.add("cobra.model.proc.ApplicationMemory1qtr")
    meta.childClasses.add("cobra.model.proc.ApplicationMemory1w")
    meta.childClasses.add("cobra.model.proc.ApplicationMemoryHist1w")
    meta.childClasses.add("cobra.model.proc.ApplicationCPU1h")
    meta.childClasses.add("cobra.model.proc.ApplicationMemory15min")
    meta.childClasses.add("cobra.model.proc.ApplicationMemory1h")
    meta.childClasses.add("cobra.model.proc.ApplicationMemory1mo")
    meta.childClasses.add("cobra.model.proc.ApplicationMemory1d")
    meta.childClasses.add("cobra.model.proc.ApplicationCPU1mo")

    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemoryHist15min", "HDprocApplicationMemory15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemoryHist1year", "HDprocApplicationMemory1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemory1year", "CDprocApplicationMemory1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemoryHist5min", "HDprocApplicationMemory5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemoryHist1qtr", "HDprocApplicationMemory1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemory15min", "CDprocApplicationMemory15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemory5min", "CDprocApplicationMemory5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemoryHist1mo", "HDprocApplicationMemory1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemory1qtr", "CDprocApplicationMemory1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPUHist1year", "HDprocApplicationCPU1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPUHist15min", "HDprocApplicationCPU15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemoryHist1d", "HDprocApplicationMemory1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemoryHist1h", "HDprocApplicationMemory1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemoryHist1w", "HDprocApplicationMemory1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemory1mo", "CDprocApplicationMemory1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPUHist5min", "HDprocApplicationCPU5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPUHist1qtr", "HDprocApplicationCPU1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPU1year", "CDprocApplicationCPU1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPU15min", "CDprocApplicationCPU15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemory1w", "CDprocApplicationMemory1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemory1h", "CDprocApplicationMemory1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationMemory1d", "CDprocApplicationMemory1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPU5min", "CDprocApplicationCPU5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPU1qtr", "CDprocApplicationCPU1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPUHist1mo", "HDprocApplicationCPU1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPUHist1w", "HDprocApplicationCPU1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPUHist1h", "HDprocApplicationCPU1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPUHist1d", "HDprocApplicationCPU1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPU1mo", "CDprocApplicationCPU1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPU1w", "CDprocApplicationCPU1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPU1d", "CDprocApplicationCPU1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.proc.ApplicationCPU1h", "CDprocApplicationCPU1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.proc.Container")

    meta.superClasses.add("cobra.model.nw.CpSt")
    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('app-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "containerId", "containerId", 33105, PropCategory.REGULAR)
    prop.label = "Container Id"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("containerId", prop)

    prop = PropMeta("str", "containerPpid", "containerPpid", 30709, PropCategory.REGULAR)
    prop.label = "Container Parent Process ID"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("containerPpid", prop)

    prop = PropMeta("str", "cpuPct", "cpuPct", 30323, PropCategory.REGULAR)
    prop.label = "CPU Usage"
    prop.isOper = True
    prop.range = [(1, 100)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("cpuPct", prop)

    prop = PropMeta("str", "descr", "descr", 30321, PropCategory.REGULAR)
    prop.label = "Process Description"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "maxMemAlloc", "maxMemAlloc", 30325, PropCategory.REGULAR)
    prop.label = "Maximum Memory Allocated"
    prop.isOper = True
    meta.props.add("maxMemAlloc", prop)

    prop = PropMeta("str", "memPct", "memPct", 30324, PropCategory.REGULAR)
    prop.label = "Memory Usage"
    prop.isOper = True
    prop.range = [(1, 100)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("memPct", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 30374, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 30320, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "processId", "processId", 30322, PropCategory.REGULAR)
    prop.label = "Process ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("processId", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "processId"))

    def __init__(self, parentMoOrDn, processId, markDirty=True, **creationProps):
        namingVals = [processId]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

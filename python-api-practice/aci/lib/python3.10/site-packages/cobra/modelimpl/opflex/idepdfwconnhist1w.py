# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class IDEpDfwConnHist1w(Mo):
    """
    A class that represents historical statistics for DFW connection statistics in a 1 week sampling interval.  This class updates every day.

    """

    meta = StatsClassMeta("cobra.model.opflex.IDEpDfwConnHist1w", "DFW connection statistics")

    counter = CounterMeta("aged", CounterCategory.COUNTER, "connections", "aged connections")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "agedCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "agedPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "agedMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "agedMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "agedAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "agedSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "agedThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "agedTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "agedRate"
    meta._counters.append(counter)

    counter = CounterMeta("deleted", CounterCategory.COUNTER, "connections", "destroyed connections")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "deletedCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "deletedPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "deletedMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "deletedMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "deletedAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "deletedSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "deletedThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "deletedTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "deletedRate"
    meta._counters.append(counter)

    counter = CounterMeta("created", CounterCategory.COUNTER, "connections", "created connections")
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "createdCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "createdPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "createdMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "createdMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "createdAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "createdSpct"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "createdThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "createdTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "createdRate"
    meta._counters.append(counter)

    meta.moClassName = "opflexIDEpDfwConnHist1w"
    meta.rnFormat = "HDopflexIDEpDfwConn1w-%(index)s"
    meta.category = MoCategory.STATS_HISTORY
    meta.label = "historical DFW connection statistics stats in 1 week"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.opflex.IDEp")

    meta.superClasses.add("cobra.model.stats.Hist")
    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.opflex.IDEpDfwConnHist")

    meta.rnPrefixes = [
        ('HDopflexIDEpDfwConn1w-', True),
    ]

    prop = PropMeta("str", "agedAvg", "agedAvg", 19168, PropCategory.IMPLICIT_AVG)
    prop.label = "aged connections average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("agedAvg", prop)

    prop = PropMeta("str", "agedCum", "agedCum", 19164, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "aged connections cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("agedCum", prop)

    prop = PropMeta("str", "agedMax", "agedMax", 19167, PropCategory.IMPLICIT_MAX)
    prop.label = "aged connections maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("agedMax", prop)

    prop = PropMeta("str", "agedMin", "agedMin", 19166, PropCategory.IMPLICIT_MIN)
    prop.label = "aged connections minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("agedMin", prop)

    prop = PropMeta("str", "agedPer", "agedPer", 19165, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "aged connections periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("agedPer", prop)

    prop = PropMeta("str", "agedRate", "agedRate", 19172, PropCategory.IMPLICIT_RATE)
    prop.label = "aged connections rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("agedRate", prop)

    prop = PropMeta("str", "agedSpct", "agedSpct", 19169, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "aged connections suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("agedSpct", prop)

    prop = PropMeta("str", "agedThr", "agedThr", 19170, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "aged connections thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("agedThr", prop)

    prop = PropMeta("str", "agedTr", "agedTr", 19171, PropCategory.IMPLICIT_TREND)
    prop.label = "aged connections trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("agedTr", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "createdAvg", "createdAvg", 19189, PropCategory.IMPLICIT_AVG)
    prop.label = "created connections average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("createdAvg", prop)

    prop = PropMeta("str", "createdCum", "createdCum", 19185, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "created connections cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("createdCum", prop)

    prop = PropMeta("str", "createdMax", "createdMax", 19188, PropCategory.IMPLICIT_MAX)
    prop.label = "created connections maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("createdMax", prop)

    prop = PropMeta("str", "createdMin", "createdMin", 19187, PropCategory.IMPLICIT_MIN)
    prop.label = "created connections minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("createdMin", prop)

    prop = PropMeta("str", "createdPer", "createdPer", 19186, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "created connections periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("createdPer", prop)

    prop = PropMeta("str", "createdRate", "createdRate", 19193, PropCategory.IMPLICIT_RATE)
    prop.label = "created connections rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("createdRate", prop)

    prop = PropMeta("str", "createdSpct", "createdSpct", 19190, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "created connections suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("createdSpct", prop)

    prop = PropMeta("str", "createdThr", "createdThr", 19191, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "created connections thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("createdThr", prop)

    prop = PropMeta("str", "createdTr", "createdTr", 19192, PropCategory.IMPLICIT_TREND)
    prop.label = "created connections trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("createdTr", prop)

    prop = PropMeta("str", "deletedAvg", "deletedAvg", 19210, PropCategory.IMPLICIT_AVG)
    prop.label = "destroyed connections average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("deletedAvg", prop)

    prop = PropMeta("str", "deletedCum", "deletedCum", 19206, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "destroyed connections cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("deletedCum", prop)

    prop = PropMeta("str", "deletedMax", "deletedMax", 19209, PropCategory.IMPLICIT_MAX)
    prop.label = "destroyed connections maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("deletedMax", prop)

    prop = PropMeta("str", "deletedMin", "deletedMin", 19208, PropCategory.IMPLICIT_MIN)
    prop.label = "destroyed connections minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("deletedMin", prop)

    prop = PropMeta("str", "deletedPer", "deletedPer", 19207, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "destroyed connections periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("deletedPer", prop)

    prop = PropMeta("str", "deletedRate", "deletedRate", 19214, PropCategory.IMPLICIT_RATE)
    prop.label = "destroyed connections rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("deletedRate", prop)

    prop = PropMeta("str", "deletedSpct", "deletedSpct", 19211, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "destroyed connections suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("deletedSpct", prop)

    prop = PropMeta("str", "deletedThr", "deletedThr", 19212, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "destroyed connections thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("deletedThr", prop)

    prop = PropMeta("str", "deletedTr", "deletedTr", 19213, PropCategory.IMPLICIT_TREND)
    prop.label = "destroyed connections trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("deletedTr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "index", "index", 19141, PropCategory.REGULAR)
    prop.label = "History Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("index", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "index"))

    def __init__(self, parentMoOrDn, index, markDirty=True, **creationProps):
        namingVals = [index]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

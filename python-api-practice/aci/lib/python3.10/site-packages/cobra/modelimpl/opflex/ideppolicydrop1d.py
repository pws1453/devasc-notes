# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class IDEpPolicyDrop1d(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.opflex.IDEpPolicyDrop1d", "EPG policy drop statistics")

    counter = CounterMeta("mcast", CounterCategory.COUNTER, "packets", "policy dropped multicast/broadcast packets")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "mcastLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "mcastCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "mcastPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "mcastMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "mcastMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "mcastAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "mcastSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "mcastBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "mcastThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "mcastTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "mcastTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "mcastRate"
    meta._counters.append(counter)

    counter = CounterMeta("ucast", CounterCategory.COUNTER, "packets", "policy dropped unicast packets")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "ucastLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "ucastCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "ucastPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "ucastMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "ucastMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "ucastAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "ucastSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "ucastBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "ucastThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "ucastTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "ucastTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "ucastRate"
    meta._counters.append(counter)

    meta.moClassName = "opflexIDEpPolicyDrop1d"
    meta.rnFormat = "CDopflexIDEpPolicyDrop1d"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current EPG policy drop statistics stats in 1 day"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.opflex.IDEp")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.opflex.IDEpPolicyDrop")

    meta.rnPrefixes = [
        ('CDopflexIDEpPolicyDrop1d', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "mcastAvg", "mcastAvg", 23617, PropCategory.IMPLICIT_AVG)
    prop.label = "policy dropped multicast/broadcast packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastAvg", prop)

    prop = PropMeta("str", "mcastBase", "mcastBase", 23612, PropCategory.IMPLICIT_BASELINE)
    prop.label = "policy dropped multicast/broadcast packets baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastBase", prop)

    prop = PropMeta("str", "mcastCum", "mcastCum", 23613, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "policy dropped multicast/broadcast packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastCum", prop)

    prop = PropMeta("str", "mcastLast", "mcastLast", 23611, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "policy dropped multicast/broadcast packets current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastLast", prop)

    prop = PropMeta("str", "mcastMax", "mcastMax", 23616, PropCategory.IMPLICIT_MAX)
    prop.label = "policy dropped multicast/broadcast packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastMax", prop)

    prop = PropMeta("str", "mcastMin", "mcastMin", 23615, PropCategory.IMPLICIT_MIN)
    prop.label = "policy dropped multicast/broadcast packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastMin", prop)

    prop = PropMeta("str", "mcastPer", "mcastPer", 23614, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "policy dropped multicast/broadcast packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastPer", prop)

    prop = PropMeta("str", "mcastRate", "mcastRate", 23622, PropCategory.IMPLICIT_RATE)
    prop.label = "policy dropped multicast/broadcast packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastRate", prop)

    prop = PropMeta("str", "mcastSpct", "mcastSpct", 23618, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "policy dropped multicast/broadcast packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastSpct", prop)

    prop = PropMeta("str", "mcastThr", "mcastThr", 23619, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "policy dropped multicast/broadcast packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("mcastThr", prop)

    prop = PropMeta("str", "mcastTr", "mcastTr", 23621, PropCategory.IMPLICIT_TREND)
    prop.label = "policy dropped multicast/broadcast packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastTr", prop)

    prop = PropMeta("str", "mcastTrBase", "mcastTrBase", 23620, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "policy dropped multicast/broadcast packets trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("mcastTrBase", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "ucastAvg", "ucastAvg", 23638, PropCategory.IMPLICIT_AVG)
    prop.label = "policy dropped unicast packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ucastAvg", prop)

    prop = PropMeta("str", "ucastBase", "ucastBase", 23633, PropCategory.IMPLICIT_BASELINE)
    prop.label = "policy dropped unicast packets baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ucastBase", prop)

    prop = PropMeta("str", "ucastCum", "ucastCum", 23634, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "policy dropped unicast packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ucastCum", prop)

    prop = PropMeta("str", "ucastLast", "ucastLast", 23632, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "policy dropped unicast packets current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ucastLast", prop)

    prop = PropMeta("str", "ucastMax", "ucastMax", 23637, PropCategory.IMPLICIT_MAX)
    prop.label = "policy dropped unicast packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ucastMax", prop)

    prop = PropMeta("str", "ucastMin", "ucastMin", 23636, PropCategory.IMPLICIT_MIN)
    prop.label = "policy dropped unicast packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ucastMin", prop)

    prop = PropMeta("str", "ucastPer", "ucastPer", 23635, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "policy dropped unicast packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ucastPer", prop)

    prop = PropMeta("str", "ucastRate", "ucastRate", 23643, PropCategory.IMPLICIT_RATE)
    prop.label = "policy dropped unicast packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ucastRate", prop)

    prop = PropMeta("str", "ucastSpct", "ucastSpct", 23639, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "policy dropped unicast packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ucastSpct", prop)

    prop = PropMeta("str", "ucastThr", "ucastThr", 23640, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "policy dropped unicast packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("ucastThr", prop)

    prop = PropMeta("str", "ucastTr", "ucastTr", 23642, PropCategory.IMPLICIT_TREND)
    prop.label = "policy dropped unicast packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ucastTr", prop)

    prop = PropMeta("str", "ucastTrBase", "ucastTrBase", 23641, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "policy dropped unicast packets trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("ucastTrBase", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

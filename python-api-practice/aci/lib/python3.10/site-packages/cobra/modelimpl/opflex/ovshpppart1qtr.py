# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class OvsHppPart1qtr(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = StatsClassMeta("cobra.model.opflex.OvsHppPart1qtr", "ovs host protection stats")

    counter = CounterMeta("txBytes", CounterCategory.COUNTER, "bytes", "transmitted bytes")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "txBytesLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "txBytesCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "txBytesPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "txBytesMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "txBytesMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "txBytesAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "txBytesSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "txBytesBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "txBytesThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "txBytesTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "txBytesTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "txBytesRate"
    meta._counters.append(counter)

    counter = CounterMeta("rxBytes", CounterCategory.COUNTER, "bytes", "received bytes")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "rxBytesLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "rxBytesCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "rxBytesPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "rxBytesMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "rxBytesMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "rxBytesAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "rxBytesSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "rxBytesBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "rxBytesThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "rxBytesTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "rxBytesTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "rxBytesRate"
    meta._counters.append(counter)

    counter = CounterMeta("txPkts", CounterCategory.COUNTER, "packets", "transmitted packets")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "txPktsLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "txPktsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "txPktsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "txPktsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "txPktsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "txPktsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "txPktsSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "txPktsBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "txPktsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "txPktsTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "txPktsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "txPktsRate"
    meta._counters.append(counter)

    counter = CounterMeta("rxPkts", CounterCategory.COUNTER, "packets", "received packets")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "rxPktsLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "rxPktsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "rxPktsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "rxPktsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "rxPktsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "rxPktsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "rxPktsSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "rxPktsBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "rxPktsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "rxPktsTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "rxPktsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "rxPktsRate"
    meta._counters.append(counter)

    meta.moClassName = "opflexOvsHppPart1qtr"
    meta.rnFormat = "CDopflexOvsHppPart1qtr-%(nodeId)s"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current portion of the ovs host protection stats stats in 1 quarter"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.hostprot.Subj")
    meta.parentClasses.add("cobra.model.hostprot.Pol")

    meta.superClasses.add("cobra.model.stats.CurrAgPart")
    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.opflex.OvsHppPart")

    meta.rnPrefixes = [
        ('CDopflexOvsHppPart1qtr-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "nodeId", "nodeId", 34804, PropCategory.REGULAR)
    prop.label = "Node Id"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("nodeId", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rxBytesAvg", "rxBytesAvg", 35181, PropCategory.IMPLICIT_AVG)
    prop.label = "received bytes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxBytesAvg", prop)

    prop = PropMeta("str", "rxBytesBase", "rxBytesBase", 35176, PropCategory.IMPLICIT_BASELINE)
    prop.label = "received bytes baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxBytesBase", prop)

    prop = PropMeta("str", "rxBytesCum", "rxBytesCum", 35177, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "received bytes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxBytesCum", prop)

    prop = PropMeta("str", "rxBytesLast", "rxBytesLast", 35175, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "received bytes current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxBytesLast", prop)

    prop = PropMeta("str", "rxBytesMax", "rxBytesMax", 35180, PropCategory.IMPLICIT_MAX)
    prop.label = "received bytes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxBytesMax", prop)

    prop = PropMeta("str", "rxBytesMin", "rxBytesMin", 35179, PropCategory.IMPLICIT_MIN)
    prop.label = "received bytes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxBytesMin", prop)

    prop = PropMeta("str", "rxBytesPer", "rxBytesPer", 35178, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "received bytes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxBytesPer", prop)

    prop = PropMeta("str", "rxBytesRate", "rxBytesRate", 35186, PropCategory.IMPLICIT_RATE)
    prop.label = "received bytes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxBytesRate", prop)

    prop = PropMeta("str", "rxBytesSpct", "rxBytesSpct", 35182, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "received bytes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxBytesSpct", prop)

    prop = PropMeta("str", "rxBytesThr", "rxBytesThr", 35183, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "received bytes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("rxBytesThr", prop)

    prop = PropMeta("str", "rxBytesTr", "rxBytesTr", 35185, PropCategory.IMPLICIT_TREND)
    prop.label = "received bytes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxBytesTr", prop)

    prop = PropMeta("str", "rxBytesTrBase", "rxBytesTrBase", 35184, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "received bytes trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxBytesTrBase", prop)

    prop = PropMeta("str", "rxPktsAvg", "rxPktsAvg", 35236, PropCategory.IMPLICIT_AVG)
    prop.label = "received packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxPktsAvg", prop)

    prop = PropMeta("str", "rxPktsBase", "rxPktsBase", 35231, PropCategory.IMPLICIT_BASELINE)
    prop.label = "received packets baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxPktsBase", prop)

    prop = PropMeta("str", "rxPktsCum", "rxPktsCum", 35232, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "received packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxPktsCum", prop)

    prop = PropMeta("str", "rxPktsLast", "rxPktsLast", 35230, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "received packets current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxPktsLast", prop)

    prop = PropMeta("str", "rxPktsMax", "rxPktsMax", 35235, PropCategory.IMPLICIT_MAX)
    prop.label = "received packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxPktsMax", prop)

    prop = PropMeta("str", "rxPktsMin", "rxPktsMin", 35234, PropCategory.IMPLICIT_MIN)
    prop.label = "received packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxPktsMin", prop)

    prop = PropMeta("str", "rxPktsPer", "rxPktsPer", 35233, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "received packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxPktsPer", prop)

    prop = PropMeta("str", "rxPktsRate", "rxPktsRate", 35241, PropCategory.IMPLICIT_RATE)
    prop.label = "received packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxPktsRate", prop)

    prop = PropMeta("str", "rxPktsSpct", "rxPktsSpct", 35237, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "received packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxPktsSpct", prop)

    prop = PropMeta("str", "rxPktsThr", "rxPktsThr", 35238, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "received packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("rxPktsThr", prop)

    prop = PropMeta("str", "rxPktsTr", "rxPktsTr", 35240, PropCategory.IMPLICIT_TREND)
    prop.label = "received packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxPktsTr", prop)

    prop = PropMeta("str", "rxPktsTrBase", "rxPktsTrBase", 35239, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "received packets trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxPktsTrBase", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "txBytesAvg", "txBytesAvg", 35291, PropCategory.IMPLICIT_AVG)
    prop.label = "transmitted bytes average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txBytesAvg", prop)

    prop = PropMeta("str", "txBytesBase", "txBytesBase", 35286, PropCategory.IMPLICIT_BASELINE)
    prop.label = "transmitted bytes baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txBytesBase", prop)

    prop = PropMeta("str", "txBytesCum", "txBytesCum", 35287, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "transmitted bytes cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txBytesCum", prop)

    prop = PropMeta("str", "txBytesLast", "txBytesLast", 35285, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "transmitted bytes current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txBytesLast", prop)

    prop = PropMeta("str", "txBytesMax", "txBytesMax", 35290, PropCategory.IMPLICIT_MAX)
    prop.label = "transmitted bytes maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txBytesMax", prop)

    prop = PropMeta("str", "txBytesMin", "txBytesMin", 35289, PropCategory.IMPLICIT_MIN)
    prop.label = "transmitted bytes minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txBytesMin", prop)

    prop = PropMeta("str", "txBytesPer", "txBytesPer", 35288, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "transmitted bytes periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txBytesPer", prop)

    prop = PropMeta("str", "txBytesRate", "txBytesRate", 35296, PropCategory.IMPLICIT_RATE)
    prop.label = "transmitted bytes rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txBytesRate", prop)

    prop = PropMeta("str", "txBytesSpct", "txBytesSpct", 35292, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "transmitted bytes suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txBytesSpct", prop)

    prop = PropMeta("str", "txBytesThr", "txBytesThr", 35293, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "transmitted bytes thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("txBytesThr", prop)

    prop = PropMeta("str", "txBytesTr", "txBytesTr", 35295, PropCategory.IMPLICIT_TREND)
    prop.label = "transmitted bytes trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txBytesTr", prop)

    prop = PropMeta("str", "txBytesTrBase", "txBytesTrBase", 35294, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "transmitted bytes trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txBytesTrBase", prop)

    prop = PropMeta("str", "txPktsAvg", "txPktsAvg", 35346, PropCategory.IMPLICIT_AVG)
    prop.label = "transmitted packets average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsAvg", prop)

    prop = PropMeta("str", "txPktsBase", "txPktsBase", 35341, PropCategory.IMPLICIT_BASELINE)
    prop.label = "transmitted packets baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsBase", prop)

    prop = PropMeta("str", "txPktsCum", "txPktsCum", 35342, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "transmitted packets cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsCum", prop)

    prop = PropMeta("str", "txPktsLast", "txPktsLast", 35340, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "transmitted packets current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsLast", prop)

    prop = PropMeta("str", "txPktsMax", "txPktsMax", 35345, PropCategory.IMPLICIT_MAX)
    prop.label = "transmitted packets maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsMax", prop)

    prop = PropMeta("str", "txPktsMin", "txPktsMin", 35344, PropCategory.IMPLICIT_MIN)
    prop.label = "transmitted packets minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsMin", prop)

    prop = PropMeta("str", "txPktsPer", "txPktsPer", 35343, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "transmitted packets periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsPer", prop)

    prop = PropMeta("str", "txPktsRate", "txPktsRate", 35351, PropCategory.IMPLICIT_RATE)
    prop.label = "transmitted packets rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsRate", prop)

    prop = PropMeta("str", "txPktsSpct", "txPktsSpct", 35347, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "transmitted packets suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsSpct", prop)

    prop = PropMeta("str", "txPktsThr", "txPktsThr", 35348, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "transmitted packets thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("txPktsThr", prop)

    prop = PropMeta("str", "txPktsTr", "txPktsTr", 35350, PropCategory.IMPLICIT_TREND)
    prop.label = "transmitted packets trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsTr", prop)

    prop = PropMeta("str", "txPktsTrBase", "txPktsTrBase", 35349, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "transmitted packets trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("txPktsTrBase", prop)

    meta.namingProps.append(getattr(meta.props, "nodeId"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToHcloudIgw", "Tenant to IGW", "cobra.model.hcloud.SecurityGroup"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToHcloudSecurityGroup", "Tenant to Security Group", "cobra.model.hcloud.SecurityGroup"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToVzCPIf", "Tenant to vzCPIf", "cobra.model.vz.CPIf"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToVzFilter", "From fvTenant to vzFilter", "cobra.model.vz.Filter"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToVnsAbsGraph", "From fvTenant to vnsAbsGraph", "cobra.model.vns.AbsGraph"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToCloudLB", "From fvTenant to cloudLB", "cobra.model.cloud.LB"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToCloudZone", "From fvTenant to cloudZone", "cobra.model.cloud.Zone"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudCtxProfile", "Tenant to cloudCtxProfile", "cobra.model.cloud.CtxProfile"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToVzBrCP", "Tenant to vzBrCP", "cobra.model.vz.BrCP"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToHcloudCsr", "Tenant to hcloudCsr", "cobra.model.hcloud.Csr"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudExtEPg", "fv:Tenant to cloud:ExtEPg", "cobra.model.cloud.ExtEPg"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudRegion", "From fvTenant to cloudRegion", "cobra.model.cloud.Region"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToHcloudRegion", "Tenant to hcloudRegion", "cobra.model.hcloud.Region"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("FvTenantToFvCtx", "fvTenant to fvCtx", "cobra.model.fv.Ctx"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToHcloudCtx", "Tenant to Hcloud context", "cobra.model.hcloud.Ctx"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToHCloudEndPoint", "Tenant to hcloudEndPoint", "cobra.model.hcloud.EndPoint"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudApp", "Tenant to Application profile", "cobra.model.cloud.App"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("TenantToCloudEPg", "Tenant to cloud EPg", "cobra.model.cloud.EPg"))

    def __init__(self, parentMoOrDn, nodeId, markDirty=True, **creationProps):
        namingVals = [nodeId]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class InstStats(Mo):
    """
    Holds per instance statistics operational information. This is a singleton within instance

    """

    meta = ClassMeta("cobra.model.igmpsnoop.InstStats")

    meta.moClassName = "igmpsnoopInstStats"
    meta.rnFormat = "inststats"
    meta.category = MoCategory.REGULAR
    meta.label = "Instance Statistics"
    meta.writeAccessMask = 0xc008020040001
    meta.readAccessMask = 0xc008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.igmpsnoop.Inst")

    meta.superClasses.add("cobra.model.ipmcsnoop.InstStats")

    meta.rnPrefixes = [
        ('inststats', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "invPktsRcvd", "invPktsRcvd", 16947, PropCategory.REGULAR)
    prop.label = "Invalid Packets Received"
    prop.isOper = True
    meta.props.add("invPktsRcvd", prop)

    prop = PropMeta("str", "lpbkPktsRcvd", "lpbkPktsRcvd", 16948, PropCategory.REGULAR)
    prop.label = "Loopback Packets Received"
    prop.isOper = True
    meta.props.add("lpbkPktsRcvd", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "mrdLpbkPktsRcvd", "mrdLpbkPktsRcvd", 16950, PropCategory.REGULAR)
    prop.label = "MRD Loopback Packets Received"
    prop.isOper = True
    meta.props.add("mrdLpbkPktsRcvd", prop)

    prop = PropMeta("str", "noVlanDbPktsRcvd", "noVlanDbPktsRcvd", 16951, PropCategory.REGULAR)
    prop.label = "No Vlan Db Packets Received"
    prop.isOper = True
    meta.props.add("noVlanDbPktsRcvd", prop)

    prop = PropMeta("str", "pktsFlooded", "pktsFlooded", 16949, PropCategory.REGULAR)
    prop.label = "Packets Flooded"
    prop.isOper = True
    meta.props.add("pktsFlooded", prop)

    prop = PropMeta("str", "pktsRcvd", "pktsRcvd", 16946, PropCategory.REGULAR)
    prop.label = "Packets Received"
    prop.isOper = True
    meta.props.add("pktsRcvd", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "totNumMcGrp", "totNumMcGrp", 16945, PropCategory.REGULAR)
    prop.label = "Total Number of Multicast Groups"
    prop.isOper = True
    meta.props.add("totNumMcGrp", prop)

    prop = PropMeta("str", "vpcPeerPktsRcvd", "vpcPeerPktsRcvd", 16957, PropCategory.REGULAR)
    prop.label = "VPC Peer Packets Received"
    prop.isOper = True
    meta.props.add("vpcPeerPktsRcvd", prop)

    prop = PropMeta("str", "vpcPeerPktsRcvdFail", "vpcPeerPktsRcvdFail", 16959, PropCategory.REGULAR)
    prop.label = "VPC Peer Packets Receive Fail"
    prop.isOper = True
    meta.props.add("vpcPeerPktsRcvdFail", prop)

    prop = PropMeta("str", "vpcPeerPktsSent", "vpcPeerPktsSent", 16956, PropCategory.REGULAR)
    prop.label = "VPC Peer Packets Sent"
    prop.isOper = True
    meta.props.add("vpcPeerPktsSent", prop)

    prop = PropMeta("str", "vpcPeerPktsSentFail", "vpcPeerPktsSentFail", 16958, PropCategory.REGULAR)
    prop.label = "VPC Peer Packets Send Fail"
    prop.isOper = True
    meta.props.add("vpcPeerPktsSentFail", prop)

    prop = PropMeta("str", "vpcZmqPktsRcvd", "vpcZmqPktsRcvd", 16953, PropCategory.REGULAR)
    prop.label = "VPC ZMQ Packets Received"
    prop.isOper = True
    meta.props.add("vpcZmqPktsRcvd", prop)

    prop = PropMeta("str", "vpcZmqPktsRcvdFail", "vpcZmqPktsRcvdFail", 16955, PropCategory.REGULAR)
    prop.label = "VPC ZMQ Packets Receive Fail"
    prop.isOper = True
    meta.props.add("vpcZmqPktsRcvdFail", prop)

    prop = PropMeta("str", "vpcZmqPktsSent", "vpcZmqPktsSent", 16952, PropCategory.REGULAR)
    prop.label = "VPC ZMQ Packets Sent"
    prop.isOper = True
    meta.props.add("vpcZmqPktsSent", prop)

    prop = PropMeta("str", "vpcZmqPktsSentFail", "vpcZmqPktsSentFail", 16954, PropCategory.REGULAR)
    prop.label = "VPC ZMQ Packets Send Fail"
    prop.isOper = True
    meta.props.add("vpcZmqPktsSentFail", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class FuncConnInst(Mo):
    """
    A function connector instance.

    """

    meta = ClassMeta("cobra.model.vns.FuncConnInst")

    meta.moClassName = "vnsFuncConnInst"
    meta.rnFormat = "FConnInst-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Connector Instance"
    meta.writeAccessMask = 0x6000000000000001
    meta.readAccessMask = 0x6000000000001001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.vns.RsMConnAttInst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.vns.RtEPgDefToConn")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.vns.GRel")
    meta.childClasses.add("cobra.model.vns.RsConnToAConnInst")
    meta.childClasses.add("cobra.model.vns.ParamInst")
    meta.childClasses.add("cobra.model.vns.LIfHintInst")
    meta.childClasses.add("cobra.model.vns.CfgRelInst")
    meta.childClasses.add("cobra.model.vns.RtConnToAConnInst")
    meta.childClasses.add("cobra.model.vns.FolderInst")
    meta.childClasses.add("cobra.model.vns.RsConnToFltInst")
    meta.childClasses.add("cobra.model.tag.Inst")
    meta.childClasses.add("cobra.model.vns.RsConnToCtxTerm")
    meta.childClasses.add("cobra.model.vns.LIfHint")
    meta.childClasses.add("cobra.model.vns.RsConnToLIfInst")
    meta.childClasses.add("cobra.model.vns.RsBdConn")
    meta.childClasses.add("cobra.model.vns.AbsParam")
    meta.childClasses.add("cobra.model.vns.CloudSvcEPgDef")
    meta.childClasses.add("cobra.model.fv.ImplSubnet")
    meta.childClasses.add("cobra.model.vns.CRel")
    meta.childClasses.add("cobra.model.tag.AliasDelInst")
    meta.childClasses.add("cobra.model.vns.AbsCfgRel")
    meta.childClasses.add("cobra.model.vns.RtConnToAConn")
    meta.childClasses.add("cobra.model.vns.RsEventConn")
    meta.childClasses.add("cobra.model.vns.ConfIssue")
    meta.childClasses.add("cobra.model.vns.RsConnToFlt")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.vns.AbsFolder")
    meta.childClasses.add("cobra.model.vns.RsPolModAtt")
    meta.childClasses.add("cobra.model.vns.RtAbsCopyConnection")
    meta.childClasses.add("cobra.model.tag.ExtMngdInst")
    meta.childClasses.add("cobra.model.vns.RsUnkMacActModAtt")
    meta.childClasses.add("cobra.model.tag.AliasInst")
    meta.childClasses.add("cobra.model.vns.RtEventConn")
    meta.childClasses.add("cobra.model.vns.RtCfgToConn")
    meta.childClasses.add("cobra.model.vns.RtConnectionInstConns")
    meta.childClasses.add("cobra.model.vns.RsConnToCtxTermInst")
    meta.childClasses.add("cobra.model.vns.GFolder")
    meta.childClasses.add("cobra.model.vns.CFolder")
    meta.childClasses.add("cobra.model.vns.RtBdConn")
    meta.childClasses.add("cobra.model.vns.RtBDDefToConn")
    meta.childClasses.add("cobra.model.vns.CParam")
    meta.childClasses.add("cobra.model.vns.RtAbsConnectionConns")
    meta.childClasses.add("cobra.model.vns.GParam")
    meta.childClasses.add("cobra.model.vns.RsConnToAConn")

    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RtConnectionInstConns", "rtConnectionInstConns"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RtAbsConnectionConns", "rtAbsConnectionConns"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RtAbsCopyConnection", "rtAbsCopyConnection"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RsConnToCtxTermInst", "rsConnToCtxTermInst"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RtConnToAConnInst", "rtconnToAConnInst-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RsConnToAConnInst", "rsConnToAConnInst"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RsUnkMacActModAtt", "rsUnkMacActModAtt"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RsConnToFltInst", "rsConnToFltInst"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RsConnToCtxTerm", "rsConnToCtxTerm"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RsConnToLIfInst", "rsConnToLIfInst"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.CloudSvcEPgDef", "CloudSvcEPgDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RsMConnAttInst", "rsMConnAttInst"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RtEPgDefToConn", "rtEPgDefToConn"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RtConnToAConn", "rtconnToAConn-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.ConfIssue", "vnsConfIssue-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RtBDDefToConn", "rtBDDefToConn"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RsConnToAConn", "rsConnToAConn"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RtEventConn", "rteventConn-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RtCfgToConn", "rtcfgToConn-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.LIfHintInst", "lIfHintInst"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.CfgRelInst", "CfgRelInst-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.ImplSubnet", "ImplSubnet-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RsEventConn", "rseventConn"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RsConnToFlt", "rsConnToFlt"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RsPolModAtt", "rsPolModAtt"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.ParamInst", "ParamInst-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.AbsFolder", "absFolder-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.AbsParam", "absParam-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.AliasDelInst", "aliasdel-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RtBdConn", "rtbdConn-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.RsBdConn", "rsbdConn"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.GFolder", "gFolder-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.CFolder", "cFolder-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.LIfHint", "lIfHint"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.AbsCfgRel", "absRel-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.ExtMngdInst", "extmngd"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.CParam", "cParam-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.GParam", "gParam-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.GRel", "gRel-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.FolderInst", "FI_C-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.CRel", "cRel-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.AliasInst", "alias"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Inst", "tag-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.vns.NodeInst")

    meta.superClasses.add("cobra.model.vns.AFuncConn")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.vns.AConn")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Def")

    meta.rnPrefixes = [
        ('FConnInst-', True),
    ]

    prop = PropMeta("str", "attNotify", "attNotify", 15339, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("attNotify", prop)

    prop = PropMeta("str", "bDAllocationState", "bDAllocationState", 5131, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "init"
    prop._addConstant("allocated", "allocated", 1)
    prop._addConstant("init", "init", 0)
    meta.props.add("bDAllocationState", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "configIssues", "configIssues", 5027, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "ok"
    prop._addConstant("conn-nonrenderable", "graph-connector-could-not-be-rendered.", 4)
    prop._addConstant("invalid-ctx", "ctx-associated-with-a-connector-is-not-valid.", 16)
    prop._addConstant("missing-bd", "unable-to-find-bd-associated-with-a-connector.", 8)
    prop._addConstant("missing-connection", "connection-associated-with-a-connector-not-found.", 1)
    prop._addConstant("missing-l3instp", "unable-to-find-l3instp-associated-with-a-connector.", 256)
    prop._addConstant("missing-lif", "no-cluster-interface-found", 128)
    prop._addConstant("missing-nodeinst", "nodeinst-associated-with-a-connector-not-found.", 2)
    prop._addConstant("missing-peer-conn", "peer-connector-associated-with-a-connector-not-found.", 32)
    prop._addConstant("missing-subnet", "unable-to-find-subnet-for-this-connector.", 64)
    prop._addConstant("ok", "ok", 0)
    meta.props.add("configIssues", prop)

    prop = PropMeta("str", "configSt", "configSt", 5028, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("applied", "applied", 2)
    prop._addConstant("applying", "applying", 1)
    prop._addConstant("failed-to-apply", "failed-to-apply", 3)
    prop._addConstant("none", "none", 0)
    meta.props.add("configSt", prop)

    prop = PropMeta("str", "ctxDn", "ctxDn", 18086, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("ctxDn", prop)

    prop = PropMeta("str", "descr", "descr", 5579, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14876, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 7337, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("NodeInstToNwIf", "Physical Interfaces", "cobra.model.nw.If"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("NodeInstToCompVNic", "Virtual Nics", "cobra.model.comp.VNic"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class RxPkts1year(Mo):
    """
    A class that represents the most current statistics for  Rx  Packet counters in a 1 year sampling interval.  This class updates every day.

    """

    meta = StatsClassMeta("cobra.model.vns.RxPkts1year", "Rx Packet counters")

    counter = CounterMeta("rxdrops", CounterCategory.COUNTER, "packets", "Rx Dropped")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "rxdropsLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "rxdropsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "rxdropsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "rxdropsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "rxdropsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "rxdropsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "rxdropsSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "rxdropsBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "rxdropsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "rxdropsTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "rxdropsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "rxdropsRate"
    meta._counters.append(counter)

    counter = CounterMeta("rxerrors", CounterCategory.COUNTER, "packets", "Rx Errors")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "rxerrorsLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "rxerrorsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "rxerrorsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "rxerrorsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "rxerrorsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "rxerrorsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "rxerrorsSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "rxerrorsBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "rxerrorsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "rxerrorsTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "rxerrorsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "rxerrorsRate"
    meta._counters.append(counter)

    counter = CounterMeta("rxpackets", CounterCategory.COUNTER, "packets", "Rx")
    counter._propRefs[PropCategory.IMPLICIT_LASTREADING] = "rxpacketsLast"
    counter._propRefs[PropCategory.IMPLICIT_CUMULATIVE] = "rxpacketsCum"
    counter._propRefs[PropCategory.IMPLICIT_PERIODIC] = "rxpacketsPer"
    counter._propRefs[PropCategory.IMPLICIT_MIN] = "rxpacketsMin"
    counter._propRefs[PropCategory.IMPLICIT_MAX] = "rxpacketsMax"
    counter._propRefs[PropCategory.IMPLICIT_AVG] = "rxpacketsAvg"
    counter._propRefs[PropCategory.IMPLICIT_SUSPECT] = "rxpacketsSpct"
    counter._propRefs[PropCategory.IMPLICIT_BASELINE] = "rxpacketsBase"
    counter._propRefs[PropCategory.IMPLICIT_THRESHOLDED] = "rxpacketsThr"
    counter._propRefs[PropCategory.IMPLICIT_TREND_BASE] = "rxpacketsTrBase"
    counter._propRefs[PropCategory.IMPLICIT_TREND] = "rxpacketsTr"
    counter._propRefs[PropCategory.IMPLICIT_RATE] = "rxpacketsRate"
    meta._counters.append(counter)

    meta.moClassName = "vnsRxPkts1year"
    meta.rnFormat = "CDvnsRxPkts1year"
    meta.category = MoCategory.STATS_CURRENT
    meta.label = "current Rx Packet counters stats in 1 year"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.parentClasses.add("cobra.model.vns.VConn")
    meta.parentClasses.add("cobra.model.vns.CIf")

    meta.superClasses.add("cobra.model.stats.Item")
    meta.superClasses.add("cobra.model.stats.Curr")
    meta.superClasses.add("cobra.model.vns.RxPkts")

    meta.rnPrefixes = [
        ('CDvnsRxPkts1year', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "cnt", "cnt", 16212, PropCategory.REGULAR)
    prop.label = "Number of Collections During this Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cnt", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastCollOffset", "lastCollOffset", 111, PropCategory.REGULAR)
    prop.label = "Collection Length"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("lastCollOffset", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "repIntvEnd", "repIntvEnd", 110, PropCategory.REGULAR)
    prop.label = "Reporting End Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvEnd", prop)

    prop = PropMeta("str", "repIntvStart", "repIntvStart", 109, PropCategory.REGULAR)
    prop.label = "Reporting Start Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("repIntvStart", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rxdropsAvg", "rxdropsAvg", 11026, PropCategory.IMPLICIT_AVG)
    prop.label = "Rx Dropped average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxdropsAvg", prop)

    prop = PropMeta("str", "rxdropsBase", "rxdropsBase", 11021, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Rx Dropped baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxdropsBase", prop)

    prop = PropMeta("str", "rxdropsCum", "rxdropsCum", 11022, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Rx Dropped cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxdropsCum", prop)

    prop = PropMeta("str", "rxdropsLast", "rxdropsLast", 11020, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Rx Dropped current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxdropsLast", prop)

    prop = PropMeta("str", "rxdropsMax", "rxdropsMax", 11025, PropCategory.IMPLICIT_MAX)
    prop.label = "Rx Dropped maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxdropsMax", prop)

    prop = PropMeta("str", "rxdropsMin", "rxdropsMin", 11024, PropCategory.IMPLICIT_MIN)
    prop.label = "Rx Dropped minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxdropsMin", prop)

    prop = PropMeta("str", "rxdropsPer", "rxdropsPer", 11023, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Rx Dropped periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxdropsPer", prop)

    prop = PropMeta("str", "rxdropsRate", "rxdropsRate", 11031, PropCategory.IMPLICIT_RATE)
    prop.label = "Rx Dropped rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxdropsRate", prop)

    prop = PropMeta("str", "rxdropsSpct", "rxdropsSpct", 11027, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Rx Dropped suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxdropsSpct", prop)

    prop = PropMeta("str", "rxdropsThr", "rxdropsThr", 11028, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Rx Dropped thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("rxdropsThr", prop)

    prop = PropMeta("str", "rxdropsTr", "rxdropsTr", 11030, PropCategory.IMPLICIT_TREND)
    prop.label = "Rx Dropped trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxdropsTr", prop)

    prop = PropMeta("str", "rxdropsTrBase", "rxdropsTrBase", 11029, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Rx Dropped trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxdropsTrBase", prop)

    prop = PropMeta("str", "rxerrorsAvg", "rxerrorsAvg", 11053, PropCategory.IMPLICIT_AVG)
    prop.label = "Rx Errors average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxerrorsAvg", prop)

    prop = PropMeta("str", "rxerrorsBase", "rxerrorsBase", 11048, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Rx Errors baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxerrorsBase", prop)

    prop = PropMeta("str", "rxerrorsCum", "rxerrorsCum", 11049, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Rx Errors cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxerrorsCum", prop)

    prop = PropMeta("str", "rxerrorsLast", "rxerrorsLast", 11047, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Rx Errors current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxerrorsLast", prop)

    prop = PropMeta("str", "rxerrorsMax", "rxerrorsMax", 11052, PropCategory.IMPLICIT_MAX)
    prop.label = "Rx Errors maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxerrorsMax", prop)

    prop = PropMeta("str", "rxerrorsMin", "rxerrorsMin", 11051, PropCategory.IMPLICIT_MIN)
    prop.label = "Rx Errors minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxerrorsMin", prop)

    prop = PropMeta("str", "rxerrorsPer", "rxerrorsPer", 11050, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Rx Errors periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxerrorsPer", prop)

    prop = PropMeta("str", "rxerrorsRate", "rxerrorsRate", 11058, PropCategory.IMPLICIT_RATE)
    prop.label = "Rx Errors rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxerrorsRate", prop)

    prop = PropMeta("str", "rxerrorsSpct", "rxerrorsSpct", 11054, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Rx Errors suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxerrorsSpct", prop)

    prop = PropMeta("str", "rxerrorsThr", "rxerrorsThr", 11055, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Rx Errors thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("rxerrorsThr", prop)

    prop = PropMeta("str", "rxerrorsTr", "rxerrorsTr", 11057, PropCategory.IMPLICIT_TREND)
    prop.label = "Rx Errors trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxerrorsTr", prop)

    prop = PropMeta("str", "rxerrorsTrBase", "rxerrorsTrBase", 11056, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Rx Errors trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxerrorsTrBase", prop)

    prop = PropMeta("str", "rxpacketsAvg", "rxpacketsAvg", 11080, PropCategory.IMPLICIT_AVG)
    prop.label = "Rx average value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxpacketsAvg", prop)

    prop = PropMeta("str", "rxpacketsBase", "rxpacketsBase", 11075, PropCategory.IMPLICIT_BASELINE)
    prop.label = "Rx baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxpacketsBase", prop)

    prop = PropMeta("str", "rxpacketsCum", "rxpacketsCum", 11076, PropCategory.IMPLICIT_CUMULATIVE)
    prop.label = "Rx cumulative"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxpacketsCum", prop)

    prop = PropMeta("str", "rxpacketsLast", "rxpacketsLast", 11074, PropCategory.IMPLICIT_LASTREADING)
    prop.label = "Rx current value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxpacketsLast", prop)

    prop = PropMeta("str", "rxpacketsMax", "rxpacketsMax", 11079, PropCategory.IMPLICIT_MAX)
    prop.label = "Rx maximum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxpacketsMax", prop)

    prop = PropMeta("str", "rxpacketsMin", "rxpacketsMin", 11078, PropCategory.IMPLICIT_MIN)
    prop.label = "Rx minimum value"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxpacketsMin", prop)

    prop = PropMeta("str", "rxpacketsPer", "rxpacketsPer", 11077, PropCategory.IMPLICIT_PERIODIC)
    prop.label = "Rx periodic"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxpacketsPer", prop)

    prop = PropMeta("str", "rxpacketsRate", "rxpacketsRate", 11085, PropCategory.IMPLICIT_RATE)
    prop.label = "Rx rate"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxpacketsRate", prop)

    prop = PropMeta("str", "rxpacketsSpct", "rxpacketsSpct", 11081, PropCategory.IMPLICIT_SUSPECT)
    prop.label = "Rx suspect count"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxpacketsSpct", prop)

    prop = PropMeta("str", "rxpacketsThr", "rxpacketsThr", 11082, PropCategory.IMPLICIT_THRESHOLDED)
    prop.label = "Rx thresholded flags"
    prop.isOper = True
    prop.isStats = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("rxpacketsThr", prop)

    prop = PropMeta("str", "rxpacketsTr", "rxpacketsTr", 11084, PropCategory.IMPLICIT_TREND)
    prop.label = "Rx trend"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxpacketsTr", prop)

    prop = PropMeta("str", "rxpacketsTrBase", "rxpacketsTrBase", 11083, PropCategory.IMPLICIT_TREND_BASE)
    prop.label = "Rx trend baseline"
    prop.isOper = True
    prop.isStats = True
    meta.props.add("rxpacketsTrBase", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CIfToNwIf", "Physical Interfaces", "cobra.model.fabric.PathEp"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("CIfToCompVNic", "Virtual Nics", "cobra.model.comp.VNic"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class LBIPReq(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.vns.LBIPReq")

    meta.moClassName = "vnsLBIPReq"
    meta.rnFormat = "LB_LBIP_C-%(ctrct)s-G-%(graph)s-F-%(node)s-LB_NAME-%(lbName)s-LBIP_NAME-%(lbipName)s-ROUTE_NAME-%(routeName)s"
    meta.category = MoCategory.REGULAR
    meta.label = "LB IP configuration."
    meta.writeAccessMask = 0x200000000000601
    meta.readAccessMask = 0x200000000000601
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.fv.AEPg")

    meta.superClasses.add("cobra.model.vns.OrchReq")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Comp")
    meta.superClasses.add("cobra.model.vns.LBReq")

    meta.rnPrefixes = [
        ('LB_LBIP_C-', True),
        ('-G-', True),
        ('-F-', True),
        ('-LB_NAME-', True),
        ('-LBIP_NAME-', True),
        ('-ROUTE_NAME-', True),
    ]

    prop = PropMeta("str", "addRoute", "addRoute", 28526, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("addRoute", prop)

    prop = PropMeta("str", "annotation", "annotation", 38603, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "ctrct", "ctrct", 28533, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    prop.defaultValue = "any"
    prop.defaultValueStr = "any"
    meta.props.add("ctrct", prop)

    prop = PropMeta("str", "descr", "descr", 5582, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 40742, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "graph", "graph", 28532, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    prop.defaultValue = "any"
    prop.defaultValueStr = "any"
    meta.props.add("graph", prop)

    prop = PropMeta("str", "internalSnip", "internalSnip", 33115, PropCategory.REGULAR)
    prop.label = "Internal SNIP Flag"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = True
    prop.defaultValueStr = "yes"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("internalSnip", prop)

    prop = PropMeta("str", "lbName", "lbName", 28534, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    prop.defaultValue = "lbName"
    prop.defaultValueStr = "lbName"
    meta.props.add("lbName", prop)

    prop = PropMeta("str", "lbipIp", "lbipIp", 28524, PropCategory.REGULAR)
    prop.label = "LBIP IP"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("lbipIp", prop)

    prop = PropMeta("str", "lbipName", "lbipName", 28521, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    prop.defaultValue = "lbipName"
    prop.defaultValueStr = "lbipName"
    meta.props.add("lbipName", prop)

    prop = PropMeta("str", "lbipSubnet", "lbipSubnet", 28525, PropCategory.REGULAR)
    prop.label = "LBIP subnet"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("lbipSubnet", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "node", "node", 28531, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    prop.defaultValue = "any"
    prop.defaultValueStr = "any"
    meta.props.add("node", prop)

    prop = PropMeta("str", "nsipType", "nsipType", 28523, PropCategory.REGULAR)
    prop.label = "nsip Type"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("SNIP", "snip", 2)
    prop._addConstant("VIP", "vip", 1)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("nsipType", prop)

    prop = PropMeta("str", "prov", "prov", 28276, PropCategory.REGULAR)
    prop.label = "provider"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("prov", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "routeGateway", "routeGateway", 28527, PropCategory.REGULAR)
    prop.label = "Route Gateway"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("routeGateway", prop)

    prop = PropMeta("str", "routeName", "routeName", 28522, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    prop.defaultValue = "routeName"
    prop.defaultValueStr = "routeName"
    meta.props.add("routeName", prop)

    prop = PropMeta("str", "routeNetmask", "routeNetmask", 28529, PropCategory.REGULAR)
    prop.label = "Route Netmask"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("routeNetmask", prop)

    prop = PropMeta("str", "routeNetwork", "routeNetwork", 28528, PropCategory.REGULAR)
    prop.label = "Route Network"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("routeNetwork", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    prop = PropMeta("str", "version", "version", 34481, PropCategory.REGULAR)
    prop.label = "Version"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "classic"
    prop._addConstant("classic", "classic", 0)
    prop._addConstant("normalized", "normalized", 1)
    meta.props.add("version", prop)

    meta.namingProps.append(getattr(meta.props, "ctrct"))
    meta.namingProps.append(getattr(meta.props, "graph"))
    meta.namingProps.append(getattr(meta.props, "node"))
    meta.namingProps.append(getattr(meta.props, "lbName"))
    meta.namingProps.append(getattr(meta.props, "lbipName"))
    meta.namingProps.append(getattr(meta.props, "routeName"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("ATgToGraphInst", "Graph Instances", "cobra.model.vns.GraphInst"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("AEPgToVirtualMachines", "Virtual Machines", "cobra.model.comp.Vm"))
    meta.deploymentQueryPaths.append(DeploymentPathMeta("EPgToNwIf", "Interface", "cobra.model.nw.If"))

    def __init__(self, parentMoOrDn, ctrct, graph, node, lbName, lbipName, routeName, markDirty=True, **creationProps):
        namingVals = [ctrct, graph, node, lbName, lbipName, routeName]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

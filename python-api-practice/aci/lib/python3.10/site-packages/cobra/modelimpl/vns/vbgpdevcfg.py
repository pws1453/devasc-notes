# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class VBgpDevCfg(Mo):
    """
    

    """

    meta = ClassMeta("cobra.model.vns.VBgpDevCfg")

    meta.moClassName = "vnsVBgpDevCfg"
    meta.rnFormat = "bgpDeviceCfg-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "BGP Configuration"
    meta.writeAccessMask = 0x6000000000000001
    meta.readAccessMask = 0x6000000000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.vns.VBgpNetworks")
    meta.childClasses.add("cobra.model.vns.VBgpPeer")
    meta.childClasses.add("cobra.model.vns.VOspfNetworks")
    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.vns.VOspfNetworks", "vOspfNetworks-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.VBgpNetworks", "vBgpNetworks-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vns.VBgpPeer", "vBgpPeer-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.vns.CfgRoot")

    meta.superClasses.add("cobra.model.vns.AL4L7ServiceFault")
    meta.superClasses.add("cobra.model.vns.AVRoutingDeviceCfg")
    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('bgpDeviceCfg-', True),
    ]

    prop = PropMeta("str", "addressFamily", "addressFamily", 18281, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("ipv4", "ipv4", 1)
    prop._addConstant("ipv6", "ipv6", 2)
    meta.props.add("addressFamily", prop)

    prop = PropMeta("str", "asn", "asn", 18427, PropCategory.REGULAR)
    prop.label = "Local autonomous System Number"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 4294967295)]
    meta.props.add("asn", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "ctxName", "ctxName", 17830, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("ctxName", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "enable", "enable", 17828, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("enable", prop)

    prop = PropMeta("str", "faultCode", "faultCode", 5135, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("faultCode", prop)

    prop = PropMeta("str", "faultMessage", "faultMessage", 5137, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("faultMessage", prop)

    prop = PropMeta("str", "faultSeverity", "faultSeverity", 5136, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop.defaultValue = 3
    prop.defaultValueStr = "minor"
    prop._addConstant("cleared", "cleared", 0)
    prop._addConstant("critical", "critical", 5)
    prop._addConstant("info", "info", 1)
    prop._addConstant("major", "major", 4)
    prop._addConstant("minor", "minor", 3)
    prop._addConstant("warning", "warning", 2)
    meta.props.add("faultSeverity", prop)

    prop = PropMeta("str", "holdIntvl", "holdIntvl", 18615, PropCategory.REGULAR)
    prop.label = "Hold Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 0), (3, 3600)]
    prop.defaultValue = 180
    prop.defaultValueStr = "180"
    meta.props.add("holdIntvl", prop)

    prop = PropMeta("str", "kaIntvl", "kaIntvl", 18614, PropCategory.REGULAR)
    prop.label = "Keepalive Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 3600)]
    prop.defaultValue = 60
    prop.defaultValueStr = "60"
    meta.props.add("kaIntvl", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 19343, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 17869, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "redistribute", "redistribute", 18609, PropCategory.REGULAR)
    prop.label = "Redistribute flags for routing protocols"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("bgp", "bgp", 8)
    prop._addConstant("connected", "connected", 1)
    prop._addConstant("ospf", "ospf", 4)
    prop._addConstant("static", "static", 2)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("redistribute", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rtrId", "rtrId", 17829, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("rtrId", prop)

    prop = PropMeta("str", "staleIntvl", "staleIntvl", 18616, PropCategory.REGULAR)
    prop.label = "Stale Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 3600)]
    prop.defaultValue = 300
    prop.defaultValueStr = "default"
    prop._addConstant("default", "default", 300)
    meta.props.add("staleIntvl", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

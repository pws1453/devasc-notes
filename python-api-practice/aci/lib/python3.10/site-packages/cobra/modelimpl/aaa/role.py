# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Role(Mo):
    """
    An AAA role is a set of attributes and privileges that describe what a user is authorized to perform.

    """

    meta = ClassMeta("cobra.model.aaa.Role")

    meta.moClassName = "aaaRole"
    meta.rnFormat = "role-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Role"
    meta.writeAccessMask = 0x3
    meta.readAccessMask = 0x3
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.aaa.UserEp")

    meta.superClasses.add("cobra.model.aaa.Definition")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Def")
    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('role-', True),
    ]

    prop = PropMeta("str", "annotation", "annotation", 37521, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5579, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 39660, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 1255, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.regex = ['[a-zA-Z][a-zA-Z0-9_.-]{0,31}']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "priv", "priv", 1256, PropCategory.REGULAR)
    prop.label = "Privilege"
    prop.isConfig = True
    prop.isAdmin = True
    prop._addConstant("aaa", "aaa", 2)
    prop._addConstant("access-connectivity-l1", "access-connectivity-l1", 17592186044416)
    prop._addConstant("access-connectivity-l2", "access-connectivity-l2", 35184372088832)
    prop._addConstant("access-connectivity-l3", "access-connectivity-l3", 70368744177664)
    prop._addConstant("access-connectivity-mgmt", "access-connectivity-mgmt", 140737488355328)
    prop._addConstant("access-connectivity-util", "access-connectivity-util", 281474976710656)
    prop._addConstant("access-equipment", "access-equipment", 36028797018963968)
    prop._addConstant("access-protocol-l1", "access-protocol-l1", 562949953421312)
    prop._addConstant("access-protocol-l2", "access-protocol-l2", 1125899906842624)
    prop._addConstant("access-protocol-l3", "access-protocol-l3", 2251799813685248)
    prop._addConstant("access-protocol-mgmt", "access-protocol-mgmt", 4503599627370496)
    prop._addConstant("access-protocol-ops", "access-protocol-ops", 18014398509481984)
    prop._addConstant("access-protocol-util", "access-protocol-util", 9007199254740992)
    prop._addConstant("access-qos", "access-qos", 72057594037927936)
    prop._addConstant("admin", "admin", 1)
    prop._addConstant("fabric-connectivity-l1", "fabric-connectivity-l1", 4294967296)
    prop._addConstant("fabric-connectivity-l2", "fabric-connectivity-l2", 8589934592)
    prop._addConstant("fabric-connectivity-l3", "fabric-connectivity-l3", 17179869184)
    prop._addConstant("fabric-connectivity-mgmt", "fabric-connectivity-mgmt", 34359738368)
    prop._addConstant("fabric-connectivity-util", "fabric-connectivity-util", 68719476736)
    prop._addConstant("fabric-equipment", "fabric-equipment", 8796093022208)
    prop._addConstant("fabric-protocol-l1", "fabric-protocol-l1", 137438953472)
    prop._addConstant("fabric-protocol-l2", "fabric-protocol-l2", 274877906944)
    prop._addConstant("fabric-protocol-l3", "fabric-protocol-l3", 549755813888)
    prop._addConstant("fabric-protocol-mgmt", "fabric-protocol-mgmt", 1099511627776)
    prop._addConstant("fabric-protocol-ops", "fabric-protocol-ops", 4398046511104)
    prop._addConstant("fabric-protocol-util", "fabric-protocol-util", 2199023255552)
    prop._addConstant("none", "none", 0)
    prop._addConstant("nw-svc-device", "nw-svc-device", 4611686018427387904)
    prop._addConstant("nw-svc-devshare", "nw-svc-devshare", 1152921504606846976)
    prop._addConstant("nw-svc-params", "nw-svc-params", 144115188075855872)
    prop._addConstant("nw-svc-policy", "nw-svc-policy", 2305843009213693952)
    prop._addConstant("ops", "ops", 576460752303423488)
    prop._addConstant("tenant-connectivity-l1", "tenant-connectivity-l1", 2048)
    prop._addConstant("tenant-connectivity-l2", "tenant-connectivity-l2", 4096)
    prop._addConstant("tenant-connectivity-l3", "tenant-connectivity-l3", 8192)
    prop._addConstant("tenant-connectivity-mgmt", "tenant-connectivity-mgmt", 16384)
    prop._addConstant("tenant-connectivity-util", "tenant-connectivit-util", 32768)
    prop._addConstant("tenant-epg", "tenant-epg", 1024)
    prop._addConstant("tenant-ext-connectivity-l1", "tenant-ext-connectivity-l1", 4194304)
    prop._addConstant("tenant-ext-connectivity-l2", "tenant-ext-connectivity-l2", 8388608)
    prop._addConstant("tenant-ext-connectivity-l3", "tenant-ext-connectivity-l3", 16777216)
    prop._addConstant("tenant-ext-connectivity-mgmt", "tenant-ext-connectivity-mgmt", 33554432)
    prop._addConstant("tenant-ext-connectivity-util", "tenant-ext-connectivity-util", 67108864)
    prop._addConstant("tenant-ext-protocol-l1", "tenant-ext-protocol-l1", 134217728)
    prop._addConstant("tenant-ext-protocol-l2", "tenant-ext-protocol-l2", 268435456)
    prop._addConstant("tenant-ext-protocol-l3", "tenant-ext-protocol-l3", 536870912)
    prop._addConstant("tenant-ext-protocol-mgmt", "tenant-ext-protocol-mgmt", 1073741824)
    prop._addConstant("tenant-ext-protocol-util", "tenant-ext-protocol-util", 2147483648)
    prop._addConstant("tenant-network-profile", "tenant-network-profile", 512)
    prop._addConstant("tenant-protocol-l1", "tenant-protocol-l1", 65536)
    prop._addConstant("tenant-protocol-l2", "tenant-protocol-l2", 131072)
    prop._addConstant("tenant-protocol-l3", "tenant-protocol-l3", 262144)
    prop._addConstant("tenant-protocol-mgmt", "tenant-protocol-mgmt", 524288)
    prop._addConstant("tenant-protocol-ops", "tenant-protocol-ops", 2097152)
    prop._addConstant("tenant-protocol-util", "tenant-protocol-util", 1048576)
    prop._addConstant("tenant-qos", "tenant-qos", 128)
    prop._addConstant("tenant-security", "tenant-security", 256)
    prop._addConstant("vmm-connectivity", "vmm-connectivity", 4)
    prop._addConstant("vmm-ep", "vmm-ep", 32)
    prop._addConstant("vmm-policy", "vmm-policy", 16)
    prop._addConstant("vmm-protocol-ops", "vmm-protocol-ops", 64)
    prop._addConstant("vmm-security", "vmm-security", 8)
    meta.props.add("priv", prop)

    prop = PropMeta("str", "resetToFactory", "resetToFactory", 17612, PropCategory.REGULAR)
    prop.label = "Trigger Reset to Factory settings"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", 0)
    prop._addConstant("yes", "yes", 1)
    meta.props.add("resetToFactory", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "roleIsBuiltin", "roleIsBuiltin", 17611, PropCategory.REGULAR)
    prop.label = "Role is Built-in"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", 0)
    prop._addConstant("yes", "yes", 1)
    meta.props.add("roleIsBuiltin", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Fabric"

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################

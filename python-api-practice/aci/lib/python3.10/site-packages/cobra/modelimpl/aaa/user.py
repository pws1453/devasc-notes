# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2020 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class User(Mo):
    """
    A locally-authenticated user account.

    """

    meta = ClassMeta("cobra.model.aaa.User")

    meta.moClassName = "aaaUser"
    meta.rnFormat = "user-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Local User"
    meta.writeAccessMask = 0x3
    meta.readAccessMask = 0x3
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.tag.Tag")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.aaa.UserCert")
    meta.childClasses.add("cobra.model.aaa.UserDomain")
    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.aaa.UserData")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.aaa.SshAuth")
    meta.childClasses.add("cobra.model.tag.Annotation")

    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.UserDomain", "userdomain-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.UserCert", "usercert-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.UserData", "userdata"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.SshAuth", "sshauth-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.aaa.UserEp")

    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.aaa.Definition")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Def")
    meta.superClasses.add("cobra.model.aaa.SystemUser")

    meta.rnPrefixes = [
        ('user-', True),
    ]

    prop = PropMeta("str", "accountStatus", "accountStatus", 1241, PropCategory.REGULAR)
    prop.label = "Account Status"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "active"
    prop._addConstant("active", "active", 0)
    prop._addConstant("blocked", "blocked", 2)
    prop._addConstant("inactive", "inactive", 1)
    meta.props.add("accountStatus", prop)

    prop = PropMeta("str", "annotation", "annotation", 37517, PropCategory.REGULAR)
    prop.label = "Annotation. Suggested format orchestrator:value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "certAttribute", "certAttribute", 42732, PropCategory.REGULAR)
    prop.label = "User Cert Attribute"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    meta.props.add("certAttribute", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "clearPwdHistory", "clearPwdHistory", 1245, PropCategory.REGULAR)
    prop.label = "Clear Password History"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", 0)
    prop._addConstant("yes", "yes", 1)
    meta.props.add("clearPwdHistory", prop)

    prop = PropMeta("str", "descr", "descr", 5579, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "email", "email", 1237, PropCategory.REGULAR)
    prop.label = "Email Address"
    prop.isConfig = True
    prop.isAdmin = True
    prop.regex = ['^$|^(?!.{64,})[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+$']
    meta.props.add("email", prop)

    prop = PropMeta("str", "expiration", "expiration", 1239, PropCategory.REGULAR)
    prop.label = "Account Expiration Date"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("expiration", prop)

    prop = PropMeta("str", "expires", "expires", 1240, PropCategory.REGULAR)
    prop.label = "Expiration Set Status"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", 0)
    prop._addConstant("yes", "yes", 1)
    meta.props.add("expires", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 39656, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "firstName", "firstName", 1235, PropCategory.REGULAR)
    prop.label = "First Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 32)]
    meta.props.add("firstName", prop)

    prop = PropMeta("str", "lastName", "lastName", 1236, PropCategory.REGULAR)
    prop.label = "Last Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 32)]
    meta.props.add("lastName", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14138, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 1234, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.regex = ['[a-zA-Z][a-zA-Z0-9_.-]{0,31}']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Name alias"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "otpenable", "otpenable", 33174, PropCategory.REGULAR)
    prop.label = "Otp Enable Flag"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", 0)
    prop._addConstant("yes", "yes", 1)
    meta.props.add("otpenable", prop)

    prop = PropMeta("str", "otpenf", "otpenf", 33470, PropCategory.REGULAR)
    prop.label = "Otp Enforced"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "yes"
    prop._addConstant("no", "no", 0)
    prop._addConstant("yes", "yes", 1)
    meta.props.add("otpenf", prop)

    prop = PropMeta("str", "otpkey", "otpkey", 33175, PropCategory.REGULAR)
    prop.label = "Otp Key"
    prop.isConfig = True
    prop.isAdmin = True
    prop.regex = ['[A-Z2-7]{16}']
    prop.defaultValue = "DISABLEDDISABLED"
    prop.defaultValueStr = "DISABLEDDISABLED"
    meta.props.add("otpkey", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "phone", "phone", 1238, PropCategory.REGULAR)
    prop.label = "Phone Number"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    meta.props.add("phone", prop)

    prop = PropMeta("str", "pwd", "pwd", 1242, PropCategory.REGULAR)
    prop.label = "Password"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isPassword = True
    prop.range = [(0, 256)]
    prop.regex = ['.*']
    meta.props.add("pwd", prop)

    prop = PropMeta("str", "pwdLifeTime", "pwdLifeTime", 1244, PropCategory.REGULAR)
    prop.label = "Password Life Time"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 3650)]
    prop._addConstant("no-password-expire", "no-password-expiration", 0)
    meta.props.add("pwdLifeTime", prop)

    prop = PropMeta("str", "pwdUpdateRequired", "pwdUpdateRequired", 33593, PropCategory.REGULAR)
    prop.label = "Password Update Required"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", 0)
    prop._addConstant("yes", "yes", 1)
    meta.props.add("pwdUpdateRequired", prop)

    prop = PropMeta("str", "rbacString", "rbacString", 33173, PropCategory.REGULAR)
    prop.label = "Domain Read Write rules for User"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 1024)]
    prop.regex = ['.*']
    meta.props.add("rbacString", prop)

    prop = PropMeta("str", "restrictedRbacUser", "restrictedRbacUser", 57107, PropCategory.REGULAR)
    prop.label = "Restricted RBAC User"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", 0)
    prop._addConstant("yes", "yes", 1)
    meta.props.add("restrictedRbacUser", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    prop = PropMeta("str", "unixUserId", "unixUserId", 1246, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(99, 24999)]
    meta.props.add("unixUserId", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Fabric"

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
